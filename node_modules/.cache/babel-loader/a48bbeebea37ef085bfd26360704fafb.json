{"ast":null,"code":"// Generated by IcedCoffeeScript 108.0.8\n(function () {\n  var ADRBG, PRNG, WordArray, XOR, browser_rng, e, generate, iced, m, more_entropy, native_rng, rng, util, __iced_k, __iced_k_noop, _browser_rng_primitive, _native_rng, _prng, _ref, _ref1;\n\n  iced = require('iced-runtime');\n\n  __iced_k = __iced_k_noop = function () {};\n\n  more_entropy = require('more-entropy');\n  ADRBG = require('./drbg').ADRBG;\n  WordArray = require('./wordarray').WordArray;\n  XOR = require('./combine').XOR;\n  util = require('./util');\n  _browser_rng_primitive = null;\n\n  browser_rng = function (n) {\n    var v;\n    v = new Uint8Array(n);\n\n    _browser_rng_primitive(v);\n\n    return new Buffer(v);\n  };\n\n  _browser_rng_primitive = (m = typeof window !== \"undefined\" && window !== null ? (_ref = window.crypto) != null ? _ref.getRandomValues : void 0 : void 0) != null ? m.bind(window.crypto) : (m = typeof window !== \"undefined\" && window !== null ? (_ref1 = window.msCrypto) != null ? _ref1.getRandomValues : void 0 : void 0) != null ? m.bind(window.msCrypto) : null;\n\n  if (_browser_rng_primitive != null) {\n    _native_rng = browser_rng;\n  } else {\n    try {\n      rng = require('cry' + 'pto').rng;\n\n      if (rng != null) {\n        _native_rng = rng;\n      }\n    } catch (_error) {\n      e = _error;\n    }\n  }\n\n  native_rng = function (x) {\n    if (_native_rng == null) {\n      throw new Error('No rng found; tried requiring \"crypto\" and window.crypto');\n    }\n\n    return _native_rng(x);\n  };\n\n  PRNG = function () {\n    function PRNG() {\n      this.meg = new more_entropy.Generator();\n      this.adrbg = new ADRBG(function (_this) {\n        return function (n, cb) {\n          return _this.gen_seed(n, cb);\n        };\n      }(this), XOR.sign);\n    }\n\n    PRNG.prototype.now_to_buffer = function () {\n      var buf, d, ms, s;\n      d = Date.now();\n      ms = d % 1000;\n      s = Math.floor(d / 1000);\n      buf = new Buffer(8);\n      buf.writeUInt32BE(s, 0);\n      buf.writeUInt32BE(ms, 4);\n      return buf;\n    };\n\n    PRNG.prototype.gen_seed = function (nbits, cb) {\n      var b, bufs, cat, nbytes, wa, words, ___iced_passed_deferral, __iced_deferrals, __iced_k;\n\n      __iced_k = __iced_k_noop;\n      ___iced_passed_deferral = iced.findDeferral(arguments);\n      nbytes = nbits / 8;\n      bufs = [];\n      bufs.push(this.now_to_buffer());\n      (function (_this) {\n        return function (__iced_k) {\n          __iced_deferrals = new iced.Deferrals(__iced_k, {\n            parent: ___iced_passed_deferral,\n            filename: \"/Users/max/src/keybase/triplesec/src/prng.iced\",\n            funcname: \"PRNG.gen_seed\"\n          });\n\n          _this.meg.generate(nbits, __iced_deferrals.defer({\n            assign_fn: function () {\n              return function () {\n                return words = arguments[0];\n              };\n            }(),\n            lineno: 83\n          }));\n\n          __iced_deferrals._fulfill();\n        };\n      })(this)(function (_this) {\n        return function () {\n          var _i, _len;\n\n          bufs.push(_this.now_to_buffer());\n          bufs.push(new Buffer(words));\n          bufs.push(native_rng(nbytes));\n          bufs.push(_this.now_to_buffer());\n          cat = Buffer.concat(bufs);\n          wa = WordArray.from_buffer(cat);\n          util.scrub_buffer(cat);\n\n          for (_i = 0, _len = bufs.length; _i < _len; _i++) {\n            b = bufs[_i];\n            util.scrub_buffer(b);\n          }\n\n          return cb(wa);\n        };\n      }(this));\n    };\n\n    PRNG.prototype.generate = function (n, cb) {\n      return this.adrbg.generate(n, cb);\n    };\n\n    return PRNG;\n  }();\n\n  _prng = null;\n\n  generate = function (n, cb) {\n    if (_prng == null) {\n      _prng = new PRNG();\n    }\n\n    return _prng.generate(n, cb);\n  };\n\n  exports.PRNG = PRNG;\n  exports.generate = generate;\n  exports.native_rng = native_rng;\n}).call(this);","map":{"version":3,"sources":["/home/os/Desktop/hello-world-tutorial/node_modules/triplesec/lib/prng.js"],"names":["ADRBG","PRNG","WordArray","XOR","browser_rng","e","generate","iced","m","more_entropy","native_rng","rng","util","__iced_k","__iced_k_noop","_browser_rng_primitive","_native_rng","_prng","_ref","_ref1","require","n","v","Uint8Array","Buffer","window","crypto","getRandomValues","bind","msCrypto","_error","x","Error","meg","Generator","adrbg","_this","cb","gen_seed","sign","prototype","now_to_buffer","buf","d","ms","s","Date","now","Math","floor","writeUInt32BE","nbits","b","bufs","cat","nbytes","wa","words","___iced_passed_deferral","__iced_deferrals","findDeferral","arguments","push","Deferrals","parent","filename","funcname","defer","assign_fn","lineno","_fulfill","_i","_len","concat","from_buffer","scrub_buffer","length","exports","call"],"mappings":"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","sourcesContent":["// Generated by IcedCoffeeScript 108.0.8\n(function() {\n  var ADRBG, PRNG, WordArray, XOR, browser_rng, e, generate, iced, m, more_entropy, native_rng, rng, util, __iced_k, __iced_k_noop, _browser_rng_primitive, _native_rng, _prng, _ref, _ref1;\n\n  iced = require('iced-runtime');\n  __iced_k = __iced_k_noop = function() {};\n\n  more_entropy = require('more-entropy');\n\n  ADRBG = require('./drbg').ADRBG;\n\n  WordArray = require('./wordarray').WordArray;\n\n  XOR = require('./combine').XOR;\n\n  util = require('./util');\n\n  _browser_rng_primitive = null;\n\n  browser_rng = function(n) {\n    var v;\n    v = new Uint8Array(n);\n    _browser_rng_primitive(v);\n    return new Buffer(v);\n  };\n\n  _browser_rng_primitive = (m = typeof window !== \"undefined\" && window !== null ? (_ref = window.crypto) != null ? _ref.getRandomValues : void 0 : void 0) != null ? m.bind(window.crypto) : (m = typeof window !== \"undefined\" && window !== null ? (_ref1 = window.msCrypto) != null ? _ref1.getRandomValues : void 0 : void 0) != null ? m.bind(window.msCrypto) : null;\n\n  if (_browser_rng_primitive != null) {\n    _native_rng = browser_rng;\n  } else {\n    try {\n      rng = require('cry' + 'pto').rng;\n      if (rng != null) {\n        _native_rng = rng;\n      }\n    } catch (_error) {\n      e = _error;\n    }\n  }\n\n  native_rng = function(x) {\n    if (_native_rng == null) {\n      throw new Error('No rng found; tried requiring \"crypto\" and window.crypto');\n    }\n    return _native_rng(x);\n  };\n\n  PRNG = (function() {\n    function PRNG() {\n      this.meg = new more_entropy.Generator();\n      this.adrbg = new ADRBG(((function(_this) {\n        return function(n, cb) {\n          return _this.gen_seed(n, cb);\n        };\n      })(this)), XOR.sign);\n    }\n\n    PRNG.prototype.now_to_buffer = function() {\n      var buf, d, ms, s;\n      d = Date.now();\n      ms = d % 1000;\n      s = Math.floor(d / 1000);\n      buf = new Buffer(8);\n      buf.writeUInt32BE(s, 0);\n      buf.writeUInt32BE(ms, 4);\n      return buf;\n    };\n\n    PRNG.prototype.gen_seed = function(nbits, cb) {\n      var b, bufs, cat, nbytes, wa, words, ___iced_passed_deferral, __iced_deferrals, __iced_k;\n      __iced_k = __iced_k_noop;\n      ___iced_passed_deferral = iced.findDeferral(arguments);\n      nbytes = nbits / 8;\n      bufs = [];\n      bufs.push(this.now_to_buffer());\n      (function(_this) {\n        return (function(__iced_k) {\n          __iced_deferrals = new iced.Deferrals(__iced_k, {\n            parent: ___iced_passed_deferral,\n            filename: \"/Users/max/src/keybase/triplesec/src/prng.iced\",\n            funcname: \"PRNG.gen_seed\"\n          });\n          _this.meg.generate(nbits, __iced_deferrals.defer({\n            assign_fn: (function() {\n              return function() {\n                return words = arguments[0];\n              };\n            })(),\n            lineno: 83\n          }));\n          __iced_deferrals._fulfill();\n        });\n      })(this)((function(_this) {\n        return function() {\n          var _i, _len;\n          bufs.push(_this.now_to_buffer());\n          bufs.push(new Buffer(words));\n          bufs.push(native_rng(nbytes));\n          bufs.push(_this.now_to_buffer());\n          cat = Buffer.concat(bufs);\n          wa = WordArray.from_buffer(cat);\n          util.scrub_buffer(cat);\n          for (_i = 0, _len = bufs.length; _i < _len; _i++) {\n            b = bufs[_i];\n            util.scrub_buffer(b);\n          }\n          return cb(wa);\n        };\n      })(this));\n    };\n\n    PRNG.prototype.generate = function(n, cb) {\n      return this.adrbg.generate(n, cb);\n    };\n\n    return PRNG;\n\n  })();\n\n  _prng = null;\n\n  generate = function(n, cb) {\n    if (_prng == null) {\n      _prng = new PRNG();\n    }\n    return _prng.generate(n, cb);\n  };\n\n  exports.PRNG = PRNG;\n\n  exports.generate = generate;\n\n  exports.native_rng = native_rng;\n\n}).call(this);\n"]},"metadata":{},"sourceType":"script"}