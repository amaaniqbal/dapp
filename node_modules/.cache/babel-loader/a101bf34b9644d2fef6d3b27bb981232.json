{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n* @ignore\n*/\n\nexports.ERROR_CODES = {\n  MISSING_PARAMETER: 'missing_parameter',\n  REMOTE_SERVICE_ERROR: 'remote_service_error',\n  INVALID_STATE: 'invalid_state',\n  NO_SESSION_DATA: 'no_session_data',\n  UNKNOWN: 'unknown'\n};\nObject.freeze(exports.ERROR_CODES);\n/**\n* @ignore\n*/\n\nclass BlockstackError extends Error {\n  constructor(error) {\n    super(error.message);\n    this.message = error.message;\n    this.code = error.code;\n    this.parameter = error.parameter ? error.parameter : null;\n  }\n\n  toString() {\n    return `${super.toString()}\n    code: ${this.code} param: ${this.parameter ? this.parameter : 'n/a'}`;\n  }\n\n}\n\nexports.BlockstackError = BlockstackError;\n/**\n* @ignore\n*/\n\nclass FileNotFound extends BlockstackError {\n  constructor(message) {\n    super({\n      message,\n      code: 'file_not_found'\n    });\n    this.name = 'FileNotFound';\n  }\n\n}\n\nexports.FileNotFound = FileNotFound;\n/**\n* @ignore\n*/\n\nclass InvalidParameterError extends BlockstackError {\n  constructor(parameter, message = '') {\n    super({\n      code: 'missing_parameter',\n      message,\n      parameter: ''\n    });\n    this.name = 'MissingParametersError';\n  }\n\n}\n\nexports.InvalidParameterError = InvalidParameterError;\n/**\n* @ignore\n*/\n\nclass MissingParameterError extends BlockstackError {\n  constructor(parameter, message = '') {\n    super({\n      code: exports.ERROR_CODES.MISSING_PARAMETER,\n      message,\n      parameter\n    });\n    this.name = 'MissingParametersError';\n  }\n\n}\n\nexports.MissingParameterError = MissingParameterError;\n/**\n* @ignore\n*/\n\nclass RemoteServiceError extends BlockstackError {\n  constructor(response, message = '') {\n    super({\n      code: exports.ERROR_CODES.REMOTE_SERVICE_ERROR,\n      message\n    });\n    this.response = response;\n  }\n\n}\n\nexports.RemoteServiceError = RemoteServiceError;\n/**\n* @ignore\n*/\n\nclass InvalidDIDError extends BlockstackError {\n  constructor(message = '') {\n    super({\n      code: 'invalid_did_error',\n      message\n    });\n    this.name = 'InvalidDIDError';\n  }\n\n}\n\nexports.InvalidDIDError = InvalidDIDError;\n/**\n* @ignore\n*/\n\nclass NotEnoughFundsError extends BlockstackError {\n  constructor(leftToFund) {\n    const message = `Not enough UTXOs to fund. Left to fund: ${leftToFund}`;\n    super({\n      code: 'not_enough_error',\n      message\n    });\n    this.leftToFund = leftToFund;\n    this.name = 'NotEnoughFundsError';\n    this.message = message;\n  }\n\n}\n\nexports.NotEnoughFundsError = NotEnoughFundsError;\n/**\n* @ignore\n*/\n\nclass InvalidAmountError extends BlockstackError {\n  constructor(fees, specifiedAmount) {\n    const message = `Not enough coin to fund fees transaction fees. Fees would be ${fees},` + ` specified spend is  ${specifiedAmount}`;\n    super({\n      code: 'invalid_amount_error',\n      message\n    });\n    this.specifiedAmount = specifiedAmount;\n    this.fees = fees;\n    this.name = 'InvalidAmountError';\n    this.message = message;\n  }\n\n}\n\nexports.InvalidAmountError = InvalidAmountError;\n/**\n* @ignore\n*/\n\nclass LoginFailedError extends BlockstackError {\n  constructor(reason) {\n    const message = `Failed to login: ${reason}`;\n    super({\n      code: 'login_failed',\n      message\n    });\n    this.message = message;\n    this.name = 'LoginFailedError';\n  }\n\n}\n\nexports.LoginFailedError = LoginFailedError;\n/**\n* @ignore\n*/\n\nclass SignatureVerificationError extends BlockstackError {\n  constructor(reason) {\n    const message = `Failed to verify signature: ${reason}`;\n    super({\n      code: 'signature_verification_failure',\n      message\n    });\n    this.message = message;\n    this.name = 'SignatureVerificationError';\n  }\n\n}\n\nexports.SignatureVerificationError = SignatureVerificationError;\n/**\n* @ignore\n*/\n\nclass InvalidStateError extends BlockstackError {\n  constructor(message) {\n    super({\n      code: exports.ERROR_CODES.INVALID_STATE,\n      message\n    });\n    this.message = message;\n    this.name = 'InvalidStateError';\n  }\n\n}\n\nexports.InvalidStateError = InvalidStateError;\n/**\n* @ignore\n*/\n\nclass NoSessionDataError extends BlockstackError {\n  constructor(message) {\n    super({\n      code: exports.ERROR_CODES.INVALID_STATE,\n      message\n    });\n    this.message = message;\n    this.name = 'NoSessionDataError';\n  }\n\n}\n\nexports.NoSessionDataError = NoSessionDataError;","map":{"version":3,"sources":["../src/errors.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n* @ignore\n*/\nexports.ERROR_CODES = {\n    MISSING_PARAMETER: 'missing_parameter',\n    REMOTE_SERVICE_ERROR: 'remote_service_error',\n    INVALID_STATE: 'invalid_state',\n    NO_SESSION_DATA: 'no_session_data',\n    UNKNOWN: 'unknown'\n};\nObject.freeze(exports.ERROR_CODES);\n/**\n* @ignore\n*/\nclass BlockstackError extends Error {\n    constructor(error) {\n        super(error.message);\n        this.message = error.message;\n        this.code = error.code;\n        this.parameter = error.parameter ? error.parameter : null;\n    }\n    toString() {\n        return `${super.toString()}\n    code: ${this.code} param: ${this.parameter ? this.parameter : 'n/a'}`;\n    }\n}\nexports.BlockstackError = BlockstackError;\n/**\n* @ignore\n*/\nclass FileNotFound extends BlockstackError {\n    constructor(message) {\n        super({ message, code: 'file_not_found' });\n        this.name = 'FileNotFound';\n    }\n}\nexports.FileNotFound = FileNotFound;\n/**\n* @ignore\n*/\nclass InvalidParameterError extends BlockstackError {\n    constructor(parameter, message = '') {\n        super({ code: 'missing_parameter', message, parameter: '' });\n        this.name = 'MissingParametersError';\n    }\n}\nexports.InvalidParameterError = InvalidParameterError;\n/**\n* @ignore\n*/\nclass MissingParameterError extends BlockstackError {\n    constructor(parameter, message = '') {\n        super({ code: exports.ERROR_CODES.MISSING_PARAMETER, message, parameter });\n        this.name = 'MissingParametersError';\n    }\n}\nexports.MissingParameterError = MissingParameterError;\n/**\n* @ignore\n*/\nclass RemoteServiceError extends BlockstackError {\n    constructor(response, message = '') {\n        super({ code: exports.ERROR_CODES.REMOTE_SERVICE_ERROR, message });\n        this.response = response;\n    }\n}\nexports.RemoteServiceError = RemoteServiceError;\n/**\n* @ignore\n*/\nclass InvalidDIDError extends BlockstackError {\n    constructor(message = '') {\n        super({ code: 'invalid_did_error', message });\n        this.name = 'InvalidDIDError';\n    }\n}\nexports.InvalidDIDError = InvalidDIDError;\n/**\n* @ignore\n*/\nclass NotEnoughFundsError extends BlockstackError {\n    constructor(leftToFund) {\n        const message = `Not enough UTXOs to fund. Left to fund: ${leftToFund}`;\n        super({ code: 'not_enough_error', message });\n        this.leftToFund = leftToFund;\n        this.name = 'NotEnoughFundsError';\n        this.message = message;\n    }\n}\nexports.NotEnoughFundsError = NotEnoughFundsError;\n/**\n* @ignore\n*/\nclass InvalidAmountError extends BlockstackError {\n    constructor(fees, specifiedAmount) {\n        const message = `Not enough coin to fund fees transaction fees. Fees would be ${fees},`\n            + ` specified spend is  ${specifiedAmount}`;\n        super({ code: 'invalid_amount_error', message });\n        this.specifiedAmount = specifiedAmount;\n        this.fees = fees;\n        this.name = 'InvalidAmountError';\n        this.message = message;\n    }\n}\nexports.InvalidAmountError = InvalidAmountError;\n/**\n* @ignore\n*/\nclass LoginFailedError extends BlockstackError {\n    constructor(reason) {\n        const message = `Failed to login: ${reason}`;\n        super({ code: 'login_failed', message });\n        this.message = message;\n        this.name = 'LoginFailedError';\n    }\n}\nexports.LoginFailedError = LoginFailedError;\n/**\n* @ignore\n*/\nclass SignatureVerificationError extends BlockstackError {\n    constructor(reason) {\n        const message = `Failed to verify signature: ${reason}`;\n        super({ code: 'signature_verification_failure', message });\n        this.message = message;\n        this.name = 'SignatureVerificationError';\n    }\n}\nexports.SignatureVerificationError = SignatureVerificationError;\n/**\n* @ignore\n*/\nclass InvalidStateError extends BlockstackError {\n    constructor(message) {\n        super({ code: exports.ERROR_CODES.INVALID_STATE, message });\n        this.message = message;\n        this.name = 'InvalidStateError';\n    }\n}\nexports.InvalidStateError = InvalidStateError;\n/**\n* @ignore\n*/\nclass NoSessionDataError extends BlockstackError {\n    constructor(message) {\n        super({ code: exports.ERROR_CODES.INVALID_STATE, message });\n        this.message = message;\n        this.name = 'NoSessionDataError';\n    }\n}\nexports.NoSessionDataError = NoSessionDataError;\n//# sourceMappingURL=errors.js.map"]},"metadata":{},"sourceType":"script"}