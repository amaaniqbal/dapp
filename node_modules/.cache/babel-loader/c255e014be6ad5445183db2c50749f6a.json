{"ast":null,"code":"// Generated by IcedCoffeeScript 108.0.8\n(function () {\n  var AES,\n      Base,\n      CURRENT_VERSION,\n      Concat,\n      Encryptor,\n      HMAC_SHA256,\n      PBKDF2,\n      SHA512,\n      Scrypt,\n      TwoFish,\n      V,\n      WordArray,\n      XOR,\n      ctr,\n      encrypt,\n      iced,\n      make_esc,\n      prng,\n      salsa20,\n      util,\n      __iced_k,\n      __iced_k_noop,\n      _ref,\n      __hasProp = {}.hasOwnProperty,\n      __extends = function (child, parent) {\n    for (var key in parent) {\n      if (__hasProp.call(parent, key)) child[key] = parent[key];\n    }\n\n    function ctor() {\n      this.constructor = child;\n    }\n\n    ctor.prototype = parent.prototype;\n    child.prototype = new ctor();\n    child.__super__ = parent.prototype;\n    return child;\n  };\n\n  iced = require('iced-runtime');\n\n  __iced_k = __iced_k_noop = function () {};\n\n  WordArray = require('./wordarray').WordArray;\n  salsa20 = require('./salsa20');\n  AES = require('./aes').AES;\n  TwoFish = require('./twofish').TwoFish;\n  ctr = require('./ctr');\n  _ref = require('./combine'), XOR = _ref.XOR, Concat = _ref.Concat;\n  SHA512 = require('./sha512').SHA512;\n  PBKDF2 = require('./pbkdf2').PBKDF2;\n  Scrypt = require('./scrypt').Scrypt;\n  util = require('./util');\n  prng = require('./prng');\n  make_esc = require('iced-error').make_esc;\n  HMAC_SHA256 = require('./hmac').HMAC_SHA256;\n  V = {\n    \"1\": {\n      header: [0x1c94d7de, 1],\n      salt_size: 8,\n      xsalsa20_rev: true,\n      kdf: {\n        klass: PBKDF2,\n        opts: {\n          c: 1024,\n          klass: XOR\n        }\n      },\n      hmac_key_size: 768 / 8,\n      version: 1\n    },\n    \"2\": {\n      header: [0x1c94d7de, 2],\n      salt_size: 16,\n      xsalsa20_rev: true,\n      kdf: {\n        klass: Scrypt,\n        opts: {\n          c: 64,\n          klass: XOR,\n          N: 12,\n          r: 8,\n          p: 1\n        }\n      },\n      hmac_key_size: 768 / 8,\n      version: 2\n    },\n    \"3\": {\n      header: [0x1c94d7de, 3],\n      salt_size: 16,\n      xsalsa20_rev: false,\n      kdf: {\n        klass: Scrypt,\n        opts: {\n          c: 1,\n          klass: HMAC_SHA256,\n          N: 15,\n          r: 8,\n          p: 1\n        }\n      },\n      hmac_key_size: 768 / 8,\n      version: 3\n    }\n  };\n  exports.CURRENT_VERSION = CURRENT_VERSION = 3;\n\n  Base = function () {\n    function Base(_arg) {\n      var key, version;\n      key = _arg.key, version = _arg.version;\n      this.version = V[version != null ? version : CURRENT_VERSION];\n\n      if (this.version == null) {\n        throw new Error(\"unknown version: \" + version);\n      }\n\n      this.set_key(key);\n      this.derived_keys = {};\n    }\n\n    Base.prototype.kdf = function (_arg, cb) {\n      var args, dkLen, end, extra_keymaterial, i, k, key, keys, len, lens, order, progress_hook, raw, salt, salt_hex, v, ___iced_passed_deferral, __iced_deferrals, __iced_k;\n\n      __iced_k = __iced_k_noop;\n      ___iced_passed_deferral = iced.findDeferral(arguments);\n      salt = _arg.salt, extra_keymaterial = _arg.extra_keymaterial, progress_hook = _arg.progress_hook;\n      (function (_this) {\n        return function (__iced_k) {\n          __iced_deferrals = new iced.Deferrals(__iced_k, {\n            parent: ___iced_passed_deferral,\n            filename: \"/Users/max/src/keybase/triplesec/src/enc.iced\",\n            funcname: \"Base.kdf\"\n          });\n\n          _this._check_scrubbed(_this.key, \"in KDF\", cb, __iced_deferrals.defer({\n            lineno: 97\n          }));\n\n          __iced_deferrals._fulfill();\n        };\n      })(this)(function (_this) {\n        return function () {\n          salt_hex = salt.to_hex();\n          key = _this.key.clone();\n\n          (function (__iced_k) {\n            __iced_deferrals = new iced.Deferrals(__iced_k, {\n              parent: ___iced_passed_deferral,\n              filename: \"/Users/max/src/keybase/triplesec/src/enc.iced\",\n              funcname: \"Base.kdf\"\n            });\n\n            _this._check_scrubbed(key, \"KDF\", cb, __iced_deferrals.defer({\n              lineno: 105\n            }));\n\n            __iced_deferrals._fulfill();\n          })(function () {\n            (function (__iced_k) {\n              if ((keys = _this.derived_keys[salt_hex]) == null) {\n                _this._kdf = new _this.version.kdf.klass(_this.version.kdf.opts);\n                lens = {\n                  hmac: _this.version.hmac_key_size,\n                  aes: AES.keySize,\n                  twofish: TwoFish.keySize,\n                  salsa20: salsa20.Salsa20.keySize\n                };\n                order = ['hmac', 'aes', 'twofish', 'salsa20'];\n                dkLen = extra_keymaterial || 0;\n\n                for (k in lens) {\n                  v = lens[k];\n                  dkLen += v;\n                }\n\n                args = {\n                  dkLen: dkLen,\n                  key: key,\n                  progress_hook: progress_hook,\n                  salt: salt\n                };\n\n                (function (__iced_k) {\n                  __iced_deferrals = new iced.Deferrals(__iced_k, {\n                    parent: ___iced_passed_deferral,\n                    filename: \"/Users/max/src/keybase/triplesec/src/enc.iced\",\n                    funcname: \"Base.kdf\"\n                  });\n\n                  _this._kdf.run(args, __iced_deferrals.defer({\n                    assign_fn: function () {\n                      return function () {\n                        return raw = arguments[0];\n                      };\n                    }(),\n                    lineno: 124\n                  }));\n\n                  __iced_deferrals._fulfill();\n                })(function () {\n                  var _i, _len;\n\n                  keys = {};\n                  i = 0;\n\n                  for (_i = 0, _len = order.length; _i < _len; _i++) {\n                    k = order[_i];\n                    v = lens[k];\n                    len = v / 4;\n                    end = i + len;\n                    keys[k] = new WordArray(raw.words.slice(i, end));\n                    i = end;\n                  }\n\n                  keys.extra = new WordArray(raw.words.slice(end)).to_buffer();\n                  return __iced_k(_this.derived_keys[salt_hex] = keys);\n                });\n              } else {\n                return __iced_k();\n              }\n            })(function () {\n              return cb(null, keys);\n            });\n          });\n        };\n      }(this));\n    };\n\n    Base.prototype.set_key = function (key) {\n      var wakey;\n\n      if (key != null) {\n        wakey = WordArray.from_buffer(key);\n\n        if (!this.key || !this.key.equal(wakey)) {\n          this.scrub();\n          return this.key = wakey;\n        }\n      } else {\n        return this.scrub();\n      }\n    };\n\n    Base.prototype._check_scrubbed = function (key, where, ecb, okcb) {\n      if (key != null && !key.is_scrubbed()) {\n        return okcb();\n      } else {\n        return ecb(new Error(\"\" + where + \": Failed due to scrubbed key!\"), null);\n      }\n    };\n\n    Base.prototype.sign = function (_arg, cb) {\n      var input, key, out, progress_hook, salt, ___iced_passed_deferral, __iced_deferrals, __iced_k;\n\n      __iced_k = __iced_k_noop;\n      ___iced_passed_deferral = iced.findDeferral(arguments);\n      input = _arg.input, key = _arg.key, salt = _arg.salt, progress_hook = _arg.progress_hook;\n      (function (_this) {\n        return function (__iced_k) {\n          __iced_deferrals = new iced.Deferrals(__iced_k, {\n            parent: ___iced_passed_deferral,\n            filename: \"/Users/max/src/keybase/triplesec/src/enc.iced\",\n            funcname: \"Base.sign\"\n          });\n\n          _this._check_scrubbed(key, \"HMAC\", cb, __iced_deferrals.defer({\n            lineno: 182\n          }));\n\n          __iced_deferrals._fulfill();\n        };\n      })(this)(function (_this) {\n        return function () {\n          input = new WordArray(_this.version.header).concat(salt).concat(input);\n\n          (function (__iced_k) {\n            __iced_deferrals = new iced.Deferrals(__iced_k, {\n              parent: ___iced_passed_deferral,\n              filename: \"/Users/max/src/keybase/triplesec/src/enc.iced\",\n              funcname: \"Base.sign\"\n            });\n            Concat.bulk_sign({\n              key: key,\n              input: input,\n              progress_hook: progress_hook\n            }, __iced_deferrals.defer({\n              assign_fn: function () {\n                return function () {\n                  return out = arguments[0];\n                };\n              }(),\n              lineno: 184\n            }));\n\n            __iced_deferrals._fulfill();\n          })(function () {\n            input.scrub();\n            return cb(null, out);\n          });\n        };\n      }(this));\n    };\n\n    Base.prototype.run_salsa20 = function (_arg, cb) {\n      var args, ct, input, iv, key, output_iv, progress_hook, ___iced_passed_deferral, __iced_deferrals, __iced_k;\n\n      __iced_k = __iced_k_noop;\n      ___iced_passed_deferral = iced.findDeferral(arguments);\n      input = _arg.input, key = _arg.key, iv = _arg.iv, output_iv = _arg.output_iv, progress_hook = _arg.progress_hook;\n      (function (_this) {\n        return function (__iced_k) {\n          __iced_deferrals = new iced.Deferrals(__iced_k, {\n            parent: ___iced_passed_deferral,\n            filename: \"/Users/max/src/keybase/triplesec/src/enc.iced\",\n            funcname: \"Base.run_salsa20\"\n          });\n\n          _this._check_scrubbed(key, \"Salsa20\", cb, __iced_deferrals.defer({\n            lineno: 200\n          }));\n\n          __iced_deferrals._fulfill();\n        };\n      })(this)(function (_this) {\n        return function () {\n          args = {\n            input: input,\n            progress_hook: progress_hook,\n            key: key,\n            iv: iv\n          };\n\n          if (_this.version.xsalsa20_rev) {\n            args.key = key.clone().endian_reverse();\n            args.iv = iv.clone().endian_reverse();\n          }\n\n          (function (__iced_k) {\n            __iced_deferrals = new iced.Deferrals(__iced_k, {\n              parent: ___iced_passed_deferral,\n              filename: \"/Users/max/src/keybase/triplesec/src/enc.iced\",\n              funcname: \"Base.run_salsa20\"\n            });\n            salsa20.bulk_encrypt(args, __iced_deferrals.defer({\n              assign_fn: function () {\n                return function () {\n                  return ct = arguments[0];\n                };\n              }(),\n              lineno: 212\n            }));\n\n            __iced_deferrals._fulfill();\n          })(function () {\n            if (output_iv) {\n              ct = iv.clone().concat(ct);\n            }\n\n            if (_this.version.xsalsa20_rev) {\n              args.key.scrub();\n              args.iv.scrub();\n            }\n\n            return cb(null, ct);\n          });\n        };\n      }(this));\n    };\n\n    Base.prototype.run_twofish = function (_arg, cb) {\n      var block_cipher, ct, input, iv, key, progress_hook, ___iced_passed_deferral, __iced_deferrals, __iced_k;\n\n      __iced_k = __iced_k_noop;\n      ___iced_passed_deferral = iced.findDeferral(arguments);\n      input = _arg.input, key = _arg.key, iv = _arg.iv, progress_hook = _arg.progress_hook;\n      (function (_this) {\n        return function (__iced_k) {\n          __iced_deferrals = new iced.Deferrals(__iced_k, {\n            parent: ___iced_passed_deferral,\n            filename: \"/Users/max/src/keybase/triplesec/src/enc.iced\",\n            funcname: \"Base.run_twofish\"\n          });\n\n          _this._check_scrubbed(key, \"TwoFish\", cb, __iced_deferrals.defer({\n            lineno: 235\n          }));\n\n          __iced_deferrals._fulfill();\n        };\n      })(this)(function (_this) {\n        return function () {\n          block_cipher = new TwoFish(key);\n\n          (function (__iced_k) {\n            __iced_deferrals = new iced.Deferrals(__iced_k, {\n              parent: ___iced_passed_deferral,\n              filename: \"/Users/max/src/keybase/triplesec/src/enc.iced\",\n              funcname: \"Base.run_twofish\"\n            });\n            ctr.bulk_encrypt({\n              block_cipher: block_cipher,\n              iv: iv,\n              input: input,\n              progress_hook: progress_hook,\n              what: \"twofish\"\n            }, __iced_deferrals.defer({\n              assign_fn: function () {\n                return function () {\n                  return ct = arguments[0];\n                };\n              }(),\n              lineno: 237\n            }));\n\n            __iced_deferrals._fulfill();\n          })(function () {\n            block_cipher.scrub();\n            return cb(null, iv.clone().concat(ct));\n          });\n        };\n      }(this));\n    };\n\n    Base.prototype.run_aes = function (_arg, cb) {\n      var block_cipher, ct, input, iv, key, progress_hook, ___iced_passed_deferral, __iced_deferrals, __iced_k;\n\n      __iced_k = __iced_k_noop;\n      ___iced_passed_deferral = iced.findDeferral(arguments);\n      input = _arg.input, key = _arg.key, iv = _arg.iv, progress_hook = _arg.progress_hook;\n      (function (_this) {\n        return function (__iced_k) {\n          __iced_deferrals = new iced.Deferrals(__iced_k, {\n            parent: ___iced_passed_deferral,\n            filename: \"/Users/max/src/keybase/triplesec/src/enc.iced\",\n            funcname: \"Base.run_aes\"\n          });\n\n          _this._check_scrubbed(key, \"AES\", cb, __iced_deferrals.defer({\n            lineno: 252\n          }));\n\n          __iced_deferrals._fulfill();\n        };\n      })(this)(function (_this) {\n        return function () {\n          block_cipher = new AES(key);\n\n          (function (__iced_k) {\n            __iced_deferrals = new iced.Deferrals(__iced_k, {\n              parent: ___iced_passed_deferral,\n              filename: \"/Users/max/src/keybase/triplesec/src/enc.iced\",\n              funcname: \"Base.run_aes\"\n            });\n            ctr.bulk_encrypt({\n              block_cipher: block_cipher,\n              iv: iv,\n              input: input,\n              progress_hook: progress_hook,\n              what: \"aes\"\n            }, __iced_deferrals.defer({\n              assign_fn: function () {\n                return function () {\n                  return ct = arguments[0];\n                };\n              }(),\n              lineno: 254\n            }));\n\n            __iced_deferrals._fulfill();\n          })(function () {\n            block_cipher.scrub();\n            return cb(null, iv.clone().concat(ct));\n          });\n        };\n      }(this));\n    };\n\n    Base.prototype.scrub = function () {\n      var algo, key, key_ring, salt, _ref1;\n\n      if (this.key != null) {\n        this.key.scrub();\n      }\n\n      if (this.derived_keys != null) {\n        _ref1 = this.derived_keys;\n\n        for (salt in _ref1) {\n          key_ring = _ref1[salt];\n\n          for (algo in key_ring) {\n            key = key_ring[algo];\n\n            if (algo !== 'extra') {\n              key.scrub();\n            }\n          }\n        }\n      }\n\n      this.derived_keys = {};\n\n      if (this.salt != null) {\n        this.salt.scrub();\n      }\n\n      this.salt = null;\n      return this.key = null;\n    };\n\n    Base.prototype.clone_derived_keys = function () {\n      var algo, key, key_ring, ret, salt, _ref1;\n\n      ret = null;\n\n      if (this.derived_keys != null) {\n        ret = {};\n        _ref1 = this.derived_keys;\n\n        for (salt in _ref1) {\n          key_ring = _ref1[salt];\n          ret[salt] = {};\n\n          for (algo in key_ring) {\n            key = key_ring[algo];\n            ret[salt][algo] = algo === 'extra' ? key : key.clone();\n          }\n        }\n      }\n\n      return ret;\n    };\n\n    return Base;\n  }();\n\n  Encryptor = function (_super) {\n    __extends(Encryptor, _super);\n\n    function Encryptor(_arg) {\n      var key, rng, version;\n      key = _arg.key, rng = _arg.rng, version = _arg.version;\n\n      Encryptor.__super__.constructor.call(this, {\n        key: key,\n        version: version\n      });\n\n      this.rng = rng || prng.generate;\n    }\n\n    Encryptor.prototype.pick_random_ivs = function (_arg, cb) {\n      var iv_lens, ivs, k, progress_hook, v, ___iced_passed_deferral, __iced_deferrals, __iced_k;\n\n      __iced_k = __iced_k_noop;\n      ___iced_passed_deferral = iced.findDeferral(arguments);\n      progress_hook = _arg.progress_hook;\n      iv_lens = {\n        aes: AES.ivSize,\n        twofish: TwoFish.ivSize,\n        salsa20: salsa20.Salsa20.ivSize\n      };\n      ivs = {};\n      (function (_this) {\n        return function (__iced_k) {\n          var _i, _k, _keys, _ref1, _results, _while;\n\n          _ref1 = iv_lens;\n\n          _keys = function () {\n            var _results1;\n\n            _results1 = [];\n\n            for (_k in _ref1) {\n              _results1.push(_k);\n            }\n\n            return _results1;\n          }();\n\n          _i = 0;\n\n          _while = function (__iced_k) {\n            var _break, _continue, _next;\n\n            _break = __iced_k;\n\n            _continue = function () {\n              return iced.trampoline(function () {\n                ++_i;\n                return _while(__iced_k);\n              });\n            };\n\n            _next = _continue;\n\n            if (!(_i < _keys.length)) {\n              return _break();\n            } else {\n              k = _keys[_i];\n              v = _ref1[k];\n\n              (function (__iced_k) {\n                __iced_deferrals = new iced.Deferrals(__iced_k, {\n                  parent: ___iced_passed_deferral,\n                  filename: \"/Users/max/src/keybase/triplesec/src/enc.iced\",\n                  funcname: \"Encryptor.pick_random_ivs\"\n                });\n\n                _this.rng(v, __iced_deferrals.defer({\n                  assign_fn: function (__slot_1, __slot_2) {\n                    return function () {\n                      return __slot_1[__slot_2] = arguments[0];\n                    };\n                  }(ivs, k),\n                  lineno: 377\n                }));\n\n                __iced_deferrals._fulfill();\n              })(_next);\n            }\n          };\n\n          _while(__iced_k);\n        };\n      })(this)(function (_this) {\n        return function () {\n          return cb(ivs);\n        };\n      }(this));\n    };\n\n    Encryptor.prototype.resalt = function (_arg, cb) {\n      var err, extra_keymaterial, progress_hook, salt, ___iced_passed_deferral, __iced_deferrals, __iced_k;\n\n      __iced_k = __iced_k_noop;\n      ___iced_passed_deferral = iced.findDeferral(arguments);\n      salt = _arg.salt, extra_keymaterial = _arg.extra_keymaterial, progress_hook = _arg.progress_hook;\n      err = null;\n      (function (_this) {\n        return function (__iced_k) {\n          if (salt == null) {\n            (function (__iced_k) {\n              __iced_deferrals = new iced.Deferrals(__iced_k, {\n                parent: ___iced_passed_deferral,\n                filename: \"/Users/max/src/keybase/triplesec/src/enc.iced\",\n                funcname: \"Encryptor.resalt\"\n              });\n\n              _this.rng(_this.version.salt_size, __iced_deferrals.defer({\n                assign_fn: function (__slot_1) {\n                  return function () {\n                    return __slot_1.salt = arguments[0];\n                  };\n                }(_this),\n                lineno: 393\n              }));\n\n              __iced_deferrals._fulfill();\n            })(__iced_k);\n          } else {\n            return __iced_k(salt.length !== _this.version.salt_size ? err = new Error(\"Need a salt of exactly \" + _this.version.salt_size + \" bytes (got \" + salt.length + \")\") : _this.salt = WordArray.alloc(salt));\n          }\n        };\n      })(this)(function (_this) {\n        return function () {\n          (function (__iced_k) {\n            if (err == null) {\n              (function (__iced_k) {\n                __iced_deferrals = new iced.Deferrals(__iced_k, {\n                  parent: ___iced_passed_deferral,\n                  filename: \"/Users/max/src/keybase/triplesec/src/enc.iced\",\n                  funcname: \"Encryptor.resalt\"\n                });\n\n                _this.kdf({\n                  extra_keymaterial: extra_keymaterial,\n                  progress_hook: progress_hook,\n                  salt: _this.salt\n                }, __iced_deferrals.defer({\n                  assign_fn: function (__slot_1) {\n                    return function () {\n                      err = arguments[0];\n                      return __slot_1.keys = arguments[1];\n                    };\n                  }(_this),\n                  lineno: 399\n                }));\n\n                __iced_deferrals._fulfill();\n              })(__iced_k);\n            } else {\n              return __iced_k();\n            }\n          })(function () {\n            return cb(err, _this.keys);\n          });\n        };\n      }(this));\n    };\n\n    Encryptor.prototype.run = function (_arg, cb) {\n      var ct1, ct2, ct3, data, esc, extra_keymaterial, ivs, progress_hook, pt, ret, salt, sig, ___iced_passed_deferral, __iced_deferrals, __iced_k;\n\n      __iced_k = __iced_k_noop;\n      ___iced_passed_deferral = iced.findDeferral(arguments);\n      data = _arg.data, salt = _arg.salt, extra_keymaterial = _arg.extra_keymaterial, progress_hook = _arg.progress_hook;\n      esc = make_esc(cb, \"Encryptor::run\");\n      (function (_this) {\n        return function (__iced_k) {\n          if (salt != null || _this.salt == null) {\n            (function (__iced_k) {\n              __iced_deferrals = new iced.Deferrals(__iced_k, {\n                parent: ___iced_passed_deferral,\n                filename: \"/Users/max/src/keybase/triplesec/src/enc.iced\",\n                funcname: \"Encryptor.run\"\n              });\n\n              _this.resalt({\n                salt: salt,\n                extra_keymaterial: extra_keymaterial,\n                progress_hook: progress_hook\n              }, esc(__iced_deferrals.defer({\n                lineno: 430\n              })));\n\n              __iced_deferrals._fulfill();\n            })(__iced_k);\n          } else {\n            return __iced_k();\n          }\n        };\n      })(this)(function (_this) {\n        return function () {\n          (function (__iced_k) {\n            __iced_deferrals = new iced.Deferrals(__iced_k, {\n              parent: ___iced_passed_deferral,\n              filename: \"/Users/max/src/keybase/triplesec/src/enc.iced\",\n              funcname: \"Encryptor.run\"\n            });\n\n            _this.pick_random_ivs({\n              progress_hook: progress_hook\n            }, __iced_deferrals.defer({\n              assign_fn: function () {\n                return function () {\n                  return ivs = arguments[0];\n                };\n              }(),\n              lineno: 431\n            }));\n\n            __iced_deferrals._fulfill();\n          })(function () {\n            pt = WordArray.from_buffer(data);\n\n            (function (__iced_k) {\n              __iced_deferrals = new iced.Deferrals(__iced_k, {\n                parent: ___iced_passed_deferral,\n                filename: \"/Users/max/src/keybase/triplesec/src/enc.iced\",\n                funcname: \"Encryptor.run\"\n              });\n\n              _this.run_salsa20({\n                input: pt,\n                key: _this.keys.salsa20,\n                progress_hook: progress_hook,\n                iv: ivs.salsa20,\n                output_iv: true\n              }, esc(__iced_deferrals.defer({\n                assign_fn: function () {\n                  return function () {\n                    return ct1 = arguments[0];\n                  };\n                }(),\n                lineno: 433\n              })));\n\n              __iced_deferrals._fulfill();\n            })(function () {\n              (function (__iced_k) {\n                __iced_deferrals = new iced.Deferrals(__iced_k, {\n                  parent: ___iced_passed_deferral,\n                  filename: \"/Users/max/src/keybase/triplesec/src/enc.iced\",\n                  funcname: \"Encryptor.run\"\n                });\n\n                _this.run_twofish({\n                  input: ct1,\n                  key: _this.keys.twofish,\n                  progress_hook: progress_hook,\n                  iv: ivs.twofish\n                }, esc(__iced_deferrals.defer({\n                  assign_fn: function () {\n                    return function () {\n                      return ct2 = arguments[0];\n                    };\n                  }(),\n                  lineno: 434\n                })));\n\n                __iced_deferrals._fulfill();\n              })(function () {\n                (function (__iced_k) {\n                  __iced_deferrals = new iced.Deferrals(__iced_k, {\n                    parent: ___iced_passed_deferral,\n                    filename: \"/Users/max/src/keybase/triplesec/src/enc.iced\",\n                    funcname: \"Encryptor.run\"\n                  });\n\n                  _this.run_aes({\n                    input: ct2,\n                    key: _this.keys.aes,\n                    progress_hook: progress_hook,\n                    iv: ivs.aes\n                  }, esc(__iced_deferrals.defer({\n                    assign_fn: function () {\n                      return function () {\n                        return ct3 = arguments[0];\n                      };\n                    }(),\n                    lineno: 435\n                  })));\n\n                  __iced_deferrals._fulfill();\n                })(function () {\n                  (function (__iced_k) {\n                    __iced_deferrals = new iced.Deferrals(__iced_k, {\n                      parent: ___iced_passed_deferral,\n                      filename: \"/Users/max/src/keybase/triplesec/src/enc.iced\",\n                      funcname: \"Encryptor.run\"\n                    });\n\n                    _this.sign({\n                      input: ct3,\n                      key: _this.keys.hmac,\n                      progress_hook: progress_hook,\n                      salt: _this.salt\n                    }, esc(__iced_deferrals.defer({\n                      assign_fn: function () {\n                        return function () {\n                          return sig = arguments[0];\n                        };\n                      }(),\n                      lineno: 436\n                    })));\n\n                    __iced_deferrals._fulfill();\n                  })(function () {\n                    ret = new WordArray(_this.version.header).concat(_this.salt).concat(sig).concat(ct3).to_buffer();\n                    util.scrub_buffer(data);\n                    return cb(null, ret);\n                  });\n                });\n              });\n            });\n          });\n        };\n      }(this));\n    };\n\n    Encryptor.prototype.clone = function () {\n      var ret, _ref1, _ref2;\n\n      ret = new Encryptor({\n        key: (_ref1 = this.key) != null ? _ref1.to_buffer() : void 0,\n        rng: this.rng,\n        version: (_ref2 = this.version) != null ? _ref2.version : void 0\n      });\n      ret.derived_keys = this.clone_derived_keys();\n      return ret;\n    };\n\n    return Encryptor;\n  }(Base);\n\n  encrypt = function (_arg, cb) {\n    var data, enc, err, key, progress_hook, ret, rng, version, ___iced_passed_deferral, __iced_deferrals, __iced_k;\n\n    __iced_k = __iced_k_noop;\n    ___iced_passed_deferral = iced.findDeferral(arguments);\n    key = _arg.key, data = _arg.data, rng = _arg.rng, progress_hook = _arg.progress_hook, version = _arg.version;\n    enc = new Encryptor({\n      key: key,\n      rng: rng,\n      version: version\n    });\n    (function (_this) {\n      return function (__iced_k) {\n        __iced_deferrals = new iced.Deferrals(__iced_k, {\n          parent: ___iced_passed_deferral,\n          filename: \"/Users/max/src/keybase/triplesec/src/enc.iced\"\n        });\n        enc.run({\n          data: data,\n          progress_hook: progress_hook\n        }, __iced_deferrals.defer({\n          assign_fn: function () {\n            return function () {\n              err = arguments[0];\n              return ret = arguments[1];\n            };\n          }(),\n          lineno: 475\n        }));\n\n        __iced_deferrals._fulfill();\n      };\n    })(this)(function (_this) {\n      return function () {\n        enc.scrub();\n        return cb(err, ret);\n      };\n    }(this));\n  };\n\n  exports.V = V;\n  exports.encrypt = encrypt;\n  exports.Base = Base;\n  exports.Encryptor = Encryptor;\n}).call(this);","map":{"version":3,"sources":["/home/os/Desktop/hello-world-tutorial/node_modules/triplesec/lib/enc.js"],"names":["AES","Base","CURRENT_VERSION","Concat","Encryptor","HMAC_SHA256","PBKDF2","SHA512","Scrypt","TwoFish","V","WordArray","XOR","ctr","encrypt","iced","make_esc","prng","salsa20","util","__iced_k","__iced_k_noop","_ref","__hasProp","hasOwnProperty","__extends","child","parent","key","call","ctor","constructor","prototype","__super__","require","header","salt_size","xsalsa20_rev","kdf","klass","opts","c","hmac_key_size","version","N","r","p","exports","_arg","Error","set_key","derived_keys","cb","args","dkLen","end","extra_keymaterial","i","k","keys","len","lens","order","progress_hook","raw","salt","salt_hex","v","___iced_passed_deferral","__iced_deferrals","findDeferral","arguments","_this","Deferrals","filename","funcname","_check_scrubbed","defer","lineno","_fulfill","to_hex","clone","_kdf","hmac","aes","keySize","twofish","Salsa20","run","assign_fn","_i","_len","length","words","slice","extra","to_buffer","wakey","from_buffer","equal","scrub","where","ecb","okcb","is_scrubbed","sign","input","out","concat","bulk_sign","run_salsa20","ct","iv","output_iv","endian_reverse","bulk_encrypt","run_twofish","block_cipher","what","run_aes","algo","key_ring","_ref1","clone_derived_keys","ret","_super","rng","generate","pick_random_ivs","iv_lens","ivs","ivSize","_k","_keys","_results","_while","_results1","push","_break","_continue","_next","trampoline","__slot_1","__slot_2","resalt","err","alloc","ct1","ct2","ct3","data","esc","pt","sig","scrub_buffer","_ref2","enc"],"mappings":"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","sourcesContent":["// Generated by IcedCoffeeScript 108.0.8\n(function() {\n  var AES, Base, CURRENT_VERSION, Concat, Encryptor, HMAC_SHA256, PBKDF2, SHA512, Scrypt, TwoFish, V, WordArray, XOR, ctr, encrypt, iced, make_esc, prng, salsa20, util, __iced_k, __iced_k_noop, _ref,\n    __hasProp = {}.hasOwnProperty,\n    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\n  iced = require('iced-runtime');\n  __iced_k = __iced_k_noop = function() {};\n\n  WordArray = require('./wordarray').WordArray;\n\n  salsa20 = require('./salsa20');\n\n  AES = require('./aes').AES;\n\n  TwoFish = require('./twofish').TwoFish;\n\n  ctr = require('./ctr');\n\n  _ref = require('./combine'), XOR = _ref.XOR, Concat = _ref.Concat;\n\n  SHA512 = require('./sha512').SHA512;\n\n  PBKDF2 = require('./pbkdf2').PBKDF2;\n\n  Scrypt = require('./scrypt').Scrypt;\n\n  util = require('./util');\n\n  prng = require('./prng');\n\n  make_esc = require('iced-error').make_esc;\n\n  HMAC_SHA256 = require('./hmac').HMAC_SHA256;\n\n  V = {\n    \"1\": {\n      header: [0x1c94d7de, 1],\n      salt_size: 8,\n      xsalsa20_rev: true,\n      kdf: {\n        klass: PBKDF2,\n        opts: {\n          c: 1024,\n          klass: XOR\n        }\n      },\n      hmac_key_size: 768 / 8,\n      version: 1\n    },\n    \"2\": {\n      header: [0x1c94d7de, 2],\n      salt_size: 16,\n      xsalsa20_rev: true,\n      kdf: {\n        klass: Scrypt,\n        opts: {\n          c: 64,\n          klass: XOR,\n          N: 12,\n          r: 8,\n          p: 1\n        }\n      },\n      hmac_key_size: 768 / 8,\n      version: 2\n    },\n    \"3\": {\n      header: [0x1c94d7de, 3],\n      salt_size: 16,\n      xsalsa20_rev: false,\n      kdf: {\n        klass: Scrypt,\n        opts: {\n          c: 1,\n          klass: HMAC_SHA256,\n          N: 15,\n          r: 8,\n          p: 1\n        }\n      },\n      hmac_key_size: 768 / 8,\n      version: 3\n    }\n  };\n\n  exports.CURRENT_VERSION = CURRENT_VERSION = 3;\n\n  Base = (function() {\n    function Base(_arg) {\n      var key, version;\n      key = _arg.key, version = _arg.version;\n      this.version = V[version != null ? version : CURRENT_VERSION];\n      if (this.version == null) {\n        throw new Error(\"unknown version: \" + version);\n      }\n      this.set_key(key);\n      this.derived_keys = {};\n    }\n\n    Base.prototype.kdf = function(_arg, cb) {\n      var args, dkLen, end, extra_keymaterial, i, k, key, keys, len, lens, order, progress_hook, raw, salt, salt_hex, v, ___iced_passed_deferral, __iced_deferrals, __iced_k;\n      __iced_k = __iced_k_noop;\n      ___iced_passed_deferral = iced.findDeferral(arguments);\n      salt = _arg.salt, extra_keymaterial = _arg.extra_keymaterial, progress_hook = _arg.progress_hook;\n      (function(_this) {\n        return (function(__iced_k) {\n          __iced_deferrals = new iced.Deferrals(__iced_k, {\n            parent: ___iced_passed_deferral,\n            filename: \"/Users/max/src/keybase/triplesec/src/enc.iced\",\n            funcname: \"Base.kdf\"\n          });\n          _this._check_scrubbed(_this.key, \"in KDF\", cb, __iced_deferrals.defer({\n            lineno: 97\n          }));\n          __iced_deferrals._fulfill();\n        });\n      })(this)((function(_this) {\n        return function() {\n          salt_hex = salt.to_hex();\n          key = _this.key.clone();\n          (function(__iced_k) {\n            __iced_deferrals = new iced.Deferrals(__iced_k, {\n              parent: ___iced_passed_deferral,\n              filename: \"/Users/max/src/keybase/triplesec/src/enc.iced\",\n              funcname: \"Base.kdf\"\n            });\n            _this._check_scrubbed(key, \"KDF\", cb, __iced_deferrals.defer({\n              lineno: 105\n            }));\n            __iced_deferrals._fulfill();\n          })(function() {\n            (function(__iced_k) {\n              if ((keys = _this.derived_keys[salt_hex]) == null) {\n                _this._kdf = new _this.version.kdf.klass(_this.version.kdf.opts);\n                lens = {\n                  hmac: _this.version.hmac_key_size,\n                  aes: AES.keySize,\n                  twofish: TwoFish.keySize,\n                  salsa20: salsa20.Salsa20.keySize\n                };\n                order = ['hmac', 'aes', 'twofish', 'salsa20'];\n                dkLen = extra_keymaterial || 0;\n                for (k in lens) {\n                  v = lens[k];\n                  dkLen += v;\n                }\n                args = {\n                  dkLen: dkLen,\n                  key: key,\n                  progress_hook: progress_hook,\n                  salt: salt\n                };\n                (function(__iced_k) {\n                  __iced_deferrals = new iced.Deferrals(__iced_k, {\n                    parent: ___iced_passed_deferral,\n                    filename: \"/Users/max/src/keybase/triplesec/src/enc.iced\",\n                    funcname: \"Base.kdf\"\n                  });\n                  _this._kdf.run(args, __iced_deferrals.defer({\n                    assign_fn: (function() {\n                      return function() {\n                        return raw = arguments[0];\n                      };\n                    })(),\n                    lineno: 124\n                  }));\n                  __iced_deferrals._fulfill();\n                })(function() {\n                  var _i, _len;\n                  keys = {};\n                  i = 0;\n                  for (_i = 0, _len = order.length; _i < _len; _i++) {\n                    k = order[_i];\n                    v = lens[k];\n                    len = v / 4;\n                    end = i + len;\n                    keys[k] = new WordArray(raw.words.slice(i, end));\n                    i = end;\n                  }\n                  keys.extra = (new WordArray(raw.words.slice(end))).to_buffer();\n                  return __iced_k(_this.derived_keys[salt_hex] = keys);\n                });\n              } else {\n                return __iced_k();\n              }\n            })(function() {\n              return cb(null, keys);\n            });\n          });\n        };\n      })(this));\n    };\n\n    Base.prototype.set_key = function(key) {\n      var wakey;\n      if (key != null) {\n        wakey = WordArray.from_buffer(key);\n        if (!this.key || !this.key.equal(wakey)) {\n          this.scrub();\n          return this.key = wakey;\n        }\n      } else {\n        return this.scrub();\n      }\n    };\n\n    Base.prototype._check_scrubbed = function(key, where, ecb, okcb) {\n      if ((key != null) && !key.is_scrubbed()) {\n        return okcb();\n      } else {\n        return ecb(new Error(\"\" + where + \": Failed due to scrubbed key!\"), null);\n      }\n    };\n\n    Base.prototype.sign = function(_arg, cb) {\n      var input, key, out, progress_hook, salt, ___iced_passed_deferral, __iced_deferrals, __iced_k;\n      __iced_k = __iced_k_noop;\n      ___iced_passed_deferral = iced.findDeferral(arguments);\n      input = _arg.input, key = _arg.key, salt = _arg.salt, progress_hook = _arg.progress_hook;\n      (function(_this) {\n        return (function(__iced_k) {\n          __iced_deferrals = new iced.Deferrals(__iced_k, {\n            parent: ___iced_passed_deferral,\n            filename: \"/Users/max/src/keybase/triplesec/src/enc.iced\",\n            funcname: \"Base.sign\"\n          });\n          _this._check_scrubbed(key, \"HMAC\", cb, __iced_deferrals.defer({\n            lineno: 182\n          }));\n          __iced_deferrals._fulfill();\n        });\n      })(this)((function(_this) {\n        return function() {\n          input = (new WordArray(_this.version.header)).concat(salt).concat(input);\n          (function(__iced_k) {\n            __iced_deferrals = new iced.Deferrals(__iced_k, {\n              parent: ___iced_passed_deferral,\n              filename: \"/Users/max/src/keybase/triplesec/src/enc.iced\",\n              funcname: \"Base.sign\"\n            });\n            Concat.bulk_sign({\n              key: key,\n              input: input,\n              progress_hook: progress_hook\n            }, __iced_deferrals.defer({\n              assign_fn: (function() {\n                return function() {\n                  return out = arguments[0];\n                };\n              })(),\n              lineno: 184\n            }));\n            __iced_deferrals._fulfill();\n          })(function() {\n            input.scrub();\n            return cb(null, out);\n          });\n        };\n      })(this));\n    };\n\n    Base.prototype.run_salsa20 = function(_arg, cb) {\n      var args, ct, input, iv, key, output_iv, progress_hook, ___iced_passed_deferral, __iced_deferrals, __iced_k;\n      __iced_k = __iced_k_noop;\n      ___iced_passed_deferral = iced.findDeferral(arguments);\n      input = _arg.input, key = _arg.key, iv = _arg.iv, output_iv = _arg.output_iv, progress_hook = _arg.progress_hook;\n      (function(_this) {\n        return (function(__iced_k) {\n          __iced_deferrals = new iced.Deferrals(__iced_k, {\n            parent: ___iced_passed_deferral,\n            filename: \"/Users/max/src/keybase/triplesec/src/enc.iced\",\n            funcname: \"Base.run_salsa20\"\n          });\n          _this._check_scrubbed(key, \"Salsa20\", cb, __iced_deferrals.defer({\n            lineno: 200\n          }));\n          __iced_deferrals._fulfill();\n        });\n      })(this)((function(_this) {\n        return function() {\n          args = {\n            input: input,\n            progress_hook: progress_hook,\n            key: key,\n            iv: iv\n          };\n          if (_this.version.xsalsa20_rev) {\n            args.key = key.clone().endian_reverse();\n            args.iv = iv.clone().endian_reverse();\n          }\n          (function(__iced_k) {\n            __iced_deferrals = new iced.Deferrals(__iced_k, {\n              parent: ___iced_passed_deferral,\n              filename: \"/Users/max/src/keybase/triplesec/src/enc.iced\",\n              funcname: \"Base.run_salsa20\"\n            });\n            salsa20.bulk_encrypt(args, __iced_deferrals.defer({\n              assign_fn: (function() {\n                return function() {\n                  return ct = arguments[0];\n                };\n              })(),\n              lineno: 212\n            }));\n            __iced_deferrals._fulfill();\n          })(function() {\n            if (output_iv) {\n              ct = iv.clone().concat(ct);\n            }\n            if (_this.version.xsalsa20_rev) {\n              args.key.scrub();\n              args.iv.scrub();\n            }\n            return cb(null, ct);\n          });\n        };\n      })(this));\n    };\n\n    Base.prototype.run_twofish = function(_arg, cb) {\n      var block_cipher, ct, input, iv, key, progress_hook, ___iced_passed_deferral, __iced_deferrals, __iced_k;\n      __iced_k = __iced_k_noop;\n      ___iced_passed_deferral = iced.findDeferral(arguments);\n      input = _arg.input, key = _arg.key, iv = _arg.iv, progress_hook = _arg.progress_hook;\n      (function(_this) {\n        return (function(__iced_k) {\n          __iced_deferrals = new iced.Deferrals(__iced_k, {\n            parent: ___iced_passed_deferral,\n            filename: \"/Users/max/src/keybase/triplesec/src/enc.iced\",\n            funcname: \"Base.run_twofish\"\n          });\n          _this._check_scrubbed(key, \"TwoFish\", cb, __iced_deferrals.defer({\n            lineno: 235\n          }));\n          __iced_deferrals._fulfill();\n        });\n      })(this)((function(_this) {\n        return function() {\n          block_cipher = new TwoFish(key);\n          (function(__iced_k) {\n            __iced_deferrals = new iced.Deferrals(__iced_k, {\n              parent: ___iced_passed_deferral,\n              filename: \"/Users/max/src/keybase/triplesec/src/enc.iced\",\n              funcname: \"Base.run_twofish\"\n            });\n            ctr.bulk_encrypt({\n              block_cipher: block_cipher,\n              iv: iv,\n              input: input,\n              progress_hook: progress_hook,\n              what: \"twofish\"\n            }, __iced_deferrals.defer({\n              assign_fn: (function() {\n                return function() {\n                  return ct = arguments[0];\n                };\n              })(),\n              lineno: 237\n            }));\n            __iced_deferrals._fulfill();\n          })(function() {\n            block_cipher.scrub();\n            return cb(null, iv.clone().concat(ct));\n          });\n        };\n      })(this));\n    };\n\n    Base.prototype.run_aes = function(_arg, cb) {\n      var block_cipher, ct, input, iv, key, progress_hook, ___iced_passed_deferral, __iced_deferrals, __iced_k;\n      __iced_k = __iced_k_noop;\n      ___iced_passed_deferral = iced.findDeferral(arguments);\n      input = _arg.input, key = _arg.key, iv = _arg.iv, progress_hook = _arg.progress_hook;\n      (function(_this) {\n        return (function(__iced_k) {\n          __iced_deferrals = new iced.Deferrals(__iced_k, {\n            parent: ___iced_passed_deferral,\n            filename: \"/Users/max/src/keybase/triplesec/src/enc.iced\",\n            funcname: \"Base.run_aes\"\n          });\n          _this._check_scrubbed(key, \"AES\", cb, __iced_deferrals.defer({\n            lineno: 252\n          }));\n          __iced_deferrals._fulfill();\n        });\n      })(this)((function(_this) {\n        return function() {\n          block_cipher = new AES(key);\n          (function(__iced_k) {\n            __iced_deferrals = new iced.Deferrals(__iced_k, {\n              parent: ___iced_passed_deferral,\n              filename: \"/Users/max/src/keybase/triplesec/src/enc.iced\",\n              funcname: \"Base.run_aes\"\n            });\n            ctr.bulk_encrypt({\n              block_cipher: block_cipher,\n              iv: iv,\n              input: input,\n              progress_hook: progress_hook,\n              what: \"aes\"\n            }, __iced_deferrals.defer({\n              assign_fn: (function() {\n                return function() {\n                  return ct = arguments[0];\n                };\n              })(),\n              lineno: 254\n            }));\n            __iced_deferrals._fulfill();\n          })(function() {\n            block_cipher.scrub();\n            return cb(null, iv.clone().concat(ct));\n          });\n        };\n      })(this));\n    };\n\n    Base.prototype.scrub = function() {\n      var algo, key, key_ring, salt, _ref1;\n      if (this.key != null) {\n        this.key.scrub();\n      }\n      if (this.derived_keys != null) {\n        _ref1 = this.derived_keys;\n        for (salt in _ref1) {\n          key_ring = _ref1[salt];\n          for (algo in key_ring) {\n            key = key_ring[algo];\n            if (algo !== 'extra') {\n              key.scrub();\n            }\n          }\n        }\n      }\n      this.derived_keys = {};\n      if (this.salt != null) {\n        this.salt.scrub();\n      }\n      this.salt = null;\n      return this.key = null;\n    };\n\n    Base.prototype.clone_derived_keys = function() {\n      var algo, key, key_ring, ret, salt, _ref1;\n      ret = null;\n      if (this.derived_keys != null) {\n        ret = {};\n        _ref1 = this.derived_keys;\n        for (salt in _ref1) {\n          key_ring = _ref1[salt];\n          ret[salt] = {};\n          for (algo in key_ring) {\n            key = key_ring[algo];\n            ret[salt][algo] = algo === 'extra' ? key : key.clone();\n          }\n        }\n      }\n      return ret;\n    };\n\n    return Base;\n\n  })();\n\n  Encryptor = (function(_super) {\n    __extends(Encryptor, _super);\n\n    function Encryptor(_arg) {\n      var key, rng, version;\n      key = _arg.key, rng = _arg.rng, version = _arg.version;\n      Encryptor.__super__.constructor.call(this, {\n        key: key,\n        version: version\n      });\n      this.rng = rng || prng.generate;\n    }\n\n    Encryptor.prototype.pick_random_ivs = function(_arg, cb) {\n      var iv_lens, ivs, k, progress_hook, v, ___iced_passed_deferral, __iced_deferrals, __iced_k;\n      __iced_k = __iced_k_noop;\n      ___iced_passed_deferral = iced.findDeferral(arguments);\n      progress_hook = _arg.progress_hook;\n      iv_lens = {\n        aes: AES.ivSize,\n        twofish: TwoFish.ivSize,\n        salsa20: salsa20.Salsa20.ivSize\n      };\n      ivs = {};\n      (function(_this) {\n        return (function(__iced_k) {\n          var _i, _k, _keys, _ref1, _results, _while;\n          _ref1 = iv_lens;\n          _keys = (function() {\n            var _results1;\n            _results1 = [];\n            for (_k in _ref1) {\n              _results1.push(_k);\n            }\n            return _results1;\n          })();\n          _i = 0;\n          _while = function(__iced_k) {\n            var _break, _continue, _next;\n            _break = __iced_k;\n            _continue = function() {\n              return iced.trampoline(function() {\n                ++_i;\n                return _while(__iced_k);\n              });\n            };\n            _next = _continue;\n            if (!(_i < _keys.length)) {\n              return _break();\n            } else {\n              k = _keys[_i];\n              v = _ref1[k];\n              (function(__iced_k) {\n                __iced_deferrals = new iced.Deferrals(__iced_k, {\n                  parent: ___iced_passed_deferral,\n                  filename: \"/Users/max/src/keybase/triplesec/src/enc.iced\",\n                  funcname: \"Encryptor.pick_random_ivs\"\n                });\n                _this.rng(v, __iced_deferrals.defer({\n                  assign_fn: (function(__slot_1, __slot_2) {\n                    return function() {\n                      return __slot_1[__slot_2] = arguments[0];\n                    };\n                  })(ivs, k),\n                  lineno: 377\n                }));\n                __iced_deferrals._fulfill();\n              })(_next);\n            }\n          };\n          _while(__iced_k);\n        });\n      })(this)((function(_this) {\n        return function() {\n          return cb(ivs);\n        };\n      })(this));\n    };\n\n    Encryptor.prototype.resalt = function(_arg, cb) {\n      var err, extra_keymaterial, progress_hook, salt, ___iced_passed_deferral, __iced_deferrals, __iced_k;\n      __iced_k = __iced_k_noop;\n      ___iced_passed_deferral = iced.findDeferral(arguments);\n      salt = _arg.salt, extra_keymaterial = _arg.extra_keymaterial, progress_hook = _arg.progress_hook;\n      err = null;\n      (function(_this) {\n        return (function(__iced_k) {\n          if (salt == null) {\n            (function(__iced_k) {\n              __iced_deferrals = new iced.Deferrals(__iced_k, {\n                parent: ___iced_passed_deferral,\n                filename: \"/Users/max/src/keybase/triplesec/src/enc.iced\",\n                funcname: \"Encryptor.resalt\"\n              });\n              _this.rng(_this.version.salt_size, __iced_deferrals.defer({\n                assign_fn: (function(__slot_1) {\n                  return function() {\n                    return __slot_1.salt = arguments[0];\n                  };\n                })(_this),\n                lineno: 393\n              }));\n              __iced_deferrals._fulfill();\n            })(__iced_k);\n          } else {\n            return __iced_k(salt.length !== _this.version.salt_size ? err = new Error(\"Need a salt of exactly \" + _this.version.salt_size + \" bytes (got \" + salt.length + \")\") : _this.salt = WordArray.alloc(salt));\n          }\n        });\n      })(this)((function(_this) {\n        return function() {\n          (function(__iced_k) {\n            if (err == null) {\n              (function(__iced_k) {\n                __iced_deferrals = new iced.Deferrals(__iced_k, {\n                  parent: ___iced_passed_deferral,\n                  filename: \"/Users/max/src/keybase/triplesec/src/enc.iced\",\n                  funcname: \"Encryptor.resalt\"\n                });\n                _this.kdf({\n                  extra_keymaterial: extra_keymaterial,\n                  progress_hook: progress_hook,\n                  salt: _this.salt\n                }, __iced_deferrals.defer({\n                  assign_fn: (function(__slot_1) {\n                    return function() {\n                      err = arguments[0];\n                      return __slot_1.keys = arguments[1];\n                    };\n                  })(_this),\n                  lineno: 399\n                }));\n                __iced_deferrals._fulfill();\n              })(__iced_k);\n            } else {\n              return __iced_k();\n            }\n          })(function() {\n            return cb(err, _this.keys);\n          });\n        };\n      })(this));\n    };\n\n    Encryptor.prototype.run = function(_arg, cb) {\n      var ct1, ct2, ct3, data, esc, extra_keymaterial, ivs, progress_hook, pt, ret, salt, sig, ___iced_passed_deferral, __iced_deferrals, __iced_k;\n      __iced_k = __iced_k_noop;\n      ___iced_passed_deferral = iced.findDeferral(arguments);\n      data = _arg.data, salt = _arg.salt, extra_keymaterial = _arg.extra_keymaterial, progress_hook = _arg.progress_hook;\n      esc = make_esc(cb, \"Encryptor::run\");\n      (function(_this) {\n        return (function(__iced_k) {\n          if ((salt != null) || (_this.salt == null)) {\n            (function(__iced_k) {\n              __iced_deferrals = new iced.Deferrals(__iced_k, {\n                parent: ___iced_passed_deferral,\n                filename: \"/Users/max/src/keybase/triplesec/src/enc.iced\",\n                funcname: \"Encryptor.run\"\n              });\n              _this.resalt({\n                salt: salt,\n                extra_keymaterial: extra_keymaterial,\n                progress_hook: progress_hook\n              }, esc(__iced_deferrals.defer({\n                lineno: 430\n              })));\n              __iced_deferrals._fulfill();\n            })(__iced_k);\n          } else {\n            return __iced_k();\n          }\n        });\n      })(this)((function(_this) {\n        return function() {\n          (function(__iced_k) {\n            __iced_deferrals = new iced.Deferrals(__iced_k, {\n              parent: ___iced_passed_deferral,\n              filename: \"/Users/max/src/keybase/triplesec/src/enc.iced\",\n              funcname: \"Encryptor.run\"\n            });\n            _this.pick_random_ivs({\n              progress_hook: progress_hook\n            }, __iced_deferrals.defer({\n              assign_fn: (function() {\n                return function() {\n                  return ivs = arguments[0];\n                };\n              })(),\n              lineno: 431\n            }));\n            __iced_deferrals._fulfill();\n          })(function() {\n            pt = WordArray.from_buffer(data);\n            (function(__iced_k) {\n              __iced_deferrals = new iced.Deferrals(__iced_k, {\n                parent: ___iced_passed_deferral,\n                filename: \"/Users/max/src/keybase/triplesec/src/enc.iced\",\n                funcname: \"Encryptor.run\"\n              });\n              _this.run_salsa20({\n                input: pt,\n                key: _this.keys.salsa20,\n                progress_hook: progress_hook,\n                iv: ivs.salsa20,\n                output_iv: true\n              }, esc(__iced_deferrals.defer({\n                assign_fn: (function() {\n                  return function() {\n                    return ct1 = arguments[0];\n                  };\n                })(),\n                lineno: 433\n              })));\n              __iced_deferrals._fulfill();\n            })(function() {\n              (function(__iced_k) {\n                __iced_deferrals = new iced.Deferrals(__iced_k, {\n                  parent: ___iced_passed_deferral,\n                  filename: \"/Users/max/src/keybase/triplesec/src/enc.iced\",\n                  funcname: \"Encryptor.run\"\n                });\n                _this.run_twofish({\n                  input: ct1,\n                  key: _this.keys.twofish,\n                  progress_hook: progress_hook,\n                  iv: ivs.twofish\n                }, esc(__iced_deferrals.defer({\n                  assign_fn: (function() {\n                    return function() {\n                      return ct2 = arguments[0];\n                    };\n                  })(),\n                  lineno: 434\n                })));\n                __iced_deferrals._fulfill();\n              })(function() {\n                (function(__iced_k) {\n                  __iced_deferrals = new iced.Deferrals(__iced_k, {\n                    parent: ___iced_passed_deferral,\n                    filename: \"/Users/max/src/keybase/triplesec/src/enc.iced\",\n                    funcname: \"Encryptor.run\"\n                  });\n                  _this.run_aes({\n                    input: ct2,\n                    key: _this.keys.aes,\n                    progress_hook: progress_hook,\n                    iv: ivs.aes\n                  }, esc(__iced_deferrals.defer({\n                    assign_fn: (function() {\n                      return function() {\n                        return ct3 = arguments[0];\n                      };\n                    })(),\n                    lineno: 435\n                  })));\n                  __iced_deferrals._fulfill();\n                })(function() {\n                  (function(__iced_k) {\n                    __iced_deferrals = new iced.Deferrals(__iced_k, {\n                      parent: ___iced_passed_deferral,\n                      filename: \"/Users/max/src/keybase/triplesec/src/enc.iced\",\n                      funcname: \"Encryptor.run\"\n                    });\n                    _this.sign({\n                      input: ct3,\n                      key: _this.keys.hmac,\n                      progress_hook: progress_hook,\n                      salt: _this.salt\n                    }, esc(__iced_deferrals.defer({\n                      assign_fn: (function() {\n                        return function() {\n                          return sig = arguments[0];\n                        };\n                      })(),\n                      lineno: 436\n                    })));\n                    __iced_deferrals._fulfill();\n                  })(function() {\n                    ret = (new WordArray(_this.version.header)).concat(_this.salt).concat(sig).concat(ct3).to_buffer();\n                    util.scrub_buffer(data);\n                    return cb(null, ret);\n                  });\n                });\n              });\n            });\n          });\n        };\n      })(this));\n    };\n\n    Encryptor.prototype.clone = function() {\n      var ret, _ref1, _ref2;\n      ret = new Encryptor({\n        key: (_ref1 = this.key) != null ? _ref1.to_buffer() : void 0,\n        rng: this.rng,\n        version: (_ref2 = this.version) != null ? _ref2.version : void 0\n      });\n      ret.derived_keys = this.clone_derived_keys();\n      return ret;\n    };\n\n    return Encryptor;\n\n  })(Base);\n\n  encrypt = function(_arg, cb) {\n    var data, enc, err, key, progress_hook, ret, rng, version, ___iced_passed_deferral, __iced_deferrals, __iced_k;\n    __iced_k = __iced_k_noop;\n    ___iced_passed_deferral = iced.findDeferral(arguments);\n    key = _arg.key, data = _arg.data, rng = _arg.rng, progress_hook = _arg.progress_hook, version = _arg.version;\n    enc = new Encryptor({\n      key: key,\n      rng: rng,\n      version: version\n    });\n    (function(_this) {\n      return (function(__iced_k) {\n        __iced_deferrals = new iced.Deferrals(__iced_k, {\n          parent: ___iced_passed_deferral,\n          filename: \"/Users/max/src/keybase/triplesec/src/enc.iced\"\n        });\n        enc.run({\n          data: data,\n          progress_hook: progress_hook\n        }, __iced_deferrals.defer({\n          assign_fn: (function() {\n            return function() {\n              err = arguments[0];\n              return ret = arguments[1];\n            };\n          })(),\n          lineno: 475\n        }));\n        __iced_deferrals._fulfill();\n      });\n    })(this)((function(_this) {\n      return function() {\n        enc.scrub();\n        return cb(err, ret);\n      };\n    })(this));\n  };\n\n  exports.V = V;\n\n  exports.encrypt = encrypt;\n\n  exports.Base = Base;\n\n  exports.Encryptor = Encryptor;\n\n}).call(this);\n"]},"metadata":{},"sourceType":"script"}