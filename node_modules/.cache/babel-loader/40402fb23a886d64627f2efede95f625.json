{"ast":null,"code":"// Generated by IcedCoffeeScript 108.0.8\n(function () {\n  var HMAC,\n      HMAC_SHA256,\n      SHA256,\n      SHA512,\n      bulk_sign,\n      iced,\n      sign,\n      util,\n      __iced_k,\n      __iced_k_noop,\n      __hasProp = {}.hasOwnProperty,\n      __extends = function (child, parent) {\n    for (var key in parent) {\n      if (__hasProp.call(parent, key)) child[key] = parent[key];\n    }\n\n    function ctor() {\n      this.constructor = child;\n    }\n\n    ctor.prototype = parent.prototype;\n    child.prototype = new ctor();\n    child.__super__ = parent.prototype;\n    return child;\n  };\n\n  iced = require('iced-runtime');\n\n  __iced_k = __iced_k_noop = function () {};\n\n  SHA512 = require('./sha512').SHA512;\n  SHA256 = require('./sha256').SHA256;\n  util = require('./util');\n\n  HMAC = function () {\n    HMAC.outputSize = 512 / 8;\n    HMAC.prototype.outputSize = HMAC.outputSize;\n\n    function HMAC(key, klass) {\n      var i, _i, _ref;\n\n      if (klass == null) {\n        klass = SHA512;\n      }\n\n      this.key = key.clone();\n      this.hasher = new klass();\n      this.hasherBlockSize = this.hasher.blockSize;\n      this.hasherBlockSizeBytes = this.hasherBlockSize * 4;\n\n      if (this.key.sigBytes > this.hasherBlockSizeBytes) {\n        this.key = this.hasher.finalize(this.key);\n      }\n\n      this.key.clamp();\n      this._oKey = this.key.clone();\n      this._iKey = this.key.clone();\n\n      for (i = _i = 0, _ref = this.hasherBlockSize; 0 <= _ref ? _i < _ref : _i > _ref; i = 0 <= _ref ? ++_i : --_i) {\n        this._oKey.words[i] ^= 0x5c5c5c5c;\n        this._iKey.words[i] ^= 0x36363636;\n      }\n\n      this._oKey.sigBytes = this._iKey.sigBytes = this.hasherBlockSizeBytes;\n      this.reset();\n    }\n\n    HMAC.prototype.get_output_size = function () {\n      return this.hasher.output_size;\n    };\n\n    HMAC.prototype.reset = function () {\n      return this.hasher.reset().update(this._iKey);\n    };\n\n    HMAC.prototype.update = function (wa) {\n      this.hasher.update(wa);\n      return this;\n    };\n\n    HMAC.prototype.finalize = function (wa) {\n      var innerHash, innerHash2, out;\n      innerHash = this.hasher.finalize(wa);\n      this.hasher.reset();\n      innerHash2 = this._oKey.clone().concat(innerHash);\n      out = this.hasher.finalize(innerHash2);\n      innerHash.scrub();\n      innerHash2.scrub();\n      return out;\n    };\n\n    HMAC.prototype.scrub = function () {\n      this.key.scrub();\n\n      this._iKey.scrub();\n\n      return this._oKey.scrub();\n    };\n\n    return HMAC;\n  }();\n\n  sign = function (_arg) {\n    var eng, hash_class, input, key, out;\n    key = _arg.key, input = _arg.input, hash_class = _arg.hash_class;\n    eng = new HMAC(key, hash_class);\n    out = eng.finalize(input.clamp());\n    eng.scrub();\n    return out;\n  };\n\n  bulk_sign = function (_arg, cb) {\n    var eng, input, key, klass, progress_hook, res, slice_args, what, ___iced_passed_deferral, __iced_deferrals, __iced_k;\n\n    __iced_k = __iced_k_noop;\n    ___iced_passed_deferral = iced.findDeferral(arguments);\n    key = _arg.key, input = _arg.input, progress_hook = _arg.progress_hook, klass = _arg.klass, what = _arg.what;\n    klass || (klass = HMAC);\n    what || (what = \"hmac_sha512\");\n    eng = new klass(key);\n    input.clamp();\n    slice_args = {\n      update: function (lo, hi) {\n        return eng.update(input.slice(lo, hi));\n      },\n      finalize: function () {\n        return eng.finalize();\n      },\n      default_n: eng.hasherBlockSize * 1000\n    };\n    (function (_this) {\n      return function (__iced_k) {\n        __iced_deferrals = new iced.Deferrals(__iced_k, {\n          parent: ___iced_passed_deferral,\n          filename: \"/Users/max/src/keybase/triplesec/src/hmac.iced\"\n        });\n        util.bulk(input.sigBytes, slice_args, {\n          what: what,\n          progress_hook: progress_hook,\n          cb: __iced_deferrals.defer({\n            assign_fn: function () {\n              return function () {\n                return res = arguments[0];\n              };\n            }(),\n            lineno: 137\n          })\n        });\n\n        __iced_deferrals._fulfill();\n      };\n    })(this)(function (_this) {\n      return function () {\n        eng.scrub();\n        return cb(res);\n      };\n    }(this));\n  };\n\n  exports.HMAC_SHA256 = HMAC_SHA256 = function (_super) {\n    __extends(HMAC_SHA256, _super);\n\n    function HMAC_SHA256(key) {\n      HMAC_SHA256.__super__.constructor.call(this, key, SHA256);\n    }\n\n    return HMAC_SHA256;\n  }(HMAC);\n\n  exports.HMAC = HMAC;\n  exports.sign = sign;\n  exports.bulk_sign = bulk_sign;\n}).call(this);","map":{"version":3,"sources":["/home/os/Desktop/hello-world-tutorial/node_modules/triplesec/lib/hmac.js"],"names":["HMAC","HMAC_SHA256","SHA256","SHA512","bulk_sign","iced","sign","util","__iced_k","__iced_k_noop","__hasProp","hasOwnProperty","__extends","child","parent","key","call","ctor","constructor","prototype","__super__","require","outputSize","klass","i","_i","_ref","clone","hasher","hasherBlockSize","blockSize","hasherBlockSizeBytes","sigBytes","finalize","clamp","_oKey","_iKey","words","reset","get_output_size","output_size","update","wa","innerHash","innerHash2","out","concat","scrub","_arg","eng","hash_class","input","cb","progress_hook","res","slice_args","what","___iced_passed_deferral","__iced_deferrals","findDeferral","arguments","lo","hi","slice","default_n","_this","Deferrals","filename","bulk","defer","assign_fn","lineno","_fulfill","exports","_super"],"mappings":"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","sourcesContent":["// Generated by IcedCoffeeScript 108.0.8\n(function() {\n  var HMAC, HMAC_SHA256, SHA256, SHA512, bulk_sign, iced, sign, util, __iced_k, __iced_k_noop,\n    __hasProp = {}.hasOwnProperty,\n    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\n  iced = require('iced-runtime');\n  __iced_k = __iced_k_noop = function() {};\n\n  SHA512 = require('./sha512').SHA512;\n\n  SHA256 = require('./sha256').SHA256;\n\n  util = require('./util');\n\n  HMAC = (function() {\n    HMAC.outputSize = 512 / 8;\n\n    HMAC.prototype.outputSize = HMAC.outputSize;\n\n    function HMAC(key, klass) {\n      var i, _i, _ref;\n      if (klass == null) {\n        klass = SHA512;\n      }\n      this.key = key.clone();\n      this.hasher = new klass();\n      this.hasherBlockSize = this.hasher.blockSize;\n      this.hasherBlockSizeBytes = this.hasherBlockSize * 4;\n      if (this.key.sigBytes > this.hasherBlockSizeBytes) {\n        this.key = this.hasher.finalize(this.key);\n      }\n      this.key.clamp();\n      this._oKey = this.key.clone();\n      this._iKey = this.key.clone();\n      for (i = _i = 0, _ref = this.hasherBlockSize; 0 <= _ref ? _i < _ref : _i > _ref; i = 0 <= _ref ? ++_i : --_i) {\n        this._oKey.words[i] ^= 0x5c5c5c5c;\n        this._iKey.words[i] ^= 0x36363636;\n      }\n      this._oKey.sigBytes = this._iKey.sigBytes = this.hasherBlockSizeBytes;\n      this.reset();\n    }\n\n    HMAC.prototype.get_output_size = function() {\n      return this.hasher.output_size;\n    };\n\n    HMAC.prototype.reset = function() {\n      return this.hasher.reset().update(this._iKey);\n    };\n\n    HMAC.prototype.update = function(wa) {\n      this.hasher.update(wa);\n      return this;\n    };\n\n    HMAC.prototype.finalize = function(wa) {\n      var innerHash, innerHash2, out;\n      innerHash = this.hasher.finalize(wa);\n      this.hasher.reset();\n      innerHash2 = this._oKey.clone().concat(innerHash);\n      out = this.hasher.finalize(innerHash2);\n      innerHash.scrub();\n      innerHash2.scrub();\n      return out;\n    };\n\n    HMAC.prototype.scrub = function() {\n      this.key.scrub();\n      this._iKey.scrub();\n      return this._oKey.scrub();\n    };\n\n    return HMAC;\n\n  })();\n\n  sign = function(_arg) {\n    var eng, hash_class, input, key, out;\n    key = _arg.key, input = _arg.input, hash_class = _arg.hash_class;\n    eng = new HMAC(key, hash_class);\n    out = eng.finalize(input.clamp());\n    eng.scrub();\n    return out;\n  };\n\n  bulk_sign = function(_arg, cb) {\n    var eng, input, key, klass, progress_hook, res, slice_args, what, ___iced_passed_deferral, __iced_deferrals, __iced_k;\n    __iced_k = __iced_k_noop;\n    ___iced_passed_deferral = iced.findDeferral(arguments);\n    key = _arg.key, input = _arg.input, progress_hook = _arg.progress_hook, klass = _arg.klass, what = _arg.what;\n    klass || (klass = HMAC);\n    what || (what = \"hmac_sha512\");\n    eng = new klass(key);\n    input.clamp();\n    slice_args = {\n      update: function(lo, hi) {\n        return eng.update(input.slice(lo, hi));\n      },\n      finalize: function() {\n        return eng.finalize();\n      },\n      default_n: eng.hasherBlockSize * 1000\n    };\n    (function(_this) {\n      return (function(__iced_k) {\n        __iced_deferrals = new iced.Deferrals(__iced_k, {\n          parent: ___iced_passed_deferral,\n          filename: \"/Users/max/src/keybase/triplesec/src/hmac.iced\"\n        });\n        util.bulk(input.sigBytes, slice_args, {\n          what: what,\n          progress_hook: progress_hook,\n          cb: __iced_deferrals.defer({\n            assign_fn: (function() {\n              return function() {\n                return res = arguments[0];\n              };\n            })(),\n            lineno: 137\n          })\n        });\n        __iced_deferrals._fulfill();\n      });\n    })(this)((function(_this) {\n      return function() {\n        eng.scrub();\n        return cb(res);\n      };\n    })(this));\n  };\n\n  exports.HMAC_SHA256 = HMAC_SHA256 = (function(_super) {\n    __extends(HMAC_SHA256, _super);\n\n    function HMAC_SHA256(key) {\n      HMAC_SHA256.__super__.constructor.call(this, key, SHA256);\n    }\n\n    return HMAC_SHA256;\n\n  })(HMAC);\n\n  exports.HMAC = HMAC;\n\n  exports.sign = sign;\n\n  exports.bulk_sign = bulk_sign;\n\n}).call(this);\n"]},"metadata":{},"sourceType":"script"}