{"ast":null,"code":"// Generated by IcedCoffeeScript 108.0.8\n(function () {\n  var Global,\n      Hasher,\n      SHA256,\n      WordArray,\n      glbl,\n      transform,\n      __hasProp = {}.hasOwnProperty,\n      __extends = function (child, parent) {\n    for (var key in parent) {\n      if (__hasProp.call(parent, key)) child[key] = parent[key];\n    }\n\n    function ctor() {\n      this.constructor = child;\n    }\n\n    ctor.prototype = parent.prototype;\n    child.prototype = new ctor();\n    child.__super__ = parent.prototype;\n    return child;\n  };\n\n  WordArray = require('./wordarray').WordArray;\n  Hasher = require('./algbase').Hasher;\n\n  Global = function () {\n    function Global() {\n      this.H = [];\n      this.K = [];\n      this.W = [];\n      this.init();\n    }\n\n    Global.prototype.isPrime = function (n) {\n      var f, sqn, _i;\n\n      if (n === 2 || n === 3 || n === 5 || n === 7) {\n        return true;\n      }\n\n      if (n === 1 || n === 4 || n === 6 || n === 8 || n === 9) {\n        return false;\n      }\n\n      sqn = Math.ceil(Math.sqrt(n));\n\n      for (f = _i = 2; 2 <= sqn ? _i <= sqn : _i >= sqn; f = 2 <= sqn ? ++_i : --_i) {\n        if (n % f === 0) {\n          return false;\n        }\n      }\n\n      return true;\n    };\n\n    Global.prototype.getFractionalBits = function (n) {\n      return (n - (n | 0)) * 0x100000000 | 0;\n    };\n\n    Global.prototype.init = function () {\n      var n, nPrime, _results;\n\n      n = 2;\n      nPrime = 0;\n      _results = [];\n\n      while (nPrime < 64) {\n        if (this.isPrime(n)) {\n          if (nPrime < 8) {\n            this.H[nPrime] = this.getFractionalBits(Math.pow(n, 1 / 2));\n          }\n\n          this.K[nPrime] = this.getFractionalBits(Math.pow(n, 1 / 3));\n          nPrime++;\n        }\n\n        _results.push(n++);\n      }\n\n      return _results;\n    };\n\n    return Global;\n  }();\n\n  glbl = new Global();\n\n  SHA256 = function (_super) {\n    __extends(SHA256, _super);\n\n    function SHA256() {\n      return SHA256.__super__.constructor.apply(this, arguments);\n    }\n\n    SHA256.blockSize = 512 / 32;\n    SHA256.prototype.blockSize = SHA256.blockSize;\n    SHA256.output_size = 256 / 8;\n    SHA256.prototype.output_size = SHA256.output_size;\n\n    SHA256.prototype._doReset = function () {\n      return this._hash = new WordArray(glbl.H.slice(0));\n    };\n\n    SHA256.prototype.get_output_size = function () {\n      return this.output_size;\n    };\n\n    SHA256.prototype._doProcessBlock = function (M, offset) {\n      var H, K, W, a, b, c, ch, d, e, f, g, gamma0, gamma0x, gamma1, gamma1x, h, i, maj, sigma0, sigma1, t1, t2, _i;\n\n      H = this._hash.words;\n      W = glbl.W;\n      K = glbl.K;\n      a = H[0];\n      b = H[1];\n      c = H[2];\n      d = H[3];\n      e = H[4];\n      f = H[5];\n      g = H[6];\n      h = H[7];\n\n      for (i = _i = 0; _i < 64; i = ++_i) {\n        if (i < 16) {\n          W[i] = M[offset + i] | 0;\n        } else {\n          gamma0x = W[i - 15];\n          gamma0 = (gamma0x << 25 | gamma0x >>> 7) ^ (gamma0x << 14 | gamma0x >>> 18) ^ gamma0x >>> 3;\n          gamma1x = W[i - 2];\n          gamma1 = (gamma1x << 15 | gamma1x >>> 17) ^ (gamma1x << 13 | gamma1x >>> 19) ^ gamma1x >>> 10;\n          W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16];\n        }\n\n        ch = e & f ^ ~e & g;\n        maj = a & b ^ a & c ^ b & c;\n        sigma0 = (a << 30 | a >>> 2) ^ (a << 19 | a >>> 13) ^ (a << 10 | a >>> 22);\n        sigma1 = (e << 26 | e >>> 6) ^ (e << 21 | e >>> 11) ^ (e << 7 | e >>> 25);\n        t1 = h + sigma1 + ch + K[i] + W[i];\n        t2 = sigma0 + maj;\n        h = g;\n        g = f;\n        f = e;\n        e = d + t1 | 0;\n        d = c;\n        c = b;\n        b = a;\n        a = t1 + t2 | 0;\n      }\n\n      H[0] = H[0] + a | 0;\n      H[1] = H[1] + b | 0;\n      H[2] = H[2] + c | 0;\n      H[3] = H[3] + d | 0;\n      H[4] = H[4] + e | 0;\n      H[5] = H[5] + f | 0;\n      H[6] = H[6] + g | 0;\n      return H[7] = H[7] + h | 0;\n    };\n\n    SHA256.prototype._doFinalize = function () {\n      var data, dataWords, nBitsLeft, nBitsTotal;\n      data = this._data;\n      dataWords = data.words;\n      nBitsTotal = this._nDataBytes * 8;\n      nBitsLeft = data.sigBytes * 8;\n      dataWords[nBitsLeft >>> 5] |= 0x80 << 24 - nBitsLeft % 32;\n      dataWords[(nBitsLeft + 64 >>> 9 << 4) + 14] = Math.floor(nBitsTotal / 0x100000000);\n      dataWords[(nBitsLeft + 64 >>> 9 << 4) + 15] = nBitsTotal;\n      data.sigBytes = dataWords.length * 4;\n\n      this._process();\n\n      return this._hash;\n    };\n\n    SHA256.prototype.scrub = function () {\n      return this._hash.scrub();\n    };\n\n    SHA256.prototype.copy_to = function (obj) {\n      SHA256.__super__.copy_to.call(this, obj);\n\n      return obj._hash = this._hash.clone();\n    };\n\n    SHA256.prototype.clone = function () {\n      var out;\n      out = new SHA256();\n      this.copy_to(out);\n      return out;\n    };\n\n    return SHA256;\n  }(Hasher);\n\n  transform = function (x) {\n    var out;\n    out = new SHA256().finalize(x);\n    x.scrub();\n    return out;\n  };\n\n  exports.SHA256 = SHA256;\n  exports.transform = transform;\n}).call(this);","map":{"version":3,"sources":["/home/os/Desktop/hello-world-tutorial/node_modules/triplesec/lib/sha256.js"],"names":["Global","Hasher","SHA256","WordArray","glbl","transform","__hasProp","hasOwnProperty","__extends","child","parent","key","call","ctor","constructor","prototype","__super__","require","H","K","W","init","isPrime","n","f","sqn","_i","Math","ceil","sqrt","getFractionalBits","nPrime","_results","pow","push","_super","apply","arguments","blockSize","output_size","_doReset","_hash","slice","get_output_size","_doProcessBlock","M","offset","a","b","c","ch","d","e","g","gamma0","gamma0x","gamma1","gamma1x","h","i","maj","sigma0","sigma1","t1","t2","words","_doFinalize","data","dataWords","nBitsLeft","nBitsTotal","_data","_nDataBytes","sigBytes","floor","length","_process","scrub","copy_to","obj","clone","out","x","finalize","exports"],"mappings":"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","sourcesContent":["// Generated by IcedCoffeeScript 108.0.8\n(function() {\n  var Global, Hasher, SHA256, WordArray, glbl, transform,\n    __hasProp = {}.hasOwnProperty,\n    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\n  WordArray = require('./wordarray').WordArray;\n\n  Hasher = require('./algbase').Hasher;\n\n  Global = (function() {\n    function Global() {\n      this.H = [];\n      this.K = [];\n      this.W = [];\n      this.init();\n    }\n\n    Global.prototype.isPrime = function(n) {\n      var f, sqn, _i;\n      if (n === 2 || n === 3 || n === 5 || n === 7) {\n        return true;\n      }\n      if (n === 1 || n === 4 || n === 6 || n === 8 || n === 9) {\n        return false;\n      }\n      sqn = Math.ceil(Math.sqrt(n));\n      for (f = _i = 2; 2 <= sqn ? _i <= sqn : _i >= sqn; f = 2 <= sqn ? ++_i : --_i) {\n        if ((n % f) === 0) {\n          return false;\n        }\n      }\n      return true;\n    };\n\n    Global.prototype.getFractionalBits = function(n) {\n      return ((n - (n | 0)) * 0x100000000) | 0;\n    };\n\n    Global.prototype.init = function() {\n      var n, nPrime, _results;\n      n = 2;\n      nPrime = 0;\n      _results = [];\n      while (nPrime < 64) {\n        if (this.isPrime(n)) {\n          if (nPrime < 8) {\n            this.H[nPrime] = this.getFractionalBits(Math.pow(n, 1 / 2));\n          }\n          this.K[nPrime] = this.getFractionalBits(Math.pow(n, 1 / 3));\n          nPrime++;\n        }\n        _results.push(n++);\n      }\n      return _results;\n    };\n\n    return Global;\n\n  })();\n\n  glbl = new Global();\n\n  SHA256 = (function(_super) {\n    __extends(SHA256, _super);\n\n    function SHA256() {\n      return SHA256.__super__.constructor.apply(this, arguments);\n    }\n\n    SHA256.blockSize = 512 / 32;\n\n    SHA256.prototype.blockSize = SHA256.blockSize;\n\n    SHA256.output_size = 256 / 8;\n\n    SHA256.prototype.output_size = SHA256.output_size;\n\n    SHA256.prototype._doReset = function() {\n      return this._hash = new WordArray(glbl.H.slice(0));\n    };\n\n    SHA256.prototype.get_output_size = function() {\n      return this.output_size;\n    };\n\n    SHA256.prototype._doProcessBlock = function(M, offset) {\n      var H, K, W, a, b, c, ch, d, e, f, g, gamma0, gamma0x, gamma1, gamma1x, h, i, maj, sigma0, sigma1, t1, t2, _i;\n      H = this._hash.words;\n      W = glbl.W;\n      K = glbl.K;\n      a = H[0];\n      b = H[1];\n      c = H[2];\n      d = H[3];\n      e = H[4];\n      f = H[5];\n      g = H[6];\n      h = H[7];\n      for (i = _i = 0; _i < 64; i = ++_i) {\n        if (i < 16) {\n          W[i] = M[offset + i] | 0;\n        } else {\n          gamma0x = W[i - 15];\n          gamma0 = ((gamma0x << 25) | (gamma0x >>> 7)) ^ ((gamma0x << 14) | (gamma0x >>> 18)) ^ (gamma0x >>> 3);\n          gamma1x = W[i - 2];\n          gamma1 = ((gamma1x << 15) | (gamma1x >>> 17)) ^ ((gamma1x << 13) | (gamma1x >>> 19)) ^ (gamma1x >>> 10);\n          W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16];\n        }\n        ch = (e & f) ^ (~e & g);\n        maj = (a & b) ^ (a & c) ^ (b & c);\n        sigma0 = ((a << 30) | (a >>> 2)) ^ ((a << 19) | (a >>> 13)) ^ ((a << 10) | (a >>> 22));\n        sigma1 = ((e << 26) | (e >>> 6)) ^ ((e << 21) | (e >>> 11)) ^ ((e << 7) | (e >>> 25));\n        t1 = h + sigma1 + ch + K[i] + W[i];\n        t2 = sigma0 + maj;\n        h = g;\n        g = f;\n        f = e;\n        e = (d + t1) | 0;\n        d = c;\n        c = b;\n        b = a;\n        a = (t1 + t2) | 0;\n      }\n      H[0] = (H[0] + a) | 0;\n      H[1] = (H[1] + b) | 0;\n      H[2] = (H[2] + c) | 0;\n      H[3] = (H[3] + d) | 0;\n      H[4] = (H[4] + e) | 0;\n      H[5] = (H[5] + f) | 0;\n      H[6] = (H[6] + g) | 0;\n      return H[7] = (H[7] + h) | 0;\n    };\n\n    SHA256.prototype._doFinalize = function() {\n      var data, dataWords, nBitsLeft, nBitsTotal;\n      data = this._data;\n      dataWords = data.words;\n      nBitsTotal = this._nDataBytes * 8;\n      nBitsLeft = data.sigBytes * 8;\n      dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\n      dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = Math.floor(nBitsTotal / 0x100000000);\n      dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = nBitsTotal;\n      data.sigBytes = dataWords.length * 4;\n      this._process();\n      return this._hash;\n    };\n\n    SHA256.prototype.scrub = function() {\n      return this._hash.scrub();\n    };\n\n    SHA256.prototype.copy_to = function(obj) {\n      SHA256.__super__.copy_to.call(this, obj);\n      return obj._hash = this._hash.clone();\n    };\n\n    SHA256.prototype.clone = function() {\n      var out;\n      out = new SHA256();\n      this.copy_to(out);\n      return out;\n    };\n\n    return SHA256;\n\n  })(Hasher);\n\n  transform = function(x) {\n    var out;\n    out = (new SHA256).finalize(x);\n    x.scrub();\n    return out;\n  };\n\n  exports.SHA256 = SHA256;\n\n  exports.transform = transform;\n\n}).call(this);\n"]},"metadata":{},"sourceType":"script"}