{"ast":null,"code":"// Generated by IcedCoffeeScript 108.0.8\n(function () {\n  var CombineBase,\n      Concat,\n      HMAC,\n      SHA3,\n      SHA512,\n      WordArray,\n      XOR,\n      bulk_sign,\n      _ref,\n      __hasProp = {}.hasOwnProperty,\n      __extends = function (child, parent) {\n    for (var key in parent) {\n      if (__hasProp.call(parent, key)) child[key] = parent[key];\n    }\n\n    function ctor() {\n      this.constructor = child;\n    }\n\n    ctor.prototype = parent.prototype;\n    child.prototype = new ctor();\n    child.__super__ = parent.prototype;\n    return child;\n  };\n\n  _ref = require('./hmac'), HMAC = _ref.HMAC, bulk_sign = _ref.bulk_sign;\n  SHA512 = require('./sha512').SHA512;\n  SHA3 = require('./sha3').SHA3;\n  WordArray = require('./wordarray').WordArray;\n\n  CombineBase = function () {\n    function CombineBase() {\n      this.hasherBlockSize = this.hashers[0].hasherBlockSize;\n      this.hasherBlockSizeBytes = this.hasherBlockSize * 4;\n      this.reset();\n    }\n\n    CombineBase.prototype.reset = function () {\n      var h, _i, _len, _ref1;\n\n      _ref1 = this.hashers;\n\n      for (_i = 0, _len = _ref1.length; _i < _len; _i++) {\n        h = _ref1[_i];\n        h.reset();\n      }\n\n      return this;\n    };\n\n    CombineBase.prototype.update = function (w) {\n      var h, _i, _len, _ref1;\n\n      _ref1 = this.hashers;\n\n      for (_i = 0, _len = _ref1.length; _i < _len; _i++) {\n        h = _ref1[_i];\n        h.update(w);\n      }\n\n      return this;\n    };\n\n    CombineBase.prototype.scrub = function () {\n      var h, _i, _len, _ref1;\n\n      _ref1 = this.hashers;\n\n      for (_i = 0, _len = _ref1.length; _i < _len; _i++) {\n        h = _ref1[_i];\n        h.scrub();\n      }\n\n      return this;\n    };\n\n    CombineBase.prototype.finalize = function (w) {\n      var h, hashes, out, _i, _len, _ref1;\n\n      hashes = function () {\n        var _i, _len, _ref1, _results;\n\n        _ref1 = this.hashers;\n        _results = [];\n\n        for (_i = 0, _len = _ref1.length; _i < _len; _i++) {\n          h = _ref1[_i];\n\n          _results.push(h.finalize(w));\n        }\n\n        return _results;\n      }.call(this);\n\n      out = hashes[0];\n      _ref1 = hashes.slice(1);\n\n      for (_i = 0, _len = _ref1.length; _i < _len; _i++) {\n        h = _ref1[_i];\n\n        this._coalesce(out, h);\n\n        h.scrub();\n      }\n\n      return out;\n    };\n\n    return CombineBase;\n  }();\n\n  Concat = function (_super) {\n    __extends(Concat, _super);\n\n    function Concat(key, klasses) {\n      var hm, i, klass, subkey, subkeys;\n\n      if (klasses == null) {\n        klasses = [SHA512, SHA3];\n      }\n\n      subkeys = key.split(klasses.length);\n\n      this.hashers = function () {\n        var _i, _len, _results;\n\n        _results = [];\n\n        for (i = _i = 0, _len = klasses.length; _i < _len; i = ++_i) {\n          klass = klasses[i];\n          subkey = subkeys[i];\n          hm = new HMAC(subkey, klass);\n          subkey.scrub();\n\n          _results.push(hm);\n        }\n\n        return _results;\n      }();\n\n      Concat.__super__.constructor.call(this);\n    }\n\n    Concat.get_output_size = function () {\n      return SHA512.output_size + SHA3.output_size;\n    };\n\n    Concat.prototype._coalesce = function (out, h) {\n      return out.concat(h);\n    };\n\n    Concat.prototype.get_output_size = function () {\n      var h, tot, _i, _len, _ref1;\n\n      tot = 0;\n      _ref1 = this.hashers;\n\n      for (_i = 0, _len = _ref1.length; _i < _len; _i++) {\n        h = _ref1[_i];\n        tot += h.get_output_size();\n      }\n\n      return tot;\n    };\n\n    Concat.sign = function (_arg) {\n      var input, key;\n      key = _arg.key, input = _arg.input;\n      return new Concat(key).finalize(input);\n    };\n\n    Concat.bulk_sign = function (args, cb) {\n      args.klass = Concat;\n      args.what = \"HMAC-SHA512-SHA3\";\n      return bulk_sign(args, cb);\n    };\n\n    return Concat;\n  }(CombineBase);\n\n  XOR = function (_super) {\n    __extends(XOR, _super);\n\n    function XOR(key, klasses) {\n      var klass;\n\n      if (klasses == null) {\n        klasses = [SHA512, SHA3];\n      }\n\n      this.hashers = function () {\n        var _i, _len, _results;\n\n        _results = [];\n\n        for (_i = 0, _len = klasses.length; _i < _len; _i++) {\n          klass = klasses[_i];\n\n          _results.push(new HMAC(key, klass));\n        }\n\n        return _results;\n      }();\n\n      XOR.__super__.constructor.call(this);\n    }\n\n    XOR.prototype.reset = function () {\n      var h, i, _i, _len, _ref1;\n\n      XOR.__super__.reset.call(this);\n\n      _ref1 = this.hashers;\n\n      for (i = _i = 0, _len = _ref1.length; _i < _len; i = ++_i) {\n        h = _ref1[i];\n        h.update(new WordArray([i]));\n      }\n\n      return this;\n    };\n\n    XOR.get_output_size = function () {\n      return Math.max(SHA512.output_size, SHA3.output_size);\n    };\n\n    XOR.prototype._coalesce = function (out, h) {\n      return out.xor(h, {});\n    };\n\n    XOR.prototype.get_output_size = function () {\n      var h;\n      return Math.max.apply(Math, function () {\n        var _i, _len, _ref1, _results;\n\n        _ref1 = this.hashers;\n        _results = [];\n\n        for (_i = 0, _len = _ref1.length; _i < _len; _i++) {\n          h = _ref1[_i];\n\n          _results.push(h.get_output_size());\n        }\n\n        return _results;\n      }.call(this));\n    };\n\n    XOR.sign = function (_arg) {\n      var input, key;\n      key = _arg.key, input = _arg.input;\n      return new XOR(key).finalize(input);\n    };\n\n    XOR.bulk_sign = function (arg, cb) {\n      arg.klass = XOR;\n      arg.what = \"HMAC-SHA512-XOR-SHA3\";\n      return bulk_sign(arg, cb);\n    };\n\n    return XOR;\n  }(CombineBase);\n\n  exports.Concat = Concat;\n  exports.XOR = XOR;\n}).call(this);","map":{"version":3,"sources":["/home/os/Desktop/hello-world-tutorial/node_modules/triplesec/lib/combine.js"],"names":["CombineBase","Concat","HMAC","SHA3","SHA512","WordArray","XOR","bulk_sign","_ref","__hasProp","hasOwnProperty","__extends","child","parent","key","call","ctor","constructor","prototype","__super__","require","hasherBlockSize","hashers","hasherBlockSizeBytes","reset","h","_i","_len","_ref1","length","update","w","scrub","finalize","hashes","out","_results","push","slice","_coalesce","_super","klasses","hm","i","klass","subkey","subkeys","split","get_output_size","output_size","concat","tot","sign","_arg","input","args","cb","what","Math","max","xor","apply","arg","exports"],"mappings":"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","sourcesContent":["// Generated by IcedCoffeeScript 108.0.8\n(function() {\n  var CombineBase, Concat, HMAC, SHA3, SHA512, WordArray, XOR, bulk_sign, _ref,\n    __hasProp = {}.hasOwnProperty,\n    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\n  _ref = require('./hmac'), HMAC = _ref.HMAC, bulk_sign = _ref.bulk_sign;\n\n  SHA512 = require('./sha512').SHA512;\n\n  SHA3 = require('./sha3').SHA3;\n\n  WordArray = require('./wordarray').WordArray;\n\n  CombineBase = (function() {\n    function CombineBase() {\n      this.hasherBlockSize = this.hashers[0].hasherBlockSize;\n      this.hasherBlockSizeBytes = this.hasherBlockSize * 4;\n      this.reset();\n    }\n\n    CombineBase.prototype.reset = function() {\n      var h, _i, _len, _ref1;\n      _ref1 = this.hashers;\n      for (_i = 0, _len = _ref1.length; _i < _len; _i++) {\n        h = _ref1[_i];\n        h.reset();\n      }\n      return this;\n    };\n\n    CombineBase.prototype.update = function(w) {\n      var h, _i, _len, _ref1;\n      _ref1 = this.hashers;\n      for (_i = 0, _len = _ref1.length; _i < _len; _i++) {\n        h = _ref1[_i];\n        h.update(w);\n      }\n      return this;\n    };\n\n    CombineBase.prototype.scrub = function() {\n      var h, _i, _len, _ref1;\n      _ref1 = this.hashers;\n      for (_i = 0, _len = _ref1.length; _i < _len; _i++) {\n        h = _ref1[_i];\n        h.scrub();\n      }\n      return this;\n    };\n\n    CombineBase.prototype.finalize = function(w) {\n      var h, hashes, out, _i, _len, _ref1;\n      hashes = (function() {\n        var _i, _len, _ref1, _results;\n        _ref1 = this.hashers;\n        _results = [];\n        for (_i = 0, _len = _ref1.length; _i < _len; _i++) {\n          h = _ref1[_i];\n          _results.push(h.finalize(w));\n        }\n        return _results;\n      }).call(this);\n      out = hashes[0];\n      _ref1 = hashes.slice(1);\n      for (_i = 0, _len = _ref1.length; _i < _len; _i++) {\n        h = _ref1[_i];\n        this._coalesce(out, h);\n        h.scrub();\n      }\n      return out;\n    };\n\n    return CombineBase;\n\n  })();\n\n  Concat = (function(_super) {\n    __extends(Concat, _super);\n\n    function Concat(key, klasses) {\n      var hm, i, klass, subkey, subkeys;\n      if (klasses == null) {\n        klasses = [SHA512, SHA3];\n      }\n      subkeys = key.split(klasses.length);\n      this.hashers = (function() {\n        var _i, _len, _results;\n        _results = [];\n        for (i = _i = 0, _len = klasses.length; _i < _len; i = ++_i) {\n          klass = klasses[i];\n          subkey = subkeys[i];\n          hm = new HMAC(subkey, klass);\n          subkey.scrub();\n          _results.push(hm);\n        }\n        return _results;\n      })();\n      Concat.__super__.constructor.call(this);\n    }\n\n    Concat.get_output_size = function() {\n      return SHA512.output_size + SHA3.output_size;\n    };\n\n    Concat.prototype._coalesce = function(out, h) {\n      return out.concat(h);\n    };\n\n    Concat.prototype.get_output_size = function() {\n      var h, tot, _i, _len, _ref1;\n      tot = 0;\n      _ref1 = this.hashers;\n      for (_i = 0, _len = _ref1.length; _i < _len; _i++) {\n        h = _ref1[_i];\n        tot += h.get_output_size();\n      }\n      return tot;\n    };\n\n    Concat.sign = function(_arg) {\n      var input, key;\n      key = _arg.key, input = _arg.input;\n      return (new Concat(key)).finalize(input);\n    };\n\n    Concat.bulk_sign = function(args, cb) {\n      args.klass = Concat;\n      args.what = \"HMAC-SHA512-SHA3\";\n      return bulk_sign(args, cb);\n    };\n\n    return Concat;\n\n  })(CombineBase);\n\n  XOR = (function(_super) {\n    __extends(XOR, _super);\n\n    function XOR(key, klasses) {\n      var klass;\n      if (klasses == null) {\n        klasses = [SHA512, SHA3];\n      }\n      this.hashers = (function() {\n        var _i, _len, _results;\n        _results = [];\n        for (_i = 0, _len = klasses.length; _i < _len; _i++) {\n          klass = klasses[_i];\n          _results.push(new HMAC(key, klass));\n        }\n        return _results;\n      })();\n      XOR.__super__.constructor.call(this);\n    }\n\n    XOR.prototype.reset = function() {\n      var h, i, _i, _len, _ref1;\n      XOR.__super__.reset.call(this);\n      _ref1 = this.hashers;\n      for (i = _i = 0, _len = _ref1.length; _i < _len; i = ++_i) {\n        h = _ref1[i];\n        h.update(new WordArray([i]));\n      }\n      return this;\n    };\n\n    XOR.get_output_size = function() {\n      return Math.max(SHA512.output_size, SHA3.output_size);\n    };\n\n    XOR.prototype._coalesce = function(out, h) {\n      return out.xor(h, {});\n    };\n\n    XOR.prototype.get_output_size = function() {\n      var h;\n      return Math.max.apply(Math, (function() {\n        var _i, _len, _ref1, _results;\n        _ref1 = this.hashers;\n        _results = [];\n        for (_i = 0, _len = _ref1.length; _i < _len; _i++) {\n          h = _ref1[_i];\n          _results.push(h.get_output_size());\n        }\n        return _results;\n      }).call(this));\n    };\n\n    XOR.sign = function(_arg) {\n      var input, key;\n      key = _arg.key, input = _arg.input;\n      return (new XOR(key)).finalize(input);\n    };\n\n    XOR.bulk_sign = function(arg, cb) {\n      arg.klass = XOR;\n      arg.what = \"HMAC-SHA512-XOR-SHA3\";\n      return bulk_sign(arg, cb);\n    };\n\n    return XOR;\n\n  })(CombineBase);\n\n  exports.Concat = Concat;\n\n  exports.XOR = XOR;\n\n}).call(this);\n"]},"metadata":{},"sourceType":"script"}