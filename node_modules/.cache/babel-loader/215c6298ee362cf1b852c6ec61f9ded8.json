{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst service_1 = require(\"./service\");\n\nclass HackerNews extends service_1.Service {\n  getBaseUrls() {\n    const baseUrls = ['https://news.ycombinator.com/user?id=', 'http://news.ycombinator.com/user?id=', 'news.ycombinator.com/user?id='];\n    return baseUrls;\n  }\n\n  getProofUrl(proof) {\n    const baseUrls = this.getBaseUrls();\n    const proofUrl = super.prefixScheme(proof.proof_url);\n\n    for (let i = 0; i < baseUrls.length; i++) {\n      if (proofUrl === `${baseUrls[i]}${proof.identifier}`) {\n        return proofUrl;\n      }\n    }\n\n    throw new Error(`Proof url ${proof.proof_url} is not valid for service ${proof.service}`);\n  }\n\n  normalizeUrl(_proof) {\n    return '';\n  }\n\n  getProofStatement(searchText, cheerio) {\n    const $ = cheerio.load(searchText);\n    const tables = $('#hnmain').children().find('table');\n    let statement = '';\n\n    if (tables.length > 0) {\n      tables.each((tableIndex, table) => {\n        const rows = $(table).find('tr');\n\n        if (rows.length > 0) {\n          rows.each((idx, row) => {\n            const heading = $(row).find('td').first().text().trim();\n\n            if (heading === 'about:') {\n              statement = $(row).find('td').last().text().trim();\n            }\n          });\n        }\n      });\n    }\n\n    return statement;\n  }\n\n}\n\nexports.HackerNews = HackerNews;","map":{"version":3,"sources":["../../../src/profiles/services/hackerNews.ts"],"names":[],"mappings":";;;;;;AAAA,MAAA,SAAA,GAAA,OAAA,CAAA,WAAA,CAAA;;AAGA,MAAM,UAAN,SAAyB,SAAA,CAAA,OAAzB,CAAgC;AAC9B,EAAA,WAAW,GAAA;AACT,UAAM,QAAQ,GAAG,CACf,uCADe,EAEf,sCAFe,EAGf,+BAHe,CAAjB;AAKA,WAAO,QAAP;AACD;;AAED,EAAA,WAAW,CAAC,KAAD,EAAwB;AACjC,UAAM,QAAQ,GAAG,KAAK,WAAL,EAAjB;AAEA,UAAM,QAAQ,GAAG,MAAM,YAAN,CAAmB,KAAK,CAAC,SAAzB,CAAjB;;AAEA,SAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,QAAQ,CAAC,MAA7B,EAAqC,CAAC,EAAtC,EAA0C;AACxC,UAAI,QAAQ,KAAK,GAAG,QAAQ,CAAC,CAAD,CAAG,GAAG,KAAK,CAAC,UAAU,EAAlD,EAAsD;AACpD,eAAO,QAAP;AACD;AACF;;AACD,UAAM,IAAI,KAAJ,CAAU,aAAa,KAAK,CAAC,SAAS,6BAA6B,KAAK,CAAC,OAAO,EAAhF,CAAN;AACD;;AAED,EAAA,YAAY,CAAC,MAAD,EAAyB;AACnC,WAAO,EAAP;AACD;;AAED,EAAA,iBAAiB,CAAC,UAAD,EAAqB,OAArB,EAA+C;AAC9D,UAAM,CAAC,GAAG,OAAO,CAAC,IAAR,CAAa,UAAb,CAAV;AACA,UAAM,MAAM,GAAG,CAAC,CAAC,SAAD,CAAD,CAAa,QAAb,GAAwB,IAAxB,CAA6B,OAA7B,CAAf;AACA,QAAI,SAAS,GAAG,EAAhB;;AAEA,QAAI,MAAM,CAAC,MAAP,GAAgB,CAApB,EAAuB;AACrB,MAAA,MAAM,CAAC,IAAP,CAAY,CAAC,UAAD,EAAa,KAAb,KAAsB;AAChC,cAAM,IAAI,GAAG,CAAC,CAAC,KAAD,CAAD,CAAS,IAAT,CAAc,IAAd,CAAb;;AAEA,YAAI,IAAI,CAAC,MAAL,GAAc,CAAlB,EAAqB;AACnB,UAAA,IAAI,CAAC,IAAL,CAAU,CAAC,GAAD,EAAM,GAAN,KAAa;AACrB,kBAAM,OAAO,GAAG,CAAC,CAAC,GAAD,CAAD,CAAO,IAAP,CAAY,IAAZ,EACb,KADa,GAEb,IAFa,GAGb,IAHa,EAAhB;;AAKA,gBAAI,OAAO,KAAK,QAAhB,EAA0B;AACxB,cAAA,SAAS,GAAG,CAAC,CAAC,GAAD,CAAD,CAAO,IAAP,CAAY,IAAZ,EACT,IADS,GAET,IAFS,GAGT,IAHS,EAAZ;AAID;AACF,WAZD;AAaD;AACF,OAlBD;AAmBD;;AAED,WAAO,SAAP;AACD;;AAvD6B;;AA0DvB,OAAA,CAAA,UAAA,GAAA,UAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst service_1 = require(\"./service\");\nclass HackerNews extends service_1.Service {\n    getBaseUrls() {\n        const baseUrls = [\n            'https://news.ycombinator.com/user?id=',\n            'http://news.ycombinator.com/user?id=',\n            'news.ycombinator.com/user?id='\n        ];\n        return baseUrls;\n    }\n    getProofUrl(proof) {\n        const baseUrls = this.getBaseUrls();\n        const proofUrl = super.prefixScheme(proof.proof_url);\n        for (let i = 0; i < baseUrls.length; i++) {\n            if (proofUrl === `${baseUrls[i]}${proof.identifier}`) {\n                return proofUrl;\n            }\n        }\n        throw new Error(`Proof url ${proof.proof_url} is not valid for service ${proof.service}`);\n    }\n    normalizeUrl(_proof) {\n        return '';\n    }\n    getProofStatement(searchText, cheerio) {\n        const $ = cheerio.load(searchText);\n        const tables = $('#hnmain').children().find('table');\n        let statement = '';\n        if (tables.length > 0) {\n            tables.each((tableIndex, table) => {\n                const rows = $(table).find('tr');\n                if (rows.length > 0) {\n                    rows.each((idx, row) => {\n                        const heading = $(row).find('td')\n                            .first()\n                            .text()\n                            .trim();\n                        if (heading === 'about:') {\n                            statement = $(row).find('td')\n                                .last()\n                                .text()\n                                .trim();\n                        }\n                    });\n                }\n            });\n        }\n        return statement;\n    }\n}\nexports.HackerNews = HackerNews;\n//# sourceMappingURL=hackerNews.js.map"]},"metadata":{},"sourceType":"script"}