{"ast":null,"code":"// Generated by IcedCoffeeScript 108.0.8\n(function () {\n  var BlockCipher,\n      BufferedBlockAlgorithm,\n      Hasher,\n      StreamCipher,\n      WordArray,\n      util,\n      __hasProp = {}.hasOwnProperty,\n      __extends = function (child, parent) {\n    for (var key in parent) {\n      if (__hasProp.call(parent, key)) child[key] = parent[key];\n    }\n\n    function ctor() {\n      this.constructor = child;\n    }\n\n    ctor.prototype = parent.prototype;\n    child.prototype = new ctor();\n    child.__super__ = parent.prototype;\n    return child;\n  };\n\n  WordArray = require('./wordarray').WordArray;\n  util = require('./util');\n\n  BufferedBlockAlgorithm = function () {\n    BufferedBlockAlgorithm.prototype._minBufferSize = 0;\n\n    function BufferedBlockAlgorithm() {\n      this.reset();\n    }\n\n    BufferedBlockAlgorithm.prototype.reset = function () {\n      this._data = new WordArray();\n      return this._nDataBytes = 0;\n    };\n\n    BufferedBlockAlgorithm.prototype._append = function (data) {\n      this._data.concat(data);\n\n      return this._nDataBytes += data.sigBytes;\n    };\n\n    BufferedBlockAlgorithm.prototype._process = function (doFlush) {\n      var blockSizeBytes, data, dataSigBytes, dataWords, nBlocksReady, nBytesReady, nWordsReady, offset, processedWords, _i, _ref;\n\n      data = this._data;\n      dataWords = data.words;\n      dataSigBytes = data.sigBytes;\n      blockSizeBytes = this.blockSize * 4;\n      nBlocksReady = dataSigBytes / blockSizeBytes;\n\n      if (doFlush) {\n        nBlocksReady = Math.ceil(nBlocksReady);\n      } else {\n        nBlocksReady = Math.max((nBlocksReady | 0) - this._minBufferSize, 0);\n      }\n\n      nWordsReady = nBlocksReady * this.blockSize;\n      nBytesReady = Math.min(nWordsReady * 4, dataSigBytes);\n\n      if (nWordsReady) {\n        for (offset = _i = 0, _ref = this.blockSize; _ref > 0 ? _i < nWordsReady : _i > nWordsReady; offset = _i += _ref) {\n          this._doProcessBlock(dataWords, offset);\n        }\n\n        processedWords = dataWords.splice(0, nWordsReady);\n        data.sigBytes -= nBytesReady;\n      }\n\n      return new WordArray(processedWords, nBytesReady);\n    };\n\n    BufferedBlockAlgorithm.prototype.copy_to = function (out) {\n      out._data = this._data.clone();\n      return out._nDataBytes = this._nDataBytes;\n    };\n\n    BufferedBlockAlgorithm.prototype.clone = function () {\n      var obj;\n      obj = new BufferedBlockAlgorithm();\n      this.copy_to(obj);\n      return obj;\n    };\n\n    return BufferedBlockAlgorithm;\n  }();\n\n  Hasher = function (_super) {\n    __extends(Hasher, _super);\n\n    function Hasher() {\n      Hasher.__super__.constructor.call(this);\n    }\n\n    Hasher.prototype.reset = function () {\n      Hasher.__super__.reset.call(this);\n\n      this._doReset();\n\n      return this;\n    };\n\n    Hasher.prototype.update = function (messageUpdate) {\n      this._append(messageUpdate);\n\n      this._process();\n\n      return this;\n    };\n\n    Hasher.prototype.finalize = function (messageUpdate) {\n      if (messageUpdate) {\n        this._append(messageUpdate);\n      }\n\n      return this._doFinalize();\n    };\n\n    Hasher.prototype.bufhash = function (input) {\n      var out, wa_in, wa_out;\n      wa_in = WordArray.from_buffer(input);\n      wa_out = this.finalize(wa_in);\n      out = wa_out.to_buffer();\n      wa_in.scrub();\n      wa_out.scrub();\n      return out;\n    };\n\n    return Hasher;\n  }(BufferedBlockAlgorithm);\n\n  exports.BlockCipher = BlockCipher = function () {\n    function BlockCipher(key) {}\n\n    BlockCipher.prototype.encryptBlock = function (M, offset) {};\n\n    return BlockCipher;\n  }();\n\n  StreamCipher = function () {\n    function StreamCipher() {}\n\n    StreamCipher.prototype.encryptBlock = function (word_array, dst_offset) {\n      var n_words, pad;\n\n      if (dst_offset == null) {\n        dst_offset = 0;\n      }\n\n      pad = this.get_pad();\n      n_words = Math.min(word_array.words.length - dst_offset, this.bsiw);\n      word_array.xor(pad, {\n        dst_offset: dst_offset,\n        n_words: n_words\n      });\n      pad.scrub();\n      return this.bsiw;\n    };\n\n    StreamCipher.prototype.encrypt = function (word_array) {\n      var i, _i, _ref, _ref1;\n\n      for (i = _i = 0, _ref = word_array.words.length, _ref1 = this.bsiw; _ref1 > 0 ? _i < _ref : _i > _ref; i = _i += _ref1) {\n        this.encryptBlock(word_array, i);\n      }\n\n      return word_array;\n    };\n\n    StreamCipher.prototype.bulk_encrypt = function (_arg, cb) {\n      var async_args, input, progress_hook, slice_args, what;\n      input = _arg.input, progress_hook = _arg.progress_hook, what = _arg.what;\n      slice_args = {\n        update: function (_this) {\n          return function (lo, hi) {\n            var i, _i, _ref, _results;\n\n            _results = [];\n\n            for (i = _i = lo, _ref = _this.bsiw; _ref > 0 ? _i < hi : _i > hi; i = _i += _ref) {\n              _results.push(_this.encryptBlock(input, i));\n            }\n\n            return _results;\n          };\n        }(this),\n        finalize: function () {\n          return input;\n        },\n        default_n: this.bsiw * 1024\n      };\n      async_args = {\n        progress_hook: progress_hook,\n        cb: cb,\n        what: what\n      };\n      return util.bulk(input.sigBytes, slice_args, async_args);\n    };\n\n    return StreamCipher;\n  }();\n\n  exports.BlockCipher = BlockCipher;\n  exports.Hasher = Hasher;\n  exports.BufferedBlockAlgorithm = BufferedBlockAlgorithm;\n  exports.StreamCipher = StreamCipher;\n}).call(this);","map":{"version":3,"sources":["/home/os/Desktop/hello-world-tutorial/node_modules/triplesec/lib/algbase.js"],"names":["BlockCipher","BufferedBlockAlgorithm","Hasher","StreamCipher","WordArray","util","__hasProp","hasOwnProperty","__extends","child","parent","key","call","ctor","constructor","prototype","__super__","require","_minBufferSize","reset","_data","_nDataBytes","_append","data","concat","sigBytes","_process","doFlush","blockSizeBytes","dataSigBytes","dataWords","nBlocksReady","nBytesReady","nWordsReady","offset","processedWords","_i","_ref","words","blockSize","Math","ceil","max","min","_doProcessBlock","splice","copy_to","out","clone","obj","_super","_doReset","update","messageUpdate","finalize","_doFinalize","bufhash","input","wa_in","wa_out","from_buffer","to_buffer","scrub","exports","encryptBlock","M","word_array","dst_offset","n_words","pad","get_pad","length","bsiw","xor","encrypt","i","_ref1","bulk_encrypt","_arg","cb","async_args","progress_hook","slice_args","what","_this","lo","hi","_results","push","default_n","bulk"],"mappings":"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","sourcesContent":["// Generated by IcedCoffeeScript 108.0.8\n(function() {\n  var BlockCipher, BufferedBlockAlgorithm, Hasher, StreamCipher, WordArray, util,\n    __hasProp = {}.hasOwnProperty,\n    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\n  WordArray = require('./wordarray').WordArray;\n\n  util = require('./util');\n\n  BufferedBlockAlgorithm = (function() {\n    BufferedBlockAlgorithm.prototype._minBufferSize = 0;\n\n    function BufferedBlockAlgorithm() {\n      this.reset();\n    }\n\n    BufferedBlockAlgorithm.prototype.reset = function() {\n      this._data = new WordArray();\n      return this._nDataBytes = 0;\n    };\n\n    BufferedBlockAlgorithm.prototype._append = function(data) {\n      this._data.concat(data);\n      return this._nDataBytes += data.sigBytes;\n    };\n\n    BufferedBlockAlgorithm.prototype._process = function(doFlush) {\n      var blockSizeBytes, data, dataSigBytes, dataWords, nBlocksReady, nBytesReady, nWordsReady, offset, processedWords, _i, _ref;\n      data = this._data;\n      dataWords = data.words;\n      dataSigBytes = data.sigBytes;\n      blockSizeBytes = this.blockSize * 4;\n      nBlocksReady = dataSigBytes / blockSizeBytes;\n      if (doFlush) {\n        nBlocksReady = Math.ceil(nBlocksReady);\n      } else {\n        nBlocksReady = Math.max((nBlocksReady | 0) - this._minBufferSize, 0);\n      }\n      nWordsReady = nBlocksReady * this.blockSize;\n      nBytesReady = Math.min(nWordsReady * 4, dataSigBytes);\n      if (nWordsReady) {\n        for (offset = _i = 0, _ref = this.blockSize; _ref > 0 ? _i < nWordsReady : _i > nWordsReady; offset = _i += _ref) {\n          this._doProcessBlock(dataWords, offset);\n        }\n        processedWords = dataWords.splice(0, nWordsReady);\n        data.sigBytes -= nBytesReady;\n      }\n      return new WordArray(processedWords, nBytesReady);\n    };\n\n    BufferedBlockAlgorithm.prototype.copy_to = function(out) {\n      out._data = this._data.clone();\n      return out._nDataBytes = this._nDataBytes;\n    };\n\n    BufferedBlockAlgorithm.prototype.clone = function() {\n      var obj;\n      obj = new BufferedBlockAlgorithm();\n      this.copy_to(obj);\n      return obj;\n    };\n\n    return BufferedBlockAlgorithm;\n\n  })();\n\n  Hasher = (function(_super) {\n    __extends(Hasher, _super);\n\n    function Hasher() {\n      Hasher.__super__.constructor.call(this);\n    }\n\n    Hasher.prototype.reset = function() {\n      Hasher.__super__.reset.call(this);\n      this._doReset();\n      return this;\n    };\n\n    Hasher.prototype.update = function(messageUpdate) {\n      this._append(messageUpdate);\n      this._process();\n      return this;\n    };\n\n    Hasher.prototype.finalize = function(messageUpdate) {\n      if (messageUpdate) {\n        this._append(messageUpdate);\n      }\n      return this._doFinalize();\n    };\n\n    Hasher.prototype.bufhash = function(input) {\n      var out, wa_in, wa_out;\n      wa_in = WordArray.from_buffer(input);\n      wa_out = this.finalize(wa_in);\n      out = wa_out.to_buffer();\n      wa_in.scrub();\n      wa_out.scrub();\n      return out;\n    };\n\n    return Hasher;\n\n  })(BufferedBlockAlgorithm);\n\n  exports.BlockCipher = BlockCipher = (function() {\n    function BlockCipher(key) {}\n\n    BlockCipher.prototype.encryptBlock = function(M, offset) {};\n\n    return BlockCipher;\n\n  })();\n\n  StreamCipher = (function() {\n    function StreamCipher() {}\n\n    StreamCipher.prototype.encryptBlock = function(word_array, dst_offset) {\n      var n_words, pad;\n      if (dst_offset == null) {\n        dst_offset = 0;\n      }\n      pad = this.get_pad();\n      n_words = Math.min(word_array.words.length - dst_offset, this.bsiw);\n      word_array.xor(pad, {\n        dst_offset: dst_offset,\n        n_words: n_words\n      });\n      pad.scrub();\n      return this.bsiw;\n    };\n\n    StreamCipher.prototype.encrypt = function(word_array) {\n      var i, _i, _ref, _ref1;\n      for (i = _i = 0, _ref = word_array.words.length, _ref1 = this.bsiw; _ref1 > 0 ? _i < _ref : _i > _ref; i = _i += _ref1) {\n        this.encryptBlock(word_array, i);\n      }\n      return word_array;\n    };\n\n    StreamCipher.prototype.bulk_encrypt = function(_arg, cb) {\n      var async_args, input, progress_hook, slice_args, what;\n      input = _arg.input, progress_hook = _arg.progress_hook, what = _arg.what;\n      slice_args = {\n        update: (function(_this) {\n          return function(lo, hi) {\n            var i, _i, _ref, _results;\n            _results = [];\n            for (i = _i = lo, _ref = _this.bsiw; _ref > 0 ? _i < hi : _i > hi; i = _i += _ref) {\n              _results.push(_this.encryptBlock(input, i));\n            }\n            return _results;\n          };\n        })(this),\n        finalize: function() {\n          return input;\n        },\n        default_n: this.bsiw * 1024\n      };\n      async_args = {\n        progress_hook: progress_hook,\n        cb: cb,\n        what: what\n      };\n      return util.bulk(input.sigBytes, slice_args, async_args);\n    };\n\n    return StreamCipher;\n\n  })();\n\n  exports.BlockCipher = BlockCipher;\n\n  exports.Hasher = Hasher;\n\n  exports.BufferedBlockAlgorithm = BufferedBlockAlgorithm;\n\n  exports.StreamCipher = StreamCipher;\n\n}).call(this);\n"]},"metadata":{},"sourceType":"script"}