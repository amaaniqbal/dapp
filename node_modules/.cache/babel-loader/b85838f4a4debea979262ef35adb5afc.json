{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst tslib_1 = require(\"tslib\");\n\nconst logger_1 = require(\"./logger\");\n\nconst errors_1 = require(\"./errors\");\n/**\n *  @ignore\n */\n\n\nexports.BLOCKSTACK_HANDLER = 'blockstack';\n/**\n * Time\n * @private\n * @ignore\n */\n\nfunction nextYear() {\n  return new Date(new Date().setFullYear(new Date().getFullYear() + 1));\n}\n\nexports.nextYear = nextYear;\n/**\n * Time\n * @private\n * @ignore\n */\n\nfunction nextMonth() {\n  return new Date(new Date().setMonth(new Date().getMonth() + 1));\n}\n\nexports.nextMonth = nextMonth;\n/**\n * Time\n * @private\n * @ignore\n */\n\nfunction nextHour() {\n  return new Date(new Date().setHours(new Date().getHours() + 1));\n}\n\nexports.nextHour = nextHour;\n/**\n * Converts megabytes to bytes. Returns 0 if the input is not a finite number.\n * @ignore\n */\n\nfunction megabytesToBytes(megabytes) {\n  if (!Number.isFinite(megabytes)) {\n    return 0;\n  }\n\n  return Math.floor(megabytes * 1024 * 1024);\n}\n\nexports.megabytesToBytes = megabytesToBytes;\n/**\n * Calculate the AES-CBC ciphertext output byte length a given input length.\n * AES has a fixed block size of 16-bytes regardless key size.\n * @ignore\n */\n\nfunction getAesCbcOutputLength(inputByteLength) {\n  // AES-CBC block mode rounds up to the next block size. \n  const cipherTextLength = (Math.floor(inputByteLength / 16) + 1) * 16;\n  return cipherTextLength;\n}\n\nexports.getAesCbcOutputLength = getAesCbcOutputLength;\n/**\n * Calculate the base64 encoded string length for a given input length.\n * This is equivalent to the byte length when the string is ASCII or UTF8-8\n * encoded.\n * @param number\n */\n\nfunction getBase64OutputLength(inputByteLength) {\n  const encodedLength = Math.ceil(inputByteLength / 3) * 4;\n  return encodedLength;\n}\n\nexports.getBase64OutputLength = getBase64OutputLength;\n/**\n * Query Strings\n * @private\n * @ignore\n */\n\nfunction updateQueryStringParameter(uri, key, value) {\n  const re = new RegExp(`([?&])${key}=.*?(&|$)`, 'i');\n  const separator = uri.indexOf('?') !== -1 ? '&' : '?';\n\n  if (uri.match(re)) {\n    return uri.replace(re, `$1${key}=${value}$2`);\n  } else {\n    return `${uri}${separator}${key}=${value}`;\n  }\n}\n\nexports.updateQueryStringParameter = updateQueryStringParameter;\n/**\n * Versioning\n * @param {string} v1 - the left half of the version inequality\n * @param {string} v2 - right half of the version inequality\n * @returns {bool} iff v1 >= v2\n * @private\n * @ignore\n */\n\nfunction isLaterVersion(v1, v2) {\n  if (v1 === undefined) {\n    v1 = '0.0.0';\n  }\n\n  if (v2 === undefined) {\n    v2 = '0.0.0';\n  }\n\n  const v1tuple = v1.split('.').map(x => parseInt(x, 10));\n  const v2tuple = v2.split('.').map(x => parseInt(x, 10));\n\n  for (let index = 0; index < v2.length; index++) {\n    if (index >= v1.length) {\n      v2tuple.push(0);\n    }\n\n    if (v1tuple[index] < v2tuple[index]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexports.isLaterVersion = isLaterVersion;\n/**\n * UUIDs\n * @private\n * @ignore\n */\n\nfunction makeUUID4() {\n  let d = new Date().getTime();\n\n  if (typeof performance !== 'undefined' && typeof performance.now === 'function') {\n    d += performance.now(); // use high-precision timer if available\n  }\n\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, c => {\n    const r = (d + Math.random() * 16) % 16 | 0;\n    d = Math.floor(d / 16);\n    return (c === 'x' ? r : r & 0x3 | 0x8).toString(16);\n  });\n}\n\nexports.makeUUID4 = makeUUID4;\n/**\n * Checks if both urls pass the same origin check & are absolute\n * @param  {[type]}  uri1 first uri to check\n * @param  {[type]}  uri2 second uri to check\n * @return {Boolean} true if they pass the same origin check\n * @private\n * @ignore\n */\n\nfunction isSameOriginAbsoluteUrl(uri1, uri2) {\n  try {\n    // The globally scoped WHATWG `URL` class is available in modern browsers and\n    // NodeJS v10 or higher. In older NodeJS versions it must be required from the\n    // `url` module.\n    let parseUrl;\n\n    if (typeof URL !== 'undefined') {\n      parseUrl = url => new URL(url);\n    } else {\n      try {\n        // eslint-disable-next-line import/no-nodejs-modules, global-require\n        const nodeUrl = require('url').URL;\n\n        parseUrl = url => new nodeUrl(url);\n      } catch (error) {\n        console.log(error);\n        console.error('Global URL class is not available');\n      }\n    }\n\n    const parsedUri1 = parseUrl(uri1);\n    const parsedUri2 = parseUrl(uri2);\n    const port1 = parseInt(parsedUri1.port || '0', 10) | 0 || (parsedUri1.protocol === 'https:' ? 443 : 80);\n    const port2 = parseInt(parsedUri2.port || '0', 10) | 0 || (parsedUri2.protocol === 'https:' ? 443 : 80);\n    const match = {\n      scheme: parsedUri1.protocol === parsedUri2.protocol,\n      hostname: parsedUri1.hostname === parsedUri2.hostname,\n      port: port1 === port2,\n      absolute: (uri1.includes('http://') || uri1.includes('https://')) && (uri2.includes('http://') || uri2.includes('https://'))\n    };\n    return match.scheme && match.hostname && match.port && match.absolute;\n  } catch (error) {\n    console.log(error);\n    console.log('Parsing error in same URL origin check'); // Parse error\n\n    return false;\n  }\n}\n\nexports.isSameOriginAbsoluteUrl = isSameOriginAbsoluteUrl;\n/**\n * Returns the global scope `Window`, `WorkerGlobalScope`, or `NodeJS.Global` if available in the\n * currently executing environment.\n * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/self\n * @see https://developer.mozilla.org/en-US/docs/Web/API/WorkerGlobalScope/self\n * @see https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope\n *\n * This could be switched to `globalThis` once it is standardized and widely available.\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/globalThis\n * @ignore\n */\n\nfunction getGlobalScope() {\n  if (typeof self !== 'undefined') {\n    return self;\n  }\n\n  if (typeof window !== 'undefined') {\n    return window;\n  } // This function is meant to be called when accessing APIs that are typically only available in\n  // web-browser/DOM environments, but we also want to support situations where running in Node.js \n  // environment, and a polyfill was added to the Node.js `global` object scope without adding the \n  // `window` global object as well. \n\n\n  if (typeof global !== 'undefined') {\n    return global;\n  }\n\n  throw new Error('Unexpected runtime environment - no supported global scope (`window`, `self`, `global`) available');\n}\n\nexports.getGlobalScope = getGlobalScope;\n\nfunction getAPIUsageErrorMessage(scopeObject, apiName, usageDesc) {\n  if (usageDesc) {\n    return `Use of '${usageDesc}' requires \\`${apiName}\\` which is unavailable on the '${scopeObject}' object within the currently executing environment.`;\n  } else {\n    return `\\`${apiName}\\` is unavailable on the '${scopeObject}' object within the currently executing environment.`;\n  }\n}\n/**\n * Returns an object from the global scope (`Window` or `WorkerGlobalScope`) if it\n * is available within the currently executing environment.\n * When executing within the Node.js runtime these APIs are unavailable and will be\n * `undefined` unless the API is provided via polyfill.\n * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/self\n * @ignore\n */\n\n\nfunction getGlobalObject(name, {\n  throwIfUnavailable,\n  usageDesc,\n  returnEmptyObject\n} = {}) {\n  let globalScope;\n\n  try {\n    globalScope = getGlobalScope();\n\n    if (globalScope) {\n      const obj = globalScope[name];\n\n      if (obj) {\n        return obj;\n      }\n    }\n  } catch (error) {\n    logger_1.Logger.error(`Error getting object '${name}' from global scope '${globalScope}': ${error}`);\n  }\n\n  if (throwIfUnavailable) {\n    const errMsg = getAPIUsageErrorMessage(globalScope, name.toString(), usageDesc);\n    logger_1.Logger.error(errMsg);\n    throw new Error(errMsg);\n  }\n\n  if (returnEmptyObject) {\n    return {};\n  }\n\n  return undefined;\n}\n\nexports.getGlobalObject = getGlobalObject;\n/**\n * Returns a specified subset of objects from the global scope (`Window` or `WorkerGlobalScope`)\n * if they are available within the currently executing environment.\n * When executing within the Node.js runtime these APIs are unavailable will be `undefined`\n * unless the API is provided via polyfill.\n * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/self\n * @ignore\n */\n\nfunction getGlobalObjects(names, {\n  throwIfUnavailable,\n  usageDesc,\n  returnEmptyObject\n} = {}) {\n  let globalScope;\n\n  try {\n    globalScope = getGlobalScope();\n  } catch (error) {\n    logger_1.Logger.error(`Error getting global scope: ${error}`);\n\n    if (throwIfUnavailable) {\n      const errMsg = getAPIUsageErrorMessage(globalScope, names[0].toString(), usageDesc);\n      logger_1.Logger.error(errMsg);\n      throw errMsg;\n    } else if (returnEmptyObject) {\n      globalScope = {};\n    }\n  }\n\n  const result = {};\n\n  for (let i = 0; i < names.length; i++) {\n    const name = names[i];\n\n    try {\n      if (globalScope) {\n        const obj = globalScope[name];\n\n        if (obj) {\n          result[name] = obj;\n        } else if (throwIfUnavailable) {\n          const errMsg = getAPIUsageErrorMessage(globalScope, name.toString(), usageDesc);\n          logger_1.Logger.error(errMsg);\n          throw new Error(errMsg);\n        } else if (returnEmptyObject) {\n          result[name] = {};\n        }\n      }\n    } catch (error) {\n      if (throwIfUnavailable) {\n        const errMsg = getAPIUsageErrorMessage(globalScope, name.toString(), usageDesc);\n        logger_1.Logger.error(errMsg);\n        throw new Error(errMsg);\n      }\n    }\n  }\n\n  return result;\n}\n\nexports.getGlobalObjects = getGlobalObjects;\n\nfunction getGaiaErrorResponse(response) {\n  return tslib_1.__awaiter(this, void 0, void 0, function* () {\n    let responseMsg = '';\n    let responseJson;\n\n    try {\n      responseMsg = yield response.text();\n\n      try {\n        responseJson = JSON.parse(responseMsg);\n      } catch (error) {// Use text instead\n      }\n    } catch (error) {\n      logger_1.Logger.debug(`Error getting bad http response text: ${error}`);\n    }\n\n    const status = response.status;\n    const statusText = response.statusText;\n    const body = responseJson || responseMsg;\n    return {\n      status,\n      statusText,\n      body\n    };\n  });\n}\n/**\n * Returns a BlockstackError correlating to the given HTTP response,\n * with the provided errorMsg. Throws if the HTTP response is 'ok'.\n */\n\n\nfunction getBlockstackErrorFromResponse(response, errorMsg, hubConfig) {\n  var _a;\n\n  return tslib_1.__awaiter(this, void 0, void 0, function* () {\n    if (response.ok) {\n      throw new Error('Cannot get a BlockstackError from a valid response.');\n    }\n\n    const gaiaResponse = yield getGaiaErrorResponse(response);\n\n    if (gaiaResponse.status === 401) {\n      return new errors_1.ValidationError(errorMsg, gaiaResponse);\n    } else if (gaiaResponse.status === 402) {\n      return new errors_1.NotEnoughProofError(errorMsg, gaiaResponse);\n    } else if (gaiaResponse.status === 403) {\n      return new errors_1.BadPathError(errorMsg, gaiaResponse);\n    } else if (gaiaResponse.status === 404) {\n      throw new errors_1.DoesNotExist(errorMsg, gaiaResponse);\n    } else if (gaiaResponse.status === 409) {\n      return new errors_1.ConflictError(errorMsg, gaiaResponse);\n    } else if (gaiaResponse.status === 412) {\n      return new errors_1.PreconditionFailedError(errorMsg, gaiaResponse);\n    } else if (gaiaResponse.status === 413) {\n      const maxBytes = megabytesToBytes((_a = hubConfig) === null || _a === void 0 ? void 0 : _a.max_file_upload_size_megabytes);\n      return new errors_1.PayloadTooLargeError(errorMsg, gaiaResponse, maxBytes);\n    } else {\n      return new Error(errorMsg);\n    }\n  });\n}\n\nexports.getBlockstackErrorFromResponse = getBlockstackErrorFromResponse;","map":{"version":3,"sources":["../src/utils.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\nconst logger_1 = require(\"./logger\");\nconst errors_1 = require(\"./errors\");\n/**\n *  @ignore\n */\nexports.BLOCKSTACK_HANDLER = 'blockstack';\n/**\n * Time\n * @private\n * @ignore\n */\nfunction nextYear() {\n    return new Date(new Date().setFullYear(new Date().getFullYear() + 1));\n}\nexports.nextYear = nextYear;\n/**\n * Time\n * @private\n * @ignore\n */\nfunction nextMonth() {\n    return new Date(new Date().setMonth(new Date().getMonth() + 1));\n}\nexports.nextMonth = nextMonth;\n/**\n * Time\n * @private\n * @ignore\n */\nfunction nextHour() {\n    return new Date(new Date().setHours(new Date().getHours() + 1));\n}\nexports.nextHour = nextHour;\n/**\n * Converts megabytes to bytes. Returns 0 if the input is not a finite number.\n * @ignore\n */\nfunction megabytesToBytes(megabytes) {\n    if (!Number.isFinite(megabytes)) {\n        return 0;\n    }\n    return Math.floor(megabytes * 1024 * 1024);\n}\nexports.megabytesToBytes = megabytesToBytes;\n/**\n * Calculate the AES-CBC ciphertext output byte length a given input length.\n * AES has a fixed block size of 16-bytes regardless key size.\n * @ignore\n */\nfunction getAesCbcOutputLength(inputByteLength) {\n    // AES-CBC block mode rounds up to the next block size. \n    const cipherTextLength = (Math.floor(inputByteLength / 16) + 1) * 16;\n    return cipherTextLength;\n}\nexports.getAesCbcOutputLength = getAesCbcOutputLength;\n/**\n * Calculate the base64 encoded string length for a given input length.\n * This is equivalent to the byte length when the string is ASCII or UTF8-8\n * encoded.\n * @param number\n */\nfunction getBase64OutputLength(inputByteLength) {\n    const encodedLength = (Math.ceil(inputByteLength / 3) * 4);\n    return encodedLength;\n}\nexports.getBase64OutputLength = getBase64OutputLength;\n/**\n * Query Strings\n * @private\n * @ignore\n */\nfunction updateQueryStringParameter(uri, key, value) {\n    const re = new RegExp(`([?&])${key}=.*?(&|$)`, 'i');\n    const separator = uri.indexOf('?') !== -1 ? '&' : '?';\n    if (uri.match(re)) {\n        return uri.replace(re, `$1${key}=${value}$2`);\n    }\n    else {\n        return `${uri}${separator}${key}=${value}`;\n    }\n}\nexports.updateQueryStringParameter = updateQueryStringParameter;\n/**\n * Versioning\n * @param {string} v1 - the left half of the version inequality\n * @param {string} v2 - right half of the version inequality\n * @returns {bool} iff v1 >= v2\n * @private\n * @ignore\n */\nfunction isLaterVersion(v1, v2) {\n    if (v1 === undefined) {\n        v1 = '0.0.0';\n    }\n    if (v2 === undefined) {\n        v2 = '0.0.0';\n    }\n    const v1tuple = v1.split('.').map(x => parseInt(x, 10));\n    const v2tuple = v2.split('.').map(x => parseInt(x, 10));\n    for (let index = 0; index < v2.length; index++) {\n        if (index >= v1.length) {\n            v2tuple.push(0);\n        }\n        if (v1tuple[index] < v2tuple[index]) {\n            return false;\n        }\n    }\n    return true;\n}\nexports.isLaterVersion = isLaterVersion;\n/**\n * UUIDs\n * @private\n * @ignore\n */\nfunction makeUUID4() {\n    let d = new Date().getTime();\n    if (typeof performance !== 'undefined' && typeof performance.now === 'function') {\n        d += performance.now(); // use high-precision timer if available\n    }\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c) => {\n        const r = (d + Math.random() * 16) % 16 | 0;\n        d = Math.floor(d / 16);\n        return (c === 'x' ? r : (r & 0x3 | 0x8)).toString(16);\n    });\n}\nexports.makeUUID4 = makeUUID4;\n/**\n * Checks if both urls pass the same origin check & are absolute\n * @param  {[type]}  uri1 first uri to check\n * @param  {[type]}  uri2 second uri to check\n * @return {Boolean} true if they pass the same origin check\n * @private\n * @ignore\n */\nfunction isSameOriginAbsoluteUrl(uri1, uri2) {\n    try {\n        // The globally scoped WHATWG `URL` class is available in modern browsers and\n        // NodeJS v10 or higher. In older NodeJS versions it must be required from the\n        // `url` module.\n        let parseUrl;\n        if (typeof URL !== 'undefined') {\n            parseUrl = url => new URL(url);\n        }\n        else {\n            try {\n                // eslint-disable-next-line import/no-nodejs-modules, global-require\n                const nodeUrl = require('url').URL;\n                parseUrl = url => new nodeUrl(url);\n            }\n            catch (error) {\n                console.log(error);\n                console.error('Global URL class is not available');\n            }\n        }\n        const parsedUri1 = parseUrl(uri1);\n        const parsedUri2 = parseUrl(uri2);\n        const port1 = parseInt(parsedUri1.port || '0', 10) | 0 || (parsedUri1.protocol === 'https:' ? 443 : 80);\n        const port2 = parseInt(parsedUri2.port || '0', 10) | 0 || (parsedUri2.protocol === 'https:' ? 443 : 80);\n        const match = {\n            scheme: parsedUri1.protocol === parsedUri2.protocol,\n            hostname: parsedUri1.hostname === parsedUri2.hostname,\n            port: port1 === port2,\n            absolute: (uri1.includes('http://') || uri1.includes('https://'))\n                && (uri2.includes('http://') || uri2.includes('https://'))\n        };\n        return match.scheme && match.hostname && match.port && match.absolute;\n    }\n    catch (error) {\n        console.log(error);\n        console.log('Parsing error in same URL origin check');\n        // Parse error\n        return false;\n    }\n}\nexports.isSameOriginAbsoluteUrl = isSameOriginAbsoluteUrl;\n/**\n * Returns the global scope `Window`, `WorkerGlobalScope`, or `NodeJS.Global` if available in the\n * currently executing environment.\n * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/self\n * @see https://developer.mozilla.org/en-US/docs/Web/API/WorkerGlobalScope/self\n * @see https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope\n *\n * This could be switched to `globalThis` once it is standardized and widely available.\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/globalThis\n * @ignore\n */\nfunction getGlobalScope() {\n    if (typeof self !== 'undefined') {\n        return self;\n    }\n    if (typeof window !== 'undefined') {\n        return window;\n    }\n    // This function is meant to be called when accessing APIs that are typically only available in\n    // web-browser/DOM environments, but we also want to support situations where running in Node.js \n    // environment, and a polyfill was added to the Node.js `global` object scope without adding the \n    // `window` global object as well. \n    if (typeof global !== 'undefined') {\n        return global;\n    }\n    throw new Error('Unexpected runtime environment - no supported global scope (`window`, `self`, `global`) available');\n}\nexports.getGlobalScope = getGlobalScope;\nfunction getAPIUsageErrorMessage(scopeObject, apiName, usageDesc) {\n    if (usageDesc) {\n        return `Use of '${usageDesc}' requires \\`${apiName}\\` which is unavailable on the '${scopeObject}' object within the currently executing environment.`;\n    }\n    else {\n        return `\\`${apiName}\\` is unavailable on the '${scopeObject}' object within the currently executing environment.`;\n    }\n}\n/**\n * Returns an object from the global scope (`Window` or `WorkerGlobalScope`) if it\n * is available within the currently executing environment.\n * When executing within the Node.js runtime these APIs are unavailable and will be\n * `undefined` unless the API is provided via polyfill.\n * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/self\n * @ignore\n */\nfunction getGlobalObject(name, { throwIfUnavailable, usageDesc, returnEmptyObject } = {}) {\n    let globalScope;\n    try {\n        globalScope = getGlobalScope();\n        if (globalScope) {\n            const obj = globalScope[name];\n            if (obj) {\n                return obj;\n            }\n        }\n    }\n    catch (error) {\n        logger_1.Logger.error(`Error getting object '${name}' from global scope '${globalScope}': ${error}`);\n    }\n    if (throwIfUnavailable) {\n        const errMsg = getAPIUsageErrorMessage(globalScope, name.toString(), usageDesc);\n        logger_1.Logger.error(errMsg);\n        throw new Error(errMsg);\n    }\n    if (returnEmptyObject) {\n        return {};\n    }\n    return undefined;\n}\nexports.getGlobalObject = getGlobalObject;\n/**\n * Returns a specified subset of objects from the global scope (`Window` or `WorkerGlobalScope`)\n * if they are available within the currently executing environment.\n * When executing within the Node.js runtime these APIs are unavailable will be `undefined`\n * unless the API is provided via polyfill.\n * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/self\n * @ignore\n */\nfunction getGlobalObjects(names, { throwIfUnavailable, usageDesc, returnEmptyObject } = {}) {\n    let globalScope;\n    try {\n        globalScope = getGlobalScope();\n    }\n    catch (error) {\n        logger_1.Logger.error(`Error getting global scope: ${error}`);\n        if (throwIfUnavailable) {\n            const errMsg = getAPIUsageErrorMessage(globalScope, names[0].toString(), usageDesc);\n            logger_1.Logger.error(errMsg);\n            throw errMsg;\n        }\n        else if (returnEmptyObject) {\n            globalScope = {};\n        }\n    }\n    const result = {};\n    for (let i = 0; i < names.length; i++) {\n        const name = names[i];\n        try {\n            if (globalScope) {\n                const obj = globalScope[name];\n                if (obj) {\n                    result[name] = obj;\n                }\n                else if (throwIfUnavailable) {\n                    const errMsg = getAPIUsageErrorMessage(globalScope, name.toString(), usageDesc);\n                    logger_1.Logger.error(errMsg);\n                    throw new Error(errMsg);\n                }\n                else if (returnEmptyObject) {\n                    result[name] = {};\n                }\n            }\n        }\n        catch (error) {\n            if (throwIfUnavailable) {\n                const errMsg = getAPIUsageErrorMessage(globalScope, name.toString(), usageDesc);\n                logger_1.Logger.error(errMsg);\n                throw new Error(errMsg);\n            }\n        }\n    }\n    return result;\n}\nexports.getGlobalObjects = getGlobalObjects;\nfunction getGaiaErrorResponse(response) {\n    return tslib_1.__awaiter(this, void 0, void 0, function* () {\n        let responseMsg = '';\n        let responseJson;\n        try {\n            responseMsg = yield response.text();\n            try {\n                responseJson = JSON.parse(responseMsg);\n            }\n            catch (error) {\n                // Use text instead\n            }\n        }\n        catch (error) {\n            logger_1.Logger.debug(`Error getting bad http response text: ${error}`);\n        }\n        const status = response.status;\n        const statusText = response.statusText;\n        const body = responseJson || responseMsg;\n        return { status, statusText, body };\n    });\n}\n/**\n * Returns a BlockstackError correlating to the given HTTP response,\n * with the provided errorMsg. Throws if the HTTP response is 'ok'.\n */\nfunction getBlockstackErrorFromResponse(response, errorMsg, hubConfig) {\n    var _a;\n    return tslib_1.__awaiter(this, void 0, void 0, function* () {\n        if (response.ok) {\n            throw new Error('Cannot get a BlockstackError from a valid response.');\n        }\n        const gaiaResponse = yield getGaiaErrorResponse(response);\n        if (gaiaResponse.status === 401) {\n            return new errors_1.ValidationError(errorMsg, gaiaResponse);\n        }\n        else if (gaiaResponse.status === 402) {\n            return new errors_1.NotEnoughProofError(errorMsg, gaiaResponse);\n        }\n        else if (gaiaResponse.status === 403) {\n            return new errors_1.BadPathError(errorMsg, gaiaResponse);\n        }\n        else if (gaiaResponse.status === 404) {\n            throw new errors_1.DoesNotExist(errorMsg, gaiaResponse);\n        }\n        else if (gaiaResponse.status === 409) {\n            return new errors_1.ConflictError(errorMsg, gaiaResponse);\n        }\n        else if (gaiaResponse.status === 412) {\n            return new errors_1.PreconditionFailedError(errorMsg, gaiaResponse);\n        }\n        else if (gaiaResponse.status === 413) {\n            const maxBytes = megabytesToBytes((_a = hubConfig) === null || _a === void 0 ? void 0 : _a.max_file_upload_size_megabytes);\n            return new errors_1.PayloadTooLargeError(errorMsg, gaiaResponse, maxBytes);\n        }\n        else {\n            return new Error(errorMsg);\n        }\n    });\n}\nexports.getBlockstackErrorFromResponse = getBlockstackErrorFromResponse;\n//# sourceMappingURL=utils.js.map"]},"metadata":{},"sourceType":"script"}