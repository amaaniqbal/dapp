{"ast":null,"code":"// Generated by IcedCoffeeScript 108.0.8\n(function () {\n  var G,\n      Global,\n      Hasher,\n      RIPEMD160,\n      WordArray,\n      X64Word,\n      X64WordArray,\n      f1,\n      f2,\n      f3,\n      f4,\n      f5,\n      rotl,\n      transform,\n      _ref,\n      __hasProp = {}.hasOwnProperty,\n      __extends = function (child, parent) {\n    for (var key in parent) {\n      if (__hasProp.call(parent, key)) child[key] = parent[key];\n    }\n\n    function ctor() {\n      this.constructor = child;\n    }\n\n    ctor.prototype = parent.prototype;\n    child.prototype = new ctor();\n    child.__super__ = parent.prototype;\n    return child;\n  };\n\n  _ref = require('./wordarray'), WordArray = _ref.WordArray, X64Word = _ref.X64Word, X64WordArray = _ref.X64WordArray;\n  Hasher = require('./algbase').Hasher;\n\n  Global = function () {\n    function Global() {\n      this._zl = new WordArray([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8, 3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12, 1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2, 4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13]);\n      this._zr = new WordArray([5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12, 6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2, 15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13, 8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14, 12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11]);\n      this._sl = new WordArray([11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8, 7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12, 11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5, 11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12, 9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6]);\n      this._sr = new WordArray([8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6, 9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11, 9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5, 15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8, 8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11]);\n      this._hl = new WordArray([0x00000000, 0x5A827999, 0x6ED9EBA1, 0x8F1BBCDC, 0xA953FD4E]);\n      this._hr = new WordArray([0x50A28BE6, 0x5C4DD124, 0x6D703EF3, 0x7A6D76E9, 0x00000000]);\n    }\n\n    return Global;\n  }();\n\n  G = new Global();\n\n  RIPEMD160 = function (_super) {\n    __extends(RIPEMD160, _super);\n\n    function RIPEMD160() {\n      return RIPEMD160.__super__.constructor.apply(this, arguments);\n    }\n\n    RIPEMD160.blockSize = 512 / 32;\n    RIPEMD160.prototype.blockSize = RIPEMD160.blockSize;\n    RIPEMD160.output_size = 160 / 8;\n    RIPEMD160.prototype.output_size = RIPEMD160.output_size;\n\n    RIPEMD160.prototype._doReset = function () {\n      return this._hash = new WordArray([0x67452301, 0xEFCDAB89, 0x98BADCFE, 0x10325476, 0xC3D2E1F0]);\n    };\n\n    RIPEMD160.prototype.get_output_size = function () {\n      return this.output_size;\n    };\n\n    RIPEMD160.prototype._doProcessBlock = function (M, offset) {\n      var H, M_offset_i, al, ar, bl, br, cl, cr, dl, dr, el, er, hl, hr, i, offset_i, sl, sr, t, zl, zr, _i, _j;\n\n      for (i = _i = 0; _i < 16; i = ++_i) {\n        offset_i = offset + i;\n        M_offset_i = M[offset_i];\n        M[offset_i] = (M_offset_i << 8 | M_offset_i >>> 24) & 0x00ff00ff | (M_offset_i << 24 | M_offset_i >>> 8) & 0xff00ff00;\n      }\n\n      H = this._hash.words;\n      hl = G._hl.words;\n      hr = G._hr.words;\n      zl = G._zl.words;\n      zr = G._zr.words;\n      sl = G._sl.words;\n      sr = G._sr.words;\n      ar = al = H[0];\n      br = bl = H[1];\n      cr = cl = H[2];\n      dr = dl = H[3];\n      er = el = H[4];\n\n      for (i = _j = 0; _j < 80; i = ++_j) {\n        t = al + M[offset + zl[i]] | 0;\n\n        if (i < 16) {\n          t += f1(bl, cl, dl) + hl[0];\n        } else if (i < 32) {\n          t += f2(bl, cl, dl) + hl[1];\n        } else if (i < 48) {\n          t += f3(bl, cl, dl) + hl[2];\n        } else if (i < 64) {\n          t += f4(bl, cl, dl) + hl[3];\n        } else {\n          t += f5(bl, cl, dl) + hl[4];\n        }\n\n        t = t | 0;\n        t = rotl(t, sl[i]);\n        t = t + el | 0;\n        al = el;\n        el = dl;\n        dl = rotl(cl, 10);\n        cl = bl;\n        bl = t;\n        t = ar + M[offset + zr[i]] | 0;\n\n        if (i < 16) {\n          t += f5(br, cr, dr) + hr[0];\n        } else if (i < 32) {\n          t += f4(br, cr, dr) + hr[1];\n        } else if (i < 48) {\n          t += f3(br, cr, dr) + hr[2];\n        } else if (i < 64) {\n          t += f2(br, cr, dr) + hr[3];\n        } else {\n          t += f1(br, cr, dr) + hr[4];\n        }\n\n        t = t | 0;\n        t = rotl(t, sr[i]);\n        t = t + er | 0;\n        ar = er;\n        er = dr;\n        dr = rotl(cr, 10);\n        cr = br;\n        br = t;\n      }\n\n      t = H[1] + cl + dr | 0;\n      H[1] = H[2] + dl + er | 0;\n      H[2] = H[3] + el + ar | 0;\n      H[3] = H[4] + al + br | 0;\n      H[4] = H[0] + bl + cr | 0;\n      return H[0] = t;\n    };\n\n    RIPEMD160.prototype._doFinalize = function () {\n      var H, H_i, data, dataWords, hash, i, nBitsLeft, nBitsTotal, _i;\n\n      data = this._data;\n      dataWords = data.words;\n      nBitsTotal = this._nDataBytes * 8;\n      nBitsLeft = data.sigBytes * 8;\n      dataWords[nBitsLeft >>> 5] |= 0x80 << 24 - nBitsLeft % 32;\n      dataWords[(nBitsLeft + 64 >>> 9 << 4) + 14] = (nBitsTotal << 8 | nBitsTotal >>> 24) & 0x00ff00ff | (nBitsTotal << 24 | nBitsTotal >>> 8) & 0xff00ff00;\n      data.sigBytes = (dataWords.length + 1) * 4;\n\n      this._process();\n\n      hash = this._hash;\n      H = hash.words;\n\n      for (i = _i = 0; _i < 5; i = ++_i) {\n        H_i = H[i];\n        H[i] = (H_i << 8 | H_i >>> 24) & 0x00ff00ff | (H_i << 24 | H_i >>> 8) & 0xff00ff00;\n      }\n\n      return hash;\n    };\n\n    RIPEMD160.prototype.scrub = function () {\n      return this._hash.scrub();\n    };\n\n    RIPEMD160.prototype.copy_to = function (obj) {\n      RIPEMD160.__super__.copy_to.call(this, obj);\n\n      return obj._hash = this._hash.clone();\n    };\n\n    RIPEMD160.prototype.clone = function () {\n      var out;\n      out = new RIPEMD160();\n      this.copy_to(out);\n      return out;\n    };\n\n    return RIPEMD160;\n  }(Hasher);\n\n  f1 = function (x, y, z) {\n    return x ^ y ^ z;\n  };\n\n  f2 = function (x, y, z) {\n    return x & y | ~x & z;\n  };\n\n  f3 = function (x, y, z) {\n    return (x | ~y) ^ z;\n  };\n\n  f4 = function (x, y, z) {\n    return x & z | y & ~z;\n  };\n\n  f5 = function (x, y, z) {\n    return x ^ (y | ~z);\n  };\n\n  rotl = function (x, n) {\n    return x << n | x >>> 32 - n;\n  };\n\n  transform = function (x) {\n    var out;\n    out = new RIPEMD160().finalize(x);\n    x.scrub();\n    return out;\n  };\n\n  exports.RIPEMD160 = RIPEMD160;\n  exports.transform = transform;\n}).call(this);","map":{"version":3,"sources":["/home/os/Desktop/hello-world-tutorial/node_modules/triplesec/lib/ripemd160.js"],"names":["G","Global","Hasher","RIPEMD160","WordArray","X64Word","X64WordArray","f1","f2","f3","f4","f5","rotl","transform","_ref","__hasProp","hasOwnProperty","__extends","child","parent","key","call","ctor","constructor","prototype","__super__","require","_zl","_zr","_sl","_sr","_hl","_hr","_super","apply","arguments","blockSize","output_size","_doReset","_hash","get_output_size","_doProcessBlock","M","offset","H","M_offset_i","al","ar","bl","br","cl","cr","dl","dr","el","er","hl","hr","i","offset_i","sl","sr","t","zl","zr","_i","_j","words","_doFinalize","H_i","data","dataWords","hash","nBitsLeft","nBitsTotal","_data","_nDataBytes","sigBytes","length","_process","scrub","copy_to","obj","clone","out","x","y","z","n","finalize","exports"],"mappings":"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","sourcesContent":["// Generated by IcedCoffeeScript 108.0.8\n(function() {\n  var G, Global, Hasher, RIPEMD160, WordArray, X64Word, X64WordArray, f1, f2, f3, f4, f5, rotl, transform, _ref,\n    __hasProp = {}.hasOwnProperty,\n    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\n  _ref = require('./wordarray'), WordArray = _ref.WordArray, X64Word = _ref.X64Word, X64WordArray = _ref.X64WordArray;\n\n  Hasher = require('./algbase').Hasher;\n\n  Global = (function() {\n    function Global() {\n      this._zl = new WordArray([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8, 3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12, 1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2, 4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13]);\n      this._zr = new WordArray([5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12, 6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2, 15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13, 8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14, 12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11]);\n      this._sl = new WordArray([11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8, 7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12, 11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5, 11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12, 9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6]);\n      this._sr = new WordArray([8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6, 9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11, 9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5, 15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8, 8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11]);\n      this._hl = new WordArray([0x00000000, 0x5A827999, 0x6ED9EBA1, 0x8F1BBCDC, 0xA953FD4E]);\n      this._hr = new WordArray([0x50A28BE6, 0x5C4DD124, 0x6D703EF3, 0x7A6D76E9, 0x00000000]);\n    }\n\n    return Global;\n\n  })();\n\n  G = new Global();\n\n  RIPEMD160 = (function(_super) {\n    __extends(RIPEMD160, _super);\n\n    function RIPEMD160() {\n      return RIPEMD160.__super__.constructor.apply(this, arguments);\n    }\n\n    RIPEMD160.blockSize = 512 / 32;\n\n    RIPEMD160.prototype.blockSize = RIPEMD160.blockSize;\n\n    RIPEMD160.output_size = 160 / 8;\n\n    RIPEMD160.prototype.output_size = RIPEMD160.output_size;\n\n    RIPEMD160.prototype._doReset = function() {\n      return this._hash = new WordArray([0x67452301, 0xEFCDAB89, 0x98BADCFE, 0x10325476, 0xC3D2E1F0]);\n    };\n\n    RIPEMD160.prototype.get_output_size = function() {\n      return this.output_size;\n    };\n\n    RIPEMD160.prototype._doProcessBlock = function(M, offset) {\n      var H, M_offset_i, al, ar, bl, br, cl, cr, dl, dr, el, er, hl, hr, i, offset_i, sl, sr, t, zl, zr, _i, _j;\n      for (i = _i = 0; _i < 16; i = ++_i) {\n        offset_i = offset + i;\n        M_offset_i = M[offset_i];\n        M[offset_i] = (((M_offset_i << 8) | (M_offset_i >>> 24)) & 0x00ff00ff) | (((M_offset_i << 24) | (M_offset_i >>> 8)) & 0xff00ff00);\n      }\n      H = this._hash.words;\n      hl = G._hl.words;\n      hr = G._hr.words;\n      zl = G._zl.words;\n      zr = G._zr.words;\n      sl = G._sl.words;\n      sr = G._sr.words;\n      ar = al = H[0];\n      br = bl = H[1];\n      cr = cl = H[2];\n      dr = dl = H[3];\n      er = el = H[4];\n      for (i = _j = 0; _j < 80; i = ++_j) {\n        t = (al + M[offset + zl[i]]) | 0;\n        if (i < 16) {\n          t += f1(bl, cl, dl) + hl[0];\n        } else if (i < 32) {\n          t += f2(bl, cl, dl) + hl[1];\n        } else if (i < 48) {\n          t += f3(bl, cl, dl) + hl[2];\n        } else if (i < 64) {\n          t += f4(bl, cl, dl) + hl[3];\n        } else {\n          t += f5(bl, cl, dl) + hl[4];\n        }\n        t = t | 0;\n        t = rotl(t, sl[i]);\n        t = (t + el) | 0;\n        al = el;\n        el = dl;\n        dl = rotl(cl, 10);\n        cl = bl;\n        bl = t;\n        t = (ar + M[offset + zr[i]]) | 0;\n        if (i < 16) {\n          t += f5(br, cr, dr) + hr[0];\n        } else if (i < 32) {\n          t += f4(br, cr, dr) + hr[1];\n        } else if (i < 48) {\n          t += f3(br, cr, dr) + hr[2];\n        } else if (i < 64) {\n          t += f2(br, cr, dr) + hr[3];\n        } else {\n          t += f1(br, cr, dr) + hr[4];\n        }\n        t = t | 0;\n        t = rotl(t, sr[i]);\n        t = (t + er) | 0;\n        ar = er;\n        er = dr;\n        dr = rotl(cr, 10);\n        cr = br;\n        br = t;\n      }\n      t = (H[1] + cl + dr) | 0;\n      H[1] = (H[2] + dl + er) | 0;\n      H[2] = (H[3] + el + ar) | 0;\n      H[3] = (H[4] + al + br) | 0;\n      H[4] = (H[0] + bl + cr) | 0;\n      return H[0] = t;\n    };\n\n    RIPEMD160.prototype._doFinalize = function() {\n      var H, H_i, data, dataWords, hash, i, nBitsLeft, nBitsTotal, _i;\n      data = this._data;\n      dataWords = data.words;\n      nBitsTotal = this._nDataBytes * 8;\n      nBitsLeft = data.sigBytes * 8;\n      dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\n      dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = (((nBitsTotal << 8) | (nBitsTotal >>> 24)) & 0x00ff00ff) | (((nBitsTotal << 24) | (nBitsTotal >>> 8)) & 0xff00ff00);\n      data.sigBytes = (dataWords.length + 1) * 4;\n      this._process();\n      hash = this._hash;\n      H = hash.words;\n      for (i = _i = 0; _i < 5; i = ++_i) {\n        H_i = H[i];\n        H[i] = (((H_i << 8) | (H_i >>> 24)) & 0x00ff00ff) | (((H_i << 24) | (H_i >>> 8)) & 0xff00ff00);\n      }\n      return hash;\n    };\n\n    RIPEMD160.prototype.scrub = function() {\n      return this._hash.scrub();\n    };\n\n    RIPEMD160.prototype.copy_to = function(obj) {\n      RIPEMD160.__super__.copy_to.call(this, obj);\n      return obj._hash = this._hash.clone();\n    };\n\n    RIPEMD160.prototype.clone = function() {\n      var out;\n      out = new RIPEMD160();\n      this.copy_to(out);\n      return out;\n    };\n\n    return RIPEMD160;\n\n  })(Hasher);\n\n  f1 = function(x, y, z) {\n    return x ^ y ^ z;\n  };\n\n  f2 = function(x, y, z) {\n    return (x & y) | ((~x) & z);\n  };\n\n  f3 = function(x, y, z) {\n    return (x | (~y)) ^ z;\n  };\n\n  f4 = function(x, y, z) {\n    return (x & z) | (y & (~z));\n  };\n\n  f5 = function(x, y, z) {\n    return x ^ (y | (~z));\n  };\n\n  rotl = function(x, n) {\n    return (x << n) | (x >>> (32 - n));\n  };\n\n  transform = function(x) {\n    var out;\n    out = (new RIPEMD160).finalize(x);\n    x.scrub();\n    return out;\n  };\n\n  exports.RIPEMD160 = RIPEMD160;\n\n  exports.transform = transform;\n\n}).call(this);\n"]},"metadata":{},"sourceType":"script"}