{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst tslib_1 = require(\"tslib\");\n\nconst cryptoUtils_1 = require(\"./cryptoUtils\");\n\nclass NodeCryptoHmacSha256 {\n  constructor(createHmac) {\n    this.createHmac = createHmac;\n  }\n\n  digest(key, data) {\n    return tslib_1.__awaiter(this, void 0, void 0, function* () {\n      const result = this.createHmac('sha256', key).update(data).digest();\n      return Promise.resolve(result);\n    });\n  }\n\n}\n\nexports.NodeCryptoHmacSha256 = NodeCryptoHmacSha256;\n\nclass WebCryptoHmacSha256 {\n  constructor(subtleCrypto) {\n    this.subtleCrypto = subtleCrypto;\n  }\n\n  digest(key, data) {\n    return tslib_1.__awaiter(this, void 0, void 0, function* () {\n      const cryptoKey = yield this.subtleCrypto.importKey('raw', key, {\n        name: 'HMAC',\n        hash: 'SHA-256'\n      }, true, ['sign']);\n      const sig = yield this.subtleCrypto.sign( // The `hash` is only specified for non-compliant browsers like Edge. \n      {\n        name: 'HMAC',\n        hash: 'SHA-256'\n      }, cryptoKey, data);\n      return Buffer.from(sig);\n    });\n  }\n\n}\n\nexports.WebCryptoHmacSha256 = WebCryptoHmacSha256;\n\nfunction createHmacSha256() {\n  return tslib_1.__awaiter(this, void 0, void 0, function* () {\n    const cryptoLib = yield cryptoUtils_1.getCryptoLib();\n\n    if (cryptoLib.name === 'subtleCrypto') {\n      return new WebCryptoHmacSha256(cryptoLib.lib);\n    } else {\n      return new NodeCryptoHmacSha256(cryptoLib.lib.createHmac);\n    }\n  });\n}\n\nexports.createHmacSha256 = createHmacSha256;","map":{"version":3,"sources":["../../src/encryption/hmacSha256.ts"],"names":[],"mappings":";;;;;;;;AAAA,MAAA,aAAA,GAAA,OAAA,CAAA,eAAA,CAAA;;AAQA,MAAa,oBAAb,CAAiC;AAG/B,EAAA,WAAA,CAAY,UAAZ,EAA4C;AAC1C,SAAK,UAAL,GAAkB,UAAlB;AACD;;AAEK,EAAA,MAAM,CAAC,GAAD,EAAc,IAAd,EAA0B;;AACpC,YAAM,MAAM,GAAG,KAAK,UAAL,CAAgB,QAAhB,EAA0B,GAA1B,EACZ,MADY,CACL,IADK,EAEZ,MAFY,EAAf;AAGA,aAAO,OAAO,CAAC,OAAR,CAAgB,MAAhB,CAAP;AACD,K;AAAA;;AAZ8B;;AAAjC,OAAA,CAAA,oBAAA,GAAA,oBAAA;;AAeA,MAAa,mBAAb,CAAgC;AAG9B,EAAA,WAAA,CAAY,YAAZ,EAAsC;AACpC,SAAK,YAAL,GAAoB,YAApB;AACD;;AAEK,EAAA,MAAM,CAAC,GAAD,EAAc,IAAd,EAA0B;;AACpC,YAAM,SAAS,GAAG,MAAM,KAAK,YAAL,CAAkB,SAAlB,CACtB,KADsB,EACf,GADe,EACV;AAAE,QAAA,IAAI,EAAE,MAAR;AAAgB,QAAA,IAAI,EAAE;AAAtB,OADU,EAEtB,IAFsB,EAEhB,CAAC,MAAD,CAFgB,CAAxB;AAIA,YAAM,GAAG,GAAG,MAAM,KAAK,YAAL,CAAkB,IAAlB,EAChB;AACA;AAAE,QAAA,IAAI,EAAE,MAAR;AAAgB,QAAA,IAAI,EAAE;AAAtB,OAFgB,EAGhB,SAHgB,EAGL,IAHK,CAAlB;AAKA,aAAO,MAAM,CAAC,IAAP,CAAY,GAAZ,CAAP;AACD,K;AAAA;;AAlB6B;;AAAhC,OAAA,CAAA,mBAAA,GAAA,mBAAA;;AAqBA,SAAsB,gBAAtB,GAAsC;;AACpC,UAAM,SAAS,GAAG,MAAM,aAAA,CAAA,YAAA,EAAxB;;AACA,QAAI,SAAS,CAAC,IAAV,KAAmB,cAAvB,EAAuC;AACrC,aAAO,IAAI,mBAAJ,CAAwB,SAAS,CAAC,GAAlC,CAAP;AACD,KAFD,MAEO;AACL,aAAO,IAAI,oBAAJ,CAAyB,SAAS,CAAC,GAAV,CAAc,UAAvC,CAAP;AACD;AACF,G;AAAA;;AAPD,OAAA,CAAA,gBAAA,GAAA,gBAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\nconst cryptoUtils_1 = require(\"./cryptoUtils\");\nclass NodeCryptoHmacSha256 {\n    constructor(createHmac) {\n        this.createHmac = createHmac;\n    }\n    digest(key, data) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            const result = this.createHmac('sha256', key)\n                .update(data)\n                .digest();\n            return Promise.resolve(result);\n        });\n    }\n}\nexports.NodeCryptoHmacSha256 = NodeCryptoHmacSha256;\nclass WebCryptoHmacSha256 {\n    constructor(subtleCrypto) {\n        this.subtleCrypto = subtleCrypto;\n    }\n    digest(key, data) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            const cryptoKey = yield this.subtleCrypto.importKey('raw', key, { name: 'HMAC', hash: 'SHA-256' }, true, ['sign']);\n            const sig = yield this.subtleCrypto.sign(\n            // The `hash` is only specified for non-compliant browsers like Edge. \n            { name: 'HMAC', hash: 'SHA-256' }, cryptoKey, data);\n            return Buffer.from(sig);\n        });\n    }\n}\nexports.WebCryptoHmacSha256 = WebCryptoHmacSha256;\nfunction createHmacSha256() {\n    return tslib_1.__awaiter(this, void 0, void 0, function* () {\n        const cryptoLib = yield cryptoUtils_1.getCryptoLib();\n        if (cryptoLib.name === 'subtleCrypto') {\n            return new WebCryptoHmacSha256(cryptoLib.lib);\n        }\n        else {\n            return new NodeCryptoHmacSha256(cryptoLib.lib.createHmac);\n        }\n    });\n}\nexports.createHmacSha256 = createHmacSha256;\n//# sourceMappingURL=hmacSha256.js.map"]},"metadata":{},"sourceType":"script"}