{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst config_1 = require(\"./config\");\n\nconst levels = ['debug', 'info', 'warn', 'error', 'none'];\nconst levelToInt = {};\nconst intToLevel = {};\n\nfor (let index = 0; index < levels.length; index++) {\n  const level = levels[index];\n  levelToInt[level] = index;\n  intToLevel[index] = level;\n}\n/**\n * @ignore\n */\n\n\nclass Logger {\n  static error(message) {\n    if (!this.shouldLog('error')) return;\n    console.error(this.logMessage('error', message));\n  }\n\n  static warn(message) {\n    if (!this.shouldLog('warn')) return;\n    console.warn(this.logMessage('warn', message));\n  }\n\n  static info(message) {\n    if (!this.shouldLog('info')) return;\n    console.log(this.logMessage('info', message));\n  }\n\n  static debug(message) {\n    if (!this.shouldLog('debug')) return;\n    console.log(this.logMessage('debug', message));\n  }\n\n  static logMessage(level, message) {\n    return `[${level.toUpperCase()}] ${message}`;\n  }\n\n  static shouldLog(level) {\n    const currentLevel = levelToInt[config_1.config.logLevel];\n    return currentLevel <= levelToInt[level];\n  }\n\n}\n\nexports.Logger = Logger;","map":{"version":3,"sources":["../src/logger.ts"],"names":[],"mappings":";;;;;;AAAA,MAAA,QAAA,GAAA,OAAA,CAAA,UAAA,CAAA;;AAEA,MAAM,MAAM,GAAG,CAAC,OAAD,EAAU,MAAV,EAAkB,MAAlB,EAA0B,OAA1B,EAAmC,MAAnC,CAAf;AAEA,MAAM,UAAU,GAAgC,EAAhD;AACA,MAAM,UAAU,GAA8B,EAA9C;;AAEA,KAAK,IAAI,KAAK,GAAG,CAAjB,EAAoB,KAAK,GAAG,MAAM,CAAC,MAAnC,EAA2C,KAAK,EAAhD,EAAoD;AAClD,QAAM,KAAK,GAAG,MAAM,CAAC,KAAD,CAApB;AACA,EAAA,UAAU,CAAC,KAAD,CAAV,GAAoB,KAApB;AACA,EAAA,UAAU,CAAC,KAAD,CAAV,GAAoB,KAApB;AACD;AAED;;;;;AAGA,MAAa,MAAb,CAAmB;AACjB,SAAO,KAAP,CAAa,OAAb,EAA4B;AAC1B,QAAI,CAAC,KAAK,SAAL,CAAe,OAAf,CAAL,EAA8B;AAC9B,IAAA,OAAO,CAAC,KAAR,CAAc,KAAK,UAAL,CAAgB,OAAhB,EAAyB,OAAzB,CAAd;AACD;;AAED,SAAO,IAAP,CAAY,OAAZ,EAA2B;AACzB,QAAI,CAAC,KAAK,SAAL,CAAe,MAAf,CAAL,EAA6B;AAC7B,IAAA,OAAO,CAAC,IAAR,CAAa,KAAK,UAAL,CAAgB,MAAhB,EAAwB,OAAxB,CAAb;AACD;;AAED,SAAO,IAAP,CAAY,OAAZ,EAA2B;AACzB,QAAI,CAAC,KAAK,SAAL,CAAe,MAAf,CAAL,EAA6B;AAC7B,IAAA,OAAO,CAAC,GAAR,CAAY,KAAK,UAAL,CAAgB,MAAhB,EAAwB,OAAxB,CAAZ;AACD;;AAED,SAAO,KAAP,CAAa,OAAb,EAA4B;AAC1B,QAAI,CAAC,KAAK,SAAL,CAAe,OAAf,CAAL,EAA8B;AAC9B,IAAA,OAAO,CAAC,GAAR,CAAY,KAAK,UAAL,CAAgB,OAAhB,EAAyB,OAAzB,CAAZ;AACD;;AAED,SAAO,UAAP,CAAkB,KAAlB,EAAiC,OAAjC,EAAgD;AAC9C,WAAO,IAAI,KAAK,CAAC,WAAN,EAAmB,KAAK,OAAO,EAA1C;AACD;;AAED,SAAO,SAAP,CAAiB,KAAjB,EAA8B;AAC5B,UAAM,YAAY,GAAG,UAAU,CAAC,QAAA,CAAA,MAAA,CAAO,QAAR,CAA/B;AACA,WAAO,YAAY,IAAI,UAAU,CAAC,KAAD,CAAjC;AACD;;AA5BgB;;AAAnB,OAAA,CAAA,MAAA,GAAA,MAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst config_1 = require(\"./config\");\nconst levels = ['debug', 'info', 'warn', 'error', 'none'];\nconst levelToInt = {};\nconst intToLevel = {};\nfor (let index = 0; index < levels.length; index++) {\n    const level = levels[index];\n    levelToInt[level] = index;\n    intToLevel[index] = level;\n}\n/**\n * @ignore\n */\nclass Logger {\n    static error(message) {\n        if (!this.shouldLog('error'))\n            return;\n        console.error(this.logMessage('error', message));\n    }\n    static warn(message) {\n        if (!this.shouldLog('warn'))\n            return;\n        console.warn(this.logMessage('warn', message));\n    }\n    static info(message) {\n        if (!this.shouldLog('info'))\n            return;\n        console.log(this.logMessage('info', message));\n    }\n    static debug(message) {\n        if (!this.shouldLog('debug'))\n            return;\n        console.log(this.logMessage('debug', message));\n    }\n    static logMessage(level, message) {\n        return `[${level.toUpperCase()}] ${message}`;\n    }\n    static shouldLog(level) {\n        const currentLevel = levelToInt[config_1.config.logLevel];\n        return currentLevel <= levelToInt[level];\n    }\n}\nexports.Logger = Logger;\n//# sourceMappingURL=logger.js.map"]},"metadata":{},"sourceType":"script"}