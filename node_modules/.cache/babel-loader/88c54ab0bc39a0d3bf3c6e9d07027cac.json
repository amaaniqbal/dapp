{"ast":null,"code":"// Generated by IcedCoffeeScript 108.0.11\n(function () {\n  var BaseError,\n      C,\n      Canceler,\n      EscErr,\n      EscOk,\n      c_to_camel,\n      copy_trace,\n      ipush,\n      make_error_klass,\n      make_errors,\n      make_esc,\n      to_lower,\n      util,\n      __slice = [].slice;\n  util = require('util');\n  C = require('iced-runtime')[\"const\"];\n\n  exports.BaseError = BaseError = function (msg, constructor) {\n    if (typeof Error.captureStackTrace === \"function\") {\n      Error.captureStackTrace(this, this.constructor);\n    }\n\n    return this.message = msg || 'Error';\n  };\n\n  util.inherits(BaseError, Error);\n  BaseError.prototype.name = \"BaseError\";\n\n  to_lower = function (s) {\n    return s[0].toUpperCase() + s.slice(1).toLowerCase();\n  };\n\n  c_to_camel = function (s) {\n    var p;\n    return function () {\n      var _i, _len, _ref, _results;\n\n      _ref = s.split(/_/);\n      _results = [];\n\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        p = _ref[_i];\n\n        _results.push(to_lower(p));\n      }\n\n      return _results;\n    }().join('');\n  };\n\n  make_error_klass = function (k, code, default_msg) {\n    var ctor;\n\n    ctor = function (msg) {\n      BaseError.call(this, msg || default_msg, this.constructor);\n      this.istack = [];\n      this.code = code;\n      return this;\n    };\n\n    util.inherits(ctor, BaseError);\n    ctor.prototype.name = k;\n\n    ctor.prototype.inspect = function () {\n      return \"[\" + k + \": \" + this.message + \" (code \" + this.code + \")]\";\n    };\n\n    return ctor;\n  };\n\n  copy_trace = function (src, dst) {\n    dst[C.trace] = src[C.trace];\n    return dst;\n  };\n\n  exports.make_errors = make_errors = function (d) {\n    var enam, errno, k, msg, out, val;\n    out = {\n      msg: {},\n      name: {},\n      code: {}\n    };\n    d.OK = \"Success\";\n    errno = 100;\n\n    for (k in d) {\n      msg = d[k];\n\n      if (k !== \"OK\") {\n        enam = c_to_camel(k) + \"Error\";\n        val = errno++;\n        out[enam] = make_error_klass(enam, val, msg);\n      } else {\n        val = 0;\n      }\n\n      out[k] = val;\n      out.msg[k] = out.msg[val] = msg;\n      out.name[k] = out.name[val] = k;\n      out.code[k] = val;\n    }\n\n    return out;\n  };\n\n  ipush = function (e, msg) {\n    if (msg != null) {\n      if (e.istack == null) {\n        e.istack = [];\n      }\n\n      return e.istack.push(msg);\n    }\n  };\n\n  exports.make_esc = make_esc = function (gcb, where) {\n    var _ref;\n\n    if (where == null) {\n      where = (_ref = make_esc.caller) != null ? _ref.name : void 0;\n    }\n\n    return function (lcb) {\n      return copy_trace(lcb, function () {\n        var args, err;\n        err = arguments[0], args = 2 <= arguments.length ? __slice.call(arguments, 1) : [];\n\n        if (err == null) {\n          return lcb.apply(null, args);\n        } else if (!gcb.__esc) {\n          gcb.__esc = true;\n          ipush(err, where != null ? where : \"unnamed error\");\n          return gcb(err);\n        }\n      });\n    };\n  };\n\n  exports.EscOk = EscOk = function () {\n    function EscOk(gcb, where) {\n      this.gcb = gcb;\n      this.where = where;\n    }\n\n    EscOk.prototype.bailout = function () {\n      var t;\n\n      if (this.gcb) {\n        t = this.gcb;\n        this.gcb = null;\n        return t(false);\n      }\n    };\n\n    EscOk.prototype.check_ok = function (cb) {\n      return copy_trace(cb, function (_this) {\n        return function () {\n          var args, ok;\n          ok = arguments[0], args = 2 <= arguments.length ? __slice.call(arguments, 1) : [];\n\n          if (!ok) {\n            return _this.bailout();\n          } else {\n            return cb.apply(null, args);\n          }\n        };\n      }(this));\n    };\n\n    EscOk.prototype.check_err = function (cb) {\n      return copy_trace(cb, function (_this) {\n        return function () {\n          var args, err;\n          err = arguments[0], args = 2 <= arguments.length ? __slice.call(arguments, 1) : [];\n\n          if (err != null) {\n            ipush(err, _this.where);\n            return _this.bailout();\n          } else {\n            return cb.apply(null, args);\n          }\n        };\n      }(this));\n    };\n\n    EscOk.prototype.check_non_null = function (cb) {\n      return copy_trace(cb, function (_this) {\n        return function () {\n          var args;\n          args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n\n          if (args[0] == null) {\n            return _this.bailout();\n          } else {\n            return cb.apply(null, args);\n          }\n        };\n      }(this));\n    };\n\n    return EscOk;\n  }();\n\n  exports.EscErr = EscErr = function () {\n    function EscErr(gcb, where) {\n      this.gcb = gcb;\n      this.where = where;\n    }\n\n    EscErr.prototype.finish = function (err) {\n      var t;\n\n      if (this.gcb) {\n        t = this.gcb;\n        this.gcb = null;\n        return t(err);\n      }\n    };\n\n    EscErr.prototype.check_ok = function (cb, eclass, emsg) {\n      if (eclass == null) {\n        eclass = Error;\n      }\n\n      if (emsg == null) {\n        emsg = null;\n      }\n\n      return copy_trace(cb, function () {\n        var args, err, ok;\n        ok = arguments[0], args = 2 <= arguments.length ? __slice.call(arguments, 1) : [];\n\n        if (!ok) {\n          err = new eclass(emsg);\n          ipush(err, this.where);\n          return this.finish(err);\n        } else {\n          return cb.apply(null, args);\n        }\n      });\n    };\n\n    EscErr.prototype.check_err = function (cb) {\n      return copy_trace(cb, function () {\n        var args, err;\n        err = arguments[0], args = 2 <= arguments.length ? __slice.call(arguments, 1) : [];\n\n        if (err != null) {\n          ipush(err, this.where);\n          return this.finish(err);\n        } else {\n          return cb.apply(null, args);\n        }\n      });\n    };\n\n    return EscErr;\n  }();\n\n  exports.Canceler = Canceler = function () {\n    function Canceler(klass) {\n      this.klass = klass != null ? klass : Error;\n      this._canceled = false;\n    }\n\n    Canceler.prototype.is_canceled = function () {\n      return this._canceled;\n    };\n\n    Canceler.prototype.is_ok = function () {\n      return !this._canceled;\n    };\n\n    Canceler.prototype.cancel = function () {\n      return this._canceled = true;\n    };\n\n    Canceler.prototype.err = function () {\n      if (this._canceled) {\n        return new this.klass(\"Aborted\");\n      } else {\n        return null;\n      }\n    };\n\n    return Canceler;\n  }();\n\n  exports.chain = function (cb, f) {\n    return function () {\n      var args;\n      args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n      return f(function () {\n        return cb.apply(null, args);\n      });\n    };\n  };\n\n  exports.chain_err = function (cb, f) {\n    return function () {\n      var args0;\n      args0 = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n      return f(function () {\n        var args1;\n        args1 = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n        return cb.apply(null, args1[0] != null && !(args0[0] != null) ? args1 : args0);\n      });\n    };\n  };\n}).call(this);","map":{"version":3,"sources":["index.iced"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["// Generated by IcedCoffeeScript 108.0.11\n(function() {\n  var BaseError, C, Canceler, EscErr, EscOk, c_to_camel, copy_trace, ipush, make_error_klass, make_errors, make_esc, to_lower, util,\n    __slice = [].slice;\n\n  util = require('util');\n\n  C = require('iced-runtime')[\"const\"];\n\n  exports.BaseError = BaseError = function(msg, constructor) {\n    if (typeof Error.captureStackTrace === \"function\") {\n      Error.captureStackTrace(this, this.constructor);\n    }\n    return this.message = msg || 'Error';\n  };\n\n  util.inherits(BaseError, Error);\n\n  BaseError.prototype.name = \"BaseError\";\n\n  to_lower = function(s) {\n    return s[0].toUpperCase() + s.slice(1).toLowerCase();\n  };\n\n  c_to_camel = function(s) {\n    var p;\n    return ((function() {\n      var _i, _len, _ref, _results;\n      _ref = s.split(/_/);\n      _results = [];\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        p = _ref[_i];\n        _results.push(to_lower(p));\n      }\n      return _results;\n    })()).join('');\n  };\n\n  make_error_klass = function(k, code, default_msg) {\n    var ctor;\n    ctor = function(msg) {\n      BaseError.call(this, msg || default_msg, this.constructor);\n      this.istack = [];\n      this.code = code;\n      return this;\n    };\n    util.inherits(ctor, BaseError);\n    ctor.prototype.name = k;\n    ctor.prototype.inspect = function() {\n      return \"[\" + k + \": \" + this.message + \" (code \" + this.code + \")]\";\n    };\n    return ctor;\n  };\n\n  copy_trace = function(src, dst) {\n    dst[C.trace] = src[C.trace];\n    return dst;\n  };\n\n  exports.make_errors = make_errors = function(d) {\n    var enam, errno, k, msg, out, val;\n    out = {\n      msg: {},\n      name: {},\n      code: {}\n    };\n    d.OK = \"Success\";\n    errno = 100;\n    for (k in d) {\n      msg = d[k];\n      if (k !== \"OK\") {\n        enam = (c_to_camel(k)) + \"Error\";\n        val = errno++;\n        out[enam] = make_error_klass(enam, val, msg);\n      } else {\n        val = 0;\n      }\n      out[k] = val;\n      out.msg[k] = out.msg[val] = msg;\n      out.name[k] = out.name[val] = k;\n      out.code[k] = val;\n    }\n    return out;\n  };\n\n  ipush = function(e, msg) {\n    if (msg != null) {\n      if (e.istack == null) {\n        e.istack = [];\n      }\n      return e.istack.push(msg);\n    }\n  };\n\n  exports.make_esc = make_esc = function(gcb, where) {\n    var _ref;\n    if (where == null) {\n      where = (_ref = make_esc.caller) != null ? _ref.name : void 0;\n    }\n    return function(lcb) {\n      return copy_trace(lcb, function() {\n        var args, err;\n        err = arguments[0], args = 2 <= arguments.length ? __slice.call(arguments, 1) : [];\n        if (err == null) {\n          return lcb.apply(null, args);\n        } else if (!gcb.__esc) {\n          gcb.__esc = true;\n          ipush(err, where != null ? where : \"unnamed error\");\n          return gcb(err);\n        }\n      });\n    };\n  };\n\n  exports.EscOk = EscOk = (function() {\n    function EscOk(gcb, where) {\n      this.gcb = gcb;\n      this.where = where;\n    }\n\n    EscOk.prototype.bailout = function() {\n      var t;\n      if (this.gcb) {\n        t = this.gcb;\n        this.gcb = null;\n        return t(false);\n      }\n    };\n\n    EscOk.prototype.check_ok = function(cb) {\n      return copy_trace(cb, (function(_this) {\n        return function() {\n          var args, ok;\n          ok = arguments[0], args = 2 <= arguments.length ? __slice.call(arguments, 1) : [];\n          if (!ok) {\n            return _this.bailout();\n          } else {\n            return cb.apply(null, args);\n          }\n        };\n      })(this));\n    };\n\n    EscOk.prototype.check_err = function(cb) {\n      return copy_trace(cb, (function(_this) {\n        return function() {\n          var args, err;\n          err = arguments[0], args = 2 <= arguments.length ? __slice.call(arguments, 1) : [];\n          if (err != null) {\n            ipush(err, _this.where);\n            return _this.bailout();\n          } else {\n            return cb.apply(null, args);\n          }\n        };\n      })(this));\n    };\n\n    EscOk.prototype.check_non_null = function(cb) {\n      return copy_trace(cb, (function(_this) {\n        return function() {\n          var args;\n          args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n          if (args[0] == null) {\n            return _this.bailout();\n          } else {\n            return cb.apply(null, args);\n          }\n        };\n      })(this));\n    };\n\n    return EscOk;\n\n  })();\n\n  exports.EscErr = EscErr = (function() {\n    function EscErr(gcb, where) {\n      this.gcb = gcb;\n      this.where = where;\n    }\n\n    EscErr.prototype.finish = function(err) {\n      var t;\n      if (this.gcb) {\n        t = this.gcb;\n        this.gcb = null;\n        return t(err);\n      }\n    };\n\n    EscErr.prototype.check_ok = function(cb, eclass, emsg) {\n      if (eclass == null) {\n        eclass = Error;\n      }\n      if (emsg == null) {\n        emsg = null;\n      }\n      return copy_trace(cb, function() {\n        var args, err, ok;\n        ok = arguments[0], args = 2 <= arguments.length ? __slice.call(arguments, 1) : [];\n        if (!ok) {\n          err = new eclass(emsg);\n          ipush(err, this.where);\n          return this.finish(err);\n        } else {\n          return cb.apply(null, args);\n        }\n      });\n    };\n\n    EscErr.prototype.check_err = function(cb) {\n      return copy_trace(cb, function() {\n        var args, err;\n        err = arguments[0], args = 2 <= arguments.length ? __slice.call(arguments, 1) : [];\n        if (err != null) {\n          ipush(err, this.where);\n          return this.finish(err);\n        } else {\n          return cb.apply(null, args);\n        }\n      });\n    };\n\n    return EscErr;\n\n  })();\n\n  exports.Canceler = Canceler = (function() {\n    function Canceler(klass) {\n      this.klass = klass != null ? klass : Error;\n      this._canceled = false;\n    }\n\n    Canceler.prototype.is_canceled = function() {\n      return this._canceled;\n    };\n\n    Canceler.prototype.is_ok = function() {\n      return !this._canceled;\n    };\n\n    Canceler.prototype.cancel = function() {\n      return this._canceled = true;\n    };\n\n    Canceler.prototype.err = function() {\n      if (this._canceled) {\n        return new this.klass(\"Aborted\");\n      } else {\n        return null;\n      }\n    };\n\n    return Canceler;\n\n  })();\n\n  exports.chain = function(cb, f) {\n    return function() {\n      var args;\n      args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n      return f(function() {\n        return cb.apply(null, args);\n      });\n    };\n  };\n\n  exports.chain_err = function(cb, f) {\n    return function() {\n      var args0;\n      args0 = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n      return f(function() {\n        var args1;\n        args1 = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n        return cb.apply(null, ((args1[0] != null) && !(args0[0] != null) ? args1 : args0));\n      });\n    };\n  };\n\n}).call(this);\n\n//# sourceMappingURL=index.js.map\n"]},"metadata":{},"sourceType":"script"}