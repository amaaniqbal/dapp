{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n}); // @ts-ignore: Could not find a declaration file for module\n\nconst zone_file_1 = require(\"zone-file\");\n\nconst person_1 = require(\"./person\");\n\nconst profileZoneFiles_1 = require(\"../profileZoneFiles\");\n\nconst profileTokens_1 = require(\"../profileTokens\");\n\nconst fetchUtil_1 = require(\"../../fetchUtil\");\n/**\n *\n * @param zoneFile\n * @param publicKeyOrAddress\n * @param callback\n *\n * @ignore\n */\n\n\nfunction resolveZoneFileToPerson(zoneFile, publicKeyOrAddress, callback) {\n  let zoneFileJson = null;\n\n  try {\n    zoneFileJson = zone_file_1.parseZoneFile(zoneFile);\n\n    if (!zoneFileJson.hasOwnProperty('$origin')) {\n      zoneFileJson = null;\n      throw new Error('zone file is missing an origin');\n    }\n  } catch (e) {\n    console.error(e);\n  }\n\n  let tokenFileUrl = null;\n\n  if (zoneFileJson && Object.keys(zoneFileJson).length > 0) {\n    tokenFileUrl = profileZoneFiles_1.getTokenFileUrl(zoneFileJson);\n  } else {\n    let profile = null;\n\n    try {\n      profile = JSON.parse(zoneFile);\n      const person = person_1.Person.fromLegacyFormat(profile);\n      profile = person.profile();\n    } catch (error) {\n      console.warn(error);\n    }\n\n    callback(profile);\n    return;\n  }\n\n  if (tokenFileUrl) {\n    fetchUtil_1.fetchPrivate(tokenFileUrl).then(response => response.text()).then(responseText => JSON.parse(responseText)).then(responseJson => {\n      const tokenRecords = responseJson;\n      const token = tokenRecords[0].token;\n      const profile = profileTokens_1.extractProfile(token, publicKeyOrAddress);\n      callback(profile);\n    }).catch(error => {\n      console.warn(error);\n    });\n  } else {\n    console.warn('Token file url not found');\n    callback({});\n  }\n}\n\nexports.resolveZoneFileToPerson = resolveZoneFileToPerson;","map":{"version":3,"sources":["../../../src/profiles/profileSchemas/personZoneFiles.ts"],"names":[],"mappings":";;;;IAAA;;AACA,MAAA,WAAA,GAAA,OAAA,CAAA,WAAA,CAAA;;AAEA,MAAA,QAAA,GAAA,OAAA,CAAA,UAAA,CAAA;;AACA,MAAA,kBAAA,GAAA,OAAA,CAAA,qBAAA,CAAA;;AACA,MAAA,eAAA,GAAA,OAAA,CAAA,kBAAA,CAAA;;AACA,MAAA,WAAA,GAAA,OAAA,CAAA,iBAAA,CAAA;AAEA;;;;;;;;;;AAQA,SAAgB,uBAAhB,CACE,QADF,EAEE,kBAFF,EAGE,QAHF,EAGkC;AAChC,MAAI,YAAY,GAAG,IAAnB;;AACA,MAAI;AACF,IAAA,YAAY,GAAG,WAAA,CAAA,aAAA,CAAc,QAAd,CAAf;;AACA,QAAI,CAAC,YAAY,CAAC,cAAb,CAA4B,SAA5B,CAAL,EAA6C;AAC3C,MAAA,YAAY,GAAG,IAAf;AACA,YAAM,IAAI,KAAJ,CAAU,gCAAV,CAAN;AACD;AACF,GAND,CAME,OAAO,CAAP,EAAU;AACV,IAAA,OAAO,CAAC,KAAR,CAAc,CAAd;AACD;;AAED,MAAI,YAAY,GAAG,IAAnB;;AACA,MAAI,YAAY,IAAI,MAAM,CAAC,IAAP,CAAY,YAAZ,EAA0B,MAA1B,GAAmC,CAAvD,EAA0D;AACxD,IAAA,YAAY,GAAG,kBAAA,CAAA,eAAA,CAAgB,YAAhB,CAAf;AACD,GAFD,MAEO;AACL,QAAI,OAAO,GAAG,IAAd;;AACA,QAAI;AACF,MAAA,OAAO,GAAG,IAAI,CAAC,KAAL,CAAW,QAAX,CAAV;AACA,YAAM,MAAM,GAAG,QAAA,CAAA,MAAA,CAAO,gBAAP,CAAwB,OAAxB,CAAf;AACA,MAAA,OAAO,GAAG,MAAM,CAAC,OAAP,EAAV;AACD,KAJD,CAIE,OAAO,KAAP,EAAc;AACd,MAAA,OAAO,CAAC,IAAR,CAAa,KAAb;AACD;;AACD,IAAA,QAAQ,CAAC,OAAD,CAAR;AACA;AACD;;AAED,MAAI,YAAJ,EAAkB;AAChB,IAAA,WAAA,CAAA,YAAA,CAAa,YAAb,EACG,IADH,CACQ,QAAQ,IAAI,QAAQ,CAAC,IAAT,EADpB,EAEG,IAFH,CAEQ,YAAY,IAAI,IAAI,CAAC,KAAL,CAAW,YAAX,CAFxB,EAGG,IAHH,CAGS,YAAD,IAAiB;AACrB,YAAM,YAAY,GAAG,YAArB;AACA,YAAM,KAAK,GAAG,YAAY,CAAC,CAAD,CAAZ,CAAgB,KAA9B;AACA,YAAM,OAAO,GAAG,eAAA,CAAA,cAAA,CAAe,KAAf,EAAsB,kBAAtB,CAAhB;AAEA,MAAA,QAAQ,CAAC,OAAD,CAAR;AACD,KATH,EAUG,KAVH,CAUU,KAAD,IAAU;AACf,MAAA,OAAO,CAAC,IAAR,CAAa,KAAb;AACD,KAZH;AAaD,GAdD,MAcO;AACL,IAAA,OAAO,CAAC,IAAR,CAAa,0BAAb;AACA,IAAA,QAAQ,CAAC,EAAD,CAAR;AACD;AACF;;AAjDD,OAAA,CAAA,uBAAA,GAAA,uBAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// @ts-ignore: Could not find a declaration file for module\nconst zone_file_1 = require(\"zone-file\");\nconst person_1 = require(\"./person\");\nconst profileZoneFiles_1 = require(\"../profileZoneFiles\");\nconst profileTokens_1 = require(\"../profileTokens\");\nconst fetchUtil_1 = require(\"../../fetchUtil\");\n/**\n *\n * @param zoneFile\n * @param publicKeyOrAddress\n * @param callback\n *\n * @ignore\n */\nfunction resolveZoneFileToPerson(zoneFile, publicKeyOrAddress, callback) {\n    let zoneFileJson = null;\n    try {\n        zoneFileJson = zone_file_1.parseZoneFile(zoneFile);\n        if (!zoneFileJson.hasOwnProperty('$origin')) {\n            zoneFileJson = null;\n            throw new Error('zone file is missing an origin');\n        }\n    }\n    catch (e) {\n        console.error(e);\n    }\n    let tokenFileUrl = null;\n    if (zoneFileJson && Object.keys(zoneFileJson).length > 0) {\n        tokenFileUrl = profileZoneFiles_1.getTokenFileUrl(zoneFileJson);\n    }\n    else {\n        let profile = null;\n        try {\n            profile = JSON.parse(zoneFile);\n            const person = person_1.Person.fromLegacyFormat(profile);\n            profile = person.profile();\n        }\n        catch (error) {\n            console.warn(error);\n        }\n        callback(profile);\n        return;\n    }\n    if (tokenFileUrl) {\n        fetchUtil_1.fetchPrivate(tokenFileUrl)\n            .then(response => response.text())\n            .then(responseText => JSON.parse(responseText))\n            .then((responseJson) => {\n            const tokenRecords = responseJson;\n            const token = tokenRecords[0].token;\n            const profile = profileTokens_1.extractProfile(token, publicKeyOrAddress);\n            callback(profile);\n        })\n            .catch((error) => {\n            console.warn(error);\n        });\n    }\n    else {\n        console.warn('Token file url not found');\n        callback({});\n    }\n}\nexports.resolveZoneFileToPerson = resolveZoneFileToPerson;\n//# sourceMappingURL=personZoneFiles.js.map"]},"metadata":{},"sourceType":"script"}