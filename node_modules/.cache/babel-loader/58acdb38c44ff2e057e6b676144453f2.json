{"ast":null,"code":"// Generated by IcedCoffeeScript 1.7.1-f\n(function () {\n  var Generator, iced, __iced_k, __iced_k_noop;\n\n  iced = require('iced-runtime');\n\n  __iced_k = __iced_k_noop = function () {};\n\n  Generator = Generator = function () {\n    function Generator(opts) {\n      opts = opts || {};\n      this.lazy_loop_delay = opts.lazy_loop_delay || 30;\n      this.loop_delay = opts.loop_delay || 5;\n      this.work_min = opts.work_min || 1;\n      this.auto_stop_bits = opts.auto_stop_bits || 4096;\n      this.max_bits_per_delta = opts.max_bits_per_delta || 4;\n      this.auto_stop = opts.auto_stop ? opts.auto_stop : true;\n      this.entropies = [];\n      this.running = true;\n      this.is_generating = false;\n      this.timer_race_loop();\n    }\n\n    Generator.prototype.generate = function (bits_wanted, cb) {\n      var e, harvested_bits, res, ___iced_passed_deferral, __iced_deferrals, __iced_k;\n\n      __iced_k = __iced_k_noop;\n      ___iced_passed_deferral = iced.findDeferral(arguments);\n      this.is_generating = true;\n\n      if (!this.running) {\n        this.resume();\n      }\n\n      harvested_bits = 0;\n      res = [];\n      (function (_this) {\n        return function (__iced_k) {\n          var _results, _while;\n\n          _results = [];\n\n          _while = function (__iced_k) {\n            var _break, _continue, _next;\n\n            _break = function () {\n              return __iced_k(_results);\n            };\n\n            _continue = function () {\n              return iced.trampoline(function () {\n                return _while(__iced_k);\n              });\n            };\n\n            _next = function (__iced_next_arg) {\n              _results.push(__iced_next_arg);\n\n              return _continue();\n            };\n\n            if (!(harvested_bits < bits_wanted)) {\n              return _break();\n            } else {\n              (function (__iced_k) {\n                if (_this.entropies.length) {\n                  e = _this.entropies.splice(0, 1)[0];\n                  harvested_bits += e[1];\n                  return __iced_k(res.push(e[0]));\n                } else {\n                  (function (__iced_k) {\n                    __iced_deferrals = new iced.Deferrals(__iced_k, {\n                      parent: ___iced_passed_deferral,\n                      filename: \"/Users/chris/git/more-entropy/src/generator.iced\",\n                      funcname: \"Generator.generate\"\n                    });\n\n                    _this.delay(__iced_deferrals.defer({\n                      lineno: 28\n                    }));\n\n                    __iced_deferrals._fulfill();\n                  })(__iced_k);\n                }\n              })(_next);\n            }\n          };\n\n          _while(__iced_k);\n        };\n      })(this)(function (_this) {\n        return function () {\n          if (_this.auto_stop) {\n            _this.stop();\n          }\n\n          _this.is_generating = false;\n          return cb(res);\n        };\n      }(this));\n    };\n\n    Generator.prototype.stop = function () {\n      return this.running = false;\n    };\n\n    Generator.prototype.resume = function () {\n      this.running = true;\n      return this.timer_race_loop();\n    };\n\n    Generator.prototype.reset = function () {\n      this.entropies = [];\n      return this.total_bits = 0;\n    };\n\n    Generator.prototype.count_unused_bits = function () {\n      var bits, e, _i, _len, _ref;\n\n      bits = 0;\n      _ref = this.entropies;\n\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        e = _ref[_i];\n        bits += e[1];\n      }\n\n      return bits;\n    };\n\n    Generator.prototype.delay = function (cb) {\n      var delay, ___iced_passed_deferral, __iced_deferrals, __iced_k;\n\n      __iced_k = __iced_k_noop;\n      ___iced_passed_deferral = iced.findDeferral(arguments);\n      delay = this.is_generating ? this.loop_delay : this.lazy_loop_delay;\n      (function (_this) {\n        return function (__iced_k) {\n          __iced_deferrals = new iced.Deferrals(__iced_k, {\n            parent: ___iced_passed_deferral,\n            filename: \"/Users/chris/git/more-entropy/src/generator.iced\",\n            funcname: \"Generator.delay\"\n          });\n          setTimeout(__iced_deferrals.defer({\n            lineno: 50\n          }), delay);\n\n          __iced_deferrals._fulfill();\n        };\n      })(this)(function (_this) {\n        return function () {\n          return cb();\n        };\n      }(this));\n    };\n\n    Generator.prototype.timer_race_loop = function () {\n      var ___iced_passed_deferral, __iced_k, _results, _while;\n\n      __iced_k = __iced_k_noop;\n      ___iced_passed_deferral = iced.findDeferral(arguments);\n      this._last_count = null;\n      _results = [];\n\n      _while = function (_this) {\n        var count, delta, entropy, v, __iced_deferrals;\n\n        return function (__iced_k) {\n          var _break, _continue, _next;\n\n          _break = function () {\n            return __iced_k(_results);\n          };\n\n          _continue = function () {\n            return iced.trampoline(function () {\n              return _while(__iced_k);\n            });\n          };\n\n          _next = function (__iced_next_arg) {\n            _results.push(__iced_next_arg);\n\n            return _continue();\n          };\n\n          if (!_this.running) {\n            return _break();\n          } else {\n            if (_this.count_unused_bits() < _this.auto_stop_bits) {\n              count = _this.millisecond_count();\n\n              if (_this._last_count != null && (delta = count - _this._last_count)) {\n                entropy = Math.floor(_this.log_2(Math.abs(delta)));\n                entropy = Math.min(_this.max_bits_per_delta, entropy);\n                v = [delta, entropy];\n\n                _this.entropies.push(v);\n              }\n\n              _this._last_count = count;\n            }\n\n            (function (__iced_k) {\n              __iced_deferrals = new iced.Deferrals(__iced_k, {\n                parent: ___iced_passed_deferral,\n                filename: \"/Users/chris/git/more-entropy/src/generator.iced\",\n                funcname: \"Generator.timer_race_loop\"\n              });\n\n              _this.delay(__iced_deferrals.defer({\n                lineno: 64\n              }));\n\n              __iced_deferrals._fulfill();\n            })(_next);\n          }\n        };\n      }(this);\n\n      _while(__iced_k);\n    };\n\n    Generator.prototype.log_2 = function (x) {\n      return Math.log(x) / Math.LN2;\n    };\n\n    Generator.prototype.millisecond_count = function () {\n      var d, i, x;\n      d = Date.now();\n      i = x = 0;\n\n      while (Date.now() < d + this.work_min + 1) {\n        i++;\n        x = Math.sin(Math.sqrt(Math.log(i + x)));\n      }\n\n      return i;\n    };\n\n    return Generator;\n  }();\n\n  if (typeof window !== \"undefined\" && window !== null) {\n    window.Generator = Generator;\n  }\n\n  if (typeof exports !== \"undefined\" && exports !== null) {\n    exports.Generator = Generator;\n  }\n}).call(this);","map":{"version":3,"sources":["/home/os/Desktop/hello-world-tutorial/node_modules/more-entropy/lib/generator.js"],"names":["Generator","iced","__iced_k","__iced_k_noop","require","opts","lazy_loop_delay","loop_delay","work_min","auto_stop_bits","max_bits_per_delta","auto_stop","entropies","running","is_generating","timer_race_loop","prototype","generate","bits_wanted","cb","e","harvested_bits","res","___iced_passed_deferral","__iced_deferrals","findDeferral","arguments","resume","_this","_results","_while","_break","_continue","_next","trampoline","__iced_next_arg","push","length","splice","Deferrals","parent","filename","funcname","delay","defer","lineno","_fulfill","stop","reset","total_bits","count_unused_bits","bits","_i","_len","_ref","setTimeout","_last_count","count","delta","entropy","v","millisecond_count","Math","floor","log_2","abs","min","x","log","LN2","d","i","Date","now","sin","sqrt","window","exports","call"],"mappings":"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","sourcesContent":["// Generated by IcedCoffeeScript 1.7.1-f\n(function() {\n  var Generator, iced, __iced_k, __iced_k_noop;\n\n  iced = require('iced-runtime');\n  __iced_k = __iced_k_noop = function() {};\n\n  Generator = Generator = (function() {\n    function Generator(opts) {\n      opts = opts || {};\n      this.lazy_loop_delay = opts.lazy_loop_delay || 30;\n      this.loop_delay = opts.loop_delay || 5;\n      this.work_min = opts.work_min || 1;\n      this.auto_stop_bits = opts.auto_stop_bits || 4096;\n      this.max_bits_per_delta = opts.max_bits_per_delta || 4;\n      this.auto_stop = opts.auto_stop ? opts.auto_stop : true;\n      this.entropies = [];\n      this.running = true;\n      this.is_generating = false;\n      this.timer_race_loop();\n    }\n\n    Generator.prototype.generate = function(bits_wanted, cb) {\n      var e, harvested_bits, res, ___iced_passed_deferral, __iced_deferrals, __iced_k;\n      __iced_k = __iced_k_noop;\n      ___iced_passed_deferral = iced.findDeferral(arguments);\n      this.is_generating = true;\n      if (!this.running) {\n        this.resume();\n      }\n      harvested_bits = 0;\n      res = [];\n      (function(_this) {\n        return (function(__iced_k) {\n          var _results, _while;\n          _results = [];\n          _while = function(__iced_k) {\n            var _break, _continue, _next;\n            _break = function() {\n              return __iced_k(_results);\n            };\n            _continue = function() {\n              return iced.trampoline(function() {\n                return _while(__iced_k);\n              });\n            };\n            _next = function(__iced_next_arg) {\n              _results.push(__iced_next_arg);\n              return _continue();\n            };\n            if (!(harvested_bits < bits_wanted)) {\n              return _break();\n            } else {\n              (function(__iced_k) {\n                if (_this.entropies.length) {\n                  e = _this.entropies.splice(0, 1)[0];\n                  harvested_bits += e[1];\n                  return __iced_k(res.push(e[0]));\n                } else {\n                  (function(__iced_k) {\n                    __iced_deferrals = new iced.Deferrals(__iced_k, {\n                      parent: ___iced_passed_deferral,\n                      filename: \"/Users/chris/git/more-entropy/src/generator.iced\",\n                      funcname: \"Generator.generate\"\n                    });\n                    _this.delay(__iced_deferrals.defer({\n                      lineno: 28\n                    }));\n                    __iced_deferrals._fulfill();\n                  })(__iced_k);\n                }\n              })(_next);\n            }\n          };\n          _while(__iced_k);\n        });\n      })(this)((function(_this) {\n        return function() {\n          if (_this.auto_stop) {\n            _this.stop();\n          }\n          _this.is_generating = false;\n          return cb(res);\n        };\n      })(this));\n    };\n\n    Generator.prototype.stop = function() {\n      return this.running = false;\n    };\n\n    Generator.prototype.resume = function() {\n      this.running = true;\n      return this.timer_race_loop();\n    };\n\n    Generator.prototype.reset = function() {\n      this.entropies = [];\n      return this.total_bits = 0;\n    };\n\n    Generator.prototype.count_unused_bits = function() {\n      var bits, e, _i, _len, _ref;\n      bits = 0;\n      _ref = this.entropies;\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        e = _ref[_i];\n        bits += e[1];\n      }\n      return bits;\n    };\n\n    Generator.prototype.delay = function(cb) {\n      var delay, ___iced_passed_deferral, __iced_deferrals, __iced_k;\n      __iced_k = __iced_k_noop;\n      ___iced_passed_deferral = iced.findDeferral(arguments);\n      delay = this.is_generating ? this.loop_delay : this.lazy_loop_delay;\n      (function(_this) {\n        return (function(__iced_k) {\n          __iced_deferrals = new iced.Deferrals(__iced_k, {\n            parent: ___iced_passed_deferral,\n            filename: \"/Users/chris/git/more-entropy/src/generator.iced\",\n            funcname: \"Generator.delay\"\n          });\n          setTimeout(__iced_deferrals.defer({\n            lineno: 50\n          }), delay);\n          __iced_deferrals._fulfill();\n        });\n      })(this)((function(_this) {\n        return function() {\n          return cb();\n        };\n      })(this));\n    };\n\n    Generator.prototype.timer_race_loop = function() {\n      var ___iced_passed_deferral, __iced_k, _results, _while;\n      __iced_k = __iced_k_noop;\n      ___iced_passed_deferral = iced.findDeferral(arguments);\n      this._last_count = null;\n      _results = [];\n      _while = (function(_this) {\n        var count, delta, entropy, v, __iced_deferrals;\n        return function(__iced_k) {\n          var _break, _continue, _next;\n          _break = function() {\n            return __iced_k(_results);\n          };\n          _continue = function() {\n            return iced.trampoline(function() {\n              return _while(__iced_k);\n            });\n          };\n          _next = function(__iced_next_arg) {\n            _results.push(__iced_next_arg);\n            return _continue();\n          };\n          if (!_this.running) {\n            return _break();\n          } else {\n            if (_this.count_unused_bits() < _this.auto_stop_bits) {\n              count = _this.millisecond_count();\n              if ((_this._last_count != null) && (delta = count - _this._last_count)) {\n                entropy = Math.floor(_this.log_2(Math.abs(delta)));\n                entropy = Math.min(_this.max_bits_per_delta, entropy);\n                v = [delta, entropy];\n                _this.entropies.push(v);\n              }\n              _this._last_count = count;\n            }\n            (function(__iced_k) {\n              __iced_deferrals = new iced.Deferrals(__iced_k, {\n                parent: ___iced_passed_deferral,\n                filename: \"/Users/chris/git/more-entropy/src/generator.iced\",\n                funcname: \"Generator.timer_race_loop\"\n              });\n              _this.delay(__iced_deferrals.defer({\n                lineno: 64\n              }));\n              __iced_deferrals._fulfill();\n            })(_next);\n          }\n        };\n      })(this);\n      _while(__iced_k);\n    };\n\n    Generator.prototype.log_2 = function(x) {\n      return Math.log(x) / Math.LN2;\n    };\n\n    Generator.prototype.millisecond_count = function() {\n      var d, i, x;\n      d = Date.now();\n      i = x = 0;\n      while (Date.now() < d + this.work_min + 1) {\n        i++;\n        x = Math.sin(Math.sqrt(Math.log(i + x)));\n      }\n      return i;\n    };\n\n    return Generator;\n\n  })();\n\n  if (typeof window !== \"undefined\" && window !== null) {\n    window.Generator = Generator;\n  }\n\n  if (typeof exports !== \"undefined\" && exports !== null) {\n    exports.Generator = Generator;\n  }\n\n}).call(this);\n"]},"metadata":{},"sourceType":"script"}