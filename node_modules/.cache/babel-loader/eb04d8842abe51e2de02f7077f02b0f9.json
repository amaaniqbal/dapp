{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst sha_js_1 = require(\"sha.js\");\n\nfunction hashSha256(input) {\n  const hashFunction = new sha_js_1.sha256();\n  return hashFunction.update(input).digest();\n}\n\nexports.hashSha256 = hashSha256;\n\nfunction hashSha256Async(input) {\n  return __awaiter(this, void 0, void 0, function* () {\n    try {\n      const isSubtleCryptoAvailable = typeof crypto !== 'undefined' && typeof crypto.subtle !== 'undefined';\n\n      if (isSubtleCryptoAvailable) {\n        // Use the W3C Web Crypto API if available (running in a web browser).\n        const buffer = typeof input === 'string' ? Buffer.from(input) : input;\n        const hash = yield crypto.subtle.digest('SHA-256', buffer);\n        return Buffer.from(hash);\n      } else {\n        // Otherwise try loading the Node.js `crypto` module (running in Node.js, or an older browser with a polyfill).\n        const nodeCrypto = require('crypto');\n\n        if (!nodeCrypto.createHash) {\n          throw new Error('`crypto` module does not contain `createHash`');\n        }\n\n        return Promise.resolve(nodeCrypto.createHash('sha256').update(input).digest());\n      }\n    } catch (error) {\n      console.log(error);\n      console.log('Crypto lib not found. Neither the global `crypto.subtle` Web Crypto API, ' + 'nor the or the Node.js `require(\"crypto\").createHash` module is available. ' + 'Falling back to JS implementation.');\n      return Promise.resolve(hashSha256(input));\n    }\n  });\n}\n\nexports.hashSha256Async = hashSha256Async;","map":{"version":3,"sources":["cryptoClients/sha256.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,MAAA,QAAA,GAAA,OAAA,CAAA,QAAA,CAAA;;AAEA,SAAgB,UAAhB,CAA2B,KAA3B,EAAiD;AAC7C,QAAM,YAAY,GAAG,IAAI,QAAA,CAAA,MAAJ,EAArB;AACA,SAAO,YAAY,CAAC,MAAb,CAAoB,KAApB,EAA2B,MAA3B,EAAP;AACH;;AAHD,OAAA,CAAA,UAAA,GAAA,UAAA;;AAKA,SAAsB,eAAtB,CAAsC,KAAtC,EAA4D;;AACxD,QAAI;AACA,YAAM,uBAAuB,GAAG,OAAO,MAAP,KAAkB,WAAlB,IAAiC,OAAO,MAAM,CAAC,MAAd,KAAyB,WAA1F;;AACA,UAAI,uBAAJ,EAA6B;AACzB;AACA,cAAM,MAAM,GAAG,OAAO,KAAP,KAAiB,QAAjB,GAA4B,MAAM,CAAC,IAAP,CAAY,KAAZ,CAA5B,GAAiD,KAAhE;AACA,cAAM,IAAI,GAAG,MAAM,MAAM,CAAC,MAAP,CAAc,MAAd,CAAqB,SAArB,EAAgC,MAAhC,CAAnB;AACA,eAAO,MAAM,CAAC,IAAP,CAAY,IAAZ,CAAP;AACH,OALD,MAKO;AACH;AACA,cAAM,UAAU,GAAG,OAAO,CAAC,QAAD,CAA1B;;AACA,YAAI,CAAC,UAAU,CAAC,UAAhB,EAA4B;AACxB,gBAAM,IAAI,KAAJ,CAAU,+CAAV,CAAN;AACH;;AACD,eAAO,OAAO,CAAC,OAAR,CAAgB,UAAU,CAAC,UAAX,CAAsB,QAAtB,EAAgC,MAAhC,CAAuC,KAAvC,EAA8C,MAA9C,EAAhB,CAAP;AACH;AACJ,KAfD,CAeE,OAAO,KAAP,EAAc;AACZ,MAAA,OAAO,CAAC,GAAR,CAAY,KAAZ;AACA,MAAA,OAAO,CAAC,GAAR,CACI,8EACA,6EADA,GAEA,oCAHJ;AAIA,aAAO,OAAO,CAAC,OAAR,CAAgB,UAAU,CAAC,KAAD,CAA1B,CAAP;AACH;AACJ,G;AAAA;;AAxBD,OAAA,CAAA,eAAA,GAAA,eAAA","sourceRoot":"./","sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst sha_js_1 = require(\"sha.js\");\nfunction hashSha256(input) {\n    const hashFunction = new sha_js_1.sha256();\n    return hashFunction.update(input).digest();\n}\nexports.hashSha256 = hashSha256;\nfunction hashSha256Async(input) {\n    return __awaiter(this, void 0, void 0, function* () {\n        try {\n            const isSubtleCryptoAvailable = typeof crypto !== 'undefined' && typeof crypto.subtle !== 'undefined';\n            if (isSubtleCryptoAvailable) {\n                // Use the W3C Web Crypto API if available (running in a web browser).\n                const buffer = typeof input === 'string' ? Buffer.from(input) : input;\n                const hash = yield crypto.subtle.digest('SHA-256', buffer);\n                return Buffer.from(hash);\n            }\n            else {\n                // Otherwise try loading the Node.js `crypto` module (running in Node.js, or an older browser with a polyfill).\n                const nodeCrypto = require('crypto');\n                if (!nodeCrypto.createHash) {\n                    throw new Error('`crypto` module does not contain `createHash`');\n                }\n                return Promise.resolve(nodeCrypto.createHash('sha256').update(input).digest());\n            }\n        }\n        catch (error) {\n            console.log(error);\n            console.log('Crypto lib not found. Neither the global `crypto.subtle` Web Crypto API, ' +\n                'nor the or the Node.js `require(\"crypto\").createHash` module is available. ' +\n                'Falling back to JS implementation.');\n            return Promise.resolve(hashSha256(input));\n        }\n    });\n}\nexports.hashSha256Async = hashSha256Async;\n//# sourceMappingURL=sha256.js.map"]},"metadata":{},"sourceType":"script"}