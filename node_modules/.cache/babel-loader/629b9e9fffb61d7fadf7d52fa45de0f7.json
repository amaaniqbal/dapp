{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst cheerio = require(\"cheerio\");\n\nconst service_1 = require(\"./service\");\n\nclass Twitter extends service_1.Service {\n  static getBaseUrls() {\n    const baseUrls = ['https://twitter.com/', 'http://twitter.com/', 'twitter.com/'];\n    return baseUrls;\n  }\n\n  static normalizeUrl(proof) {\n    return '';\n  }\n\n  static getProofStatement(searchText) {\n    const $ = cheerio.load(searchText);\n    const statement = $('meta[property=\"og:description\"]').attr('content');\n\n    if (statement !== undefined) {\n      return statement.trim().replace('“', '').replace('”', '');\n    } else {\n      return '';\n    }\n  }\n\n}\n\nexports.Twitter = Twitter;","map":{"version":3,"sources":["../../../src/profiles/services/twitter.ts"],"names":[],"mappings":";;;;;;AACA,MAAA,OAAA,GAAA,OAAA,CAAA,SAAA,CAAA;;AACA,MAAA,SAAA,GAAA,OAAA,CAAA,WAAA,CAAA;;AAEA,MAAM,OAAN,SAAsB,SAAA,CAAA,OAAtB,CAA6B;AAC3B,SAAO,WAAP,GAAkB;AAChB,UAAM,QAAQ,GAAG,CACf,sBADe,EAEf,qBAFe,EAGf,cAHe,CAAjB;AAKA,WAAO,QAAP;AACD;;AAED,SAAO,YAAP,CAAoB,KAApB,EAA8B;AAC5B,WAAO,EAAP;AACD;;AAED,SAAO,iBAAP,CAAyB,UAAzB,EAA2C;AACzC,UAAM,CAAC,GAAG,OAAO,CAAC,IAAR,CAAa,UAAb,CAAV;AACA,UAAM,SAAS,GAAG,CAAC,CAAC,iCAAD,CAAD,CAAqC,IAArC,CAA0C,SAA1C,CAAlB;;AACA,QAAI,SAAS,KAAK,SAAlB,EAA6B;AAC3B,aAAO,SAAS,CAAC,IAAV,GAAiB,OAAjB,CAAyB,GAAzB,EAA8B,EAA9B,EAAkC,OAAlC,CAA0C,GAA1C,EAA+C,EAA/C,CAAP;AACD,KAFD,MAEO;AACL,aAAO,EAAP;AACD;AACF;;AAtB0B;;AAyBpB,OAAA,CAAA,OAAA,GAAA,OAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst cheerio = require(\"cheerio\");\nconst service_1 = require(\"./service\");\nclass Twitter extends service_1.Service {\n    static getBaseUrls() {\n        const baseUrls = [\n            'https://twitter.com/',\n            'http://twitter.com/',\n            'twitter.com/'\n        ];\n        return baseUrls;\n    }\n    static normalizeUrl(proof) {\n        return '';\n    }\n    static getProofStatement(searchText) {\n        const $ = cheerio.load(searchText);\n        const statement = $('meta[property=\"og:description\"]').attr('content');\n        if (statement !== undefined) {\n            return statement.trim().replace('“', '').replace('”', '');\n        }\n        else {\n            return '';\n        }\n    }\n}\nexports.Twitter = Twitter;\n//# sourceMappingURL=twitter.js.map"]},"metadata":{},"sourceType":"script"}