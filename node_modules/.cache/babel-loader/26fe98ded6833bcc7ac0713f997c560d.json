{"ast":null,"code":"// Generated by IcedCoffeeScript 108.0.8\n(function () {\n  var WordArray, X64Word, X64WordArray, buffer_to_ui8a, endian_reverse, ui8a_to_buffer, util;\n  util = require('./util');\n\n  buffer_to_ui8a = function (b) {\n    var i, ret, _i, _ref;\n\n    ret = new Uint8Array(b.length);\n\n    for (i = _i = 0, _ref = b.length; 0 <= _ref ? _i < _ref : _i > _ref; i = 0 <= _ref ? ++_i : --_i) {\n      ret[i] = b.readUInt8(i);\n    }\n\n    return ret;\n  };\n\n  ui8a_to_buffer = function (v) {\n    var i, ret, _i, _ref;\n\n    ret = new Buffer(v.length);\n\n    for (i = _i = 0, _ref = v.length; 0 <= _ref ? _i < _ref : _i > _ref; i = 0 <= _ref ? ++_i : --_i) {\n      ret.writeUInt8(v[i], i);\n    }\n\n    return ret;\n  };\n\n  endian_reverse = function (x) {\n    return x >>> 24 & 0xff | (x >>> 16 & 0xff) << 8 | (x >>> 8 & 0xff) << 16 | (x & 0xff) << 24;\n  };\n\n  exports.WordArray = WordArray = function () {\n    function WordArray(words, sigBytes) {\n      this.words = words || [];\n      this.sigBytes = sigBytes != null ? sigBytes : this.words.length * 4;\n    }\n\n    WordArray.prototype.concat = function (wordArray) {\n      var i, thatByte, thatSigBytes, thatWords, _i;\n\n      thatWords = wordArray.words;\n      thatSigBytes = wordArray.sigBytes;\n      this.clamp();\n\n      if (this.sigBytes % 4) {\n        for (i = _i = 0; 0 <= thatSigBytes ? _i < thatSigBytes : _i > thatSigBytes; i = 0 <= thatSigBytes ? ++_i : --_i) {\n          thatByte = thatWords[i >>> 2] >>> 24 - i % 4 * 8 & 0xff;\n          this.words[this.sigBytes + i >>> 2] |= thatByte << 24 - (this.sigBytes + i) % 4 * 8;\n        }\n      } else {\n        this.words = this.words.concat(thatWords);\n      }\n\n      this.sigBytes += thatSigBytes;\n      return this;\n    };\n\n    WordArray.prototype.clamp = function () {\n      this.words[this.sigBytes >>> 2] &= 0xffffffff << 32 - this.sigBytes % 4 * 8;\n      this.words.length = Math.ceil(this.sigBytes / 4);\n      return this;\n    };\n\n    WordArray.prototype.clone = function () {\n      return new WordArray(this.words.slice(0), this.sigBytes);\n    };\n\n    WordArray.prototype.to_buffer = function () {\n      var ch, out, p, w, _i, _len, _ref;\n\n      out = new Buffer(this.sigBytes);\n      p = 0;\n      _ref = this.words;\n\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        w = _ref[_i];\n\n        if (!(this.sigBytes - p >= 4)) {\n          continue;\n        }\n\n        w = util.fixup_uint32(w);\n        out.writeUInt32BE(w, p);\n        p += 4;\n      }\n\n      while (p < this.sigBytes) {\n        ch = this.words[p >>> 2] >>> 24 - p % 4 * 8 & 0xff;\n        out.writeUInt8(ch, p);\n        p++;\n      }\n\n      return out;\n    };\n\n    WordArray.prototype.endian_reverse = function () {\n      var i, w, _i, _len, _ref;\n\n      _ref = this.words;\n\n      for (i = _i = 0, _len = _ref.length; _i < _len; i = ++_i) {\n        w = _ref[i];\n        this.words[i] = endian_reverse(w);\n      }\n\n      return this;\n    };\n\n    WordArray.prototype.split = function (n) {\n      var i, out, sz;\n\n      if (!(this.sigBytes % 4 === 0 && this.words.length % n === 0)) {\n        throw new Error(\"bad key alignment\");\n      }\n\n      sz = this.words.length / n;\n\n      out = function () {\n        var _i, _ref, _results;\n\n        _results = [];\n\n        for (i = _i = 0, _ref = this.words.length; sz > 0 ? _i < _ref : _i > _ref; i = _i += sz) {\n          _results.push(new WordArray(this.words.slice(i, i + sz)));\n        }\n\n        return _results;\n      }.call(this);\n\n      return out;\n    };\n\n    WordArray.prototype.to_utf8 = function () {\n      return this.to_buffer().toString('utf8');\n    };\n\n    WordArray.prototype.to_hex = function () {\n      return this.to_buffer().toString('hex');\n    };\n\n    WordArray.prototype.to_ui8a = function () {\n      return buffer_to_ui8a(this.to_buffer());\n    };\n\n    WordArray.alloc = function (b) {\n      if (Buffer.isBuffer(b)) {\n        return WordArray.from_buffer(b);\n      } else if (typeof b === 'object' && b instanceof WordArray) {\n        return b;\n      } else if (typeof b === 'string') {\n        return WordArray.from_hex(b);\n      } else {\n        return null;\n      }\n    };\n\n    WordArray.from_buffer = function (b) {\n      var ch, last, p, words;\n      words = [];\n      p = 0;\n\n      while (b.length - p >= 4) {\n        words.push(b.readUInt32BE(p));\n        p += 4;\n      }\n\n      if (p < b.length) {\n        last = 0;\n\n        while (p < b.length) {\n          ch = b.readUInt8(p);\n          last |= ch << 24 - p % 4 * 8;\n          p++;\n        }\n\n        last = util.fixup_uint32(last);\n        words.push(last);\n      }\n\n      return new WordArray(words, b.length);\n    };\n\n    WordArray.from_buffer_le = function (b) {\n      var ch, last, p, words;\n      words = [];\n      p = 0;\n\n      while (b.length - p >= 4) {\n        words.push(b.readUInt32LE(p));\n        p += 4;\n      }\n\n      if (p < b.length) {\n        last = 0;\n\n        while (p < b.length) {\n          ch = b.readUInt8(p);\n          last |= ch << p % 4 * 8;\n          p++;\n        }\n\n        last = util.fixup_uint32(last);\n        words.push(last);\n      }\n\n      return new WordArray(words, b.length);\n    };\n\n    WordArray.from_utf8 = function (s) {\n      return WordArray.from_buffer(new Buffer(s, 'utf8'));\n    };\n\n    WordArray.from_utf8_le = function (s) {\n      return WordArray.from_buffer_le(new Buffer(s, 'utf8'));\n    };\n\n    WordArray.from_hex = function (s) {\n      return WordArray.from_buffer(new Buffer(s, 'hex'));\n    };\n\n    WordArray.from_hex_le = function (s) {\n      return WordArray.from_buffer_le(new Buffer(s, 'hex'));\n    };\n\n    WordArray.from_ui8a = function (v) {\n      return WordArray.from_buffer(ui8a_to_buffer(v));\n    };\n\n    WordArray.from_i32a = function (v) {\n      return new WordArray(Array.apply([], v));\n    };\n\n    WordArray.prototype.equal = function (wa) {\n      var i, ret, w, _i, _len, _ref;\n\n      ret = true;\n\n      if (wa.sigBytes !== this.sigBytes) {\n        ret = false;\n      } else {\n        _ref = this.words;\n\n        for (i = _i = 0, _len = _ref.length; _i < _len; i = ++_i) {\n          w = _ref[i];\n\n          if (util.fixup_uint32(w) !== util.fixup_uint32(wa.words[i])) {\n            ret = false;\n          }\n        }\n      }\n\n      return ret;\n    };\n\n    WordArray.prototype.xor = function (wa2, _arg) {\n      var dst_offset, i, n_words, src_offset, tmp, _i;\n\n      dst_offset = _arg.dst_offset, src_offset = _arg.src_offset, n_words = _arg.n_words;\n\n      if (!dst_offset) {\n        dst_offset = 0;\n      }\n\n      if (!src_offset) {\n        src_offset = 0;\n      }\n\n      if (n_words == null) {\n        n_words = wa2.words.length - src_offset;\n      }\n\n      if (this.words.length < dst_offset + n_words) {\n        throw new Error(\"dest range exceeded (\" + this.words.length + \" < \" + (dst_offset + n_words) + \")\");\n      }\n\n      if (wa2.words.length < src_offset + n_words) {\n        throw new Error(\"source range exceeded\");\n      }\n\n      for (i = _i = 0; 0 <= n_words ? _i < n_words : _i > n_words; i = 0 <= n_words ? ++_i : --_i) {\n        tmp = this.words[dst_offset + i] ^ wa2.words[src_offset + i];\n        this.words[dst_offset + i] = util.fixup_uint32(tmp);\n      }\n\n      return this;\n    };\n\n    WordArray.prototype.truncate = function (n_bytes) {\n      var n_words;\n\n      if (!(n_bytes <= this.sigBytes)) {\n        throw new Error(\"Cannot truncate: \" + n_bytes + \" > \" + this.sigBytes);\n      }\n\n      n_words = Math.ceil(n_bytes / 4);\n      return new WordArray(this.words.slice(0, n_words), n_bytes);\n    };\n\n    WordArray.prototype.unshift = function (n_words) {\n      var ret;\n\n      if (this.words.length >= n_words) {\n        ret = this.words.splice(0, n_words);\n        this.sigBytes -= n_words * 4;\n        return new WordArray(ret);\n      } else {\n        return null;\n      }\n    };\n\n    WordArray.prototype.is_scrubbed = function () {\n      var w, _i, _len, _ref;\n\n      _ref = this.words;\n\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        w = _ref[_i];\n\n        if (w !== 0) {\n          return false;\n        }\n      }\n\n      return true;\n    };\n\n    WordArray.prototype.scrub = function () {\n      return util.scrub_vec(this.words);\n    };\n\n    WordArray.prototype.cmp_ule = function (wa2) {\n      return util.buffer_cmp_ule(this.to_buffer(), wa2.to_buffer());\n    };\n\n    WordArray.prototype.slice = function (low, hi) {\n      var n, sb;\n      n = this.words.length;\n\n      if (!(low < hi && hi <= n)) {\n        throw new Error(\"Bad WordArray slice [\" + low + \",\" + hi + \")] when only \" + n + \" avail\");\n      }\n\n      sb = (hi - low) * 4;\n\n      if (hi === n) {\n        sb -= n * 4 - this.sigBytes;\n      }\n\n      return new WordArray(this.words.slice(low, hi), sb);\n    };\n\n    return WordArray;\n  }();\n\n  exports.X64Word = X64Word = function () {\n    function X64Word(high, low) {\n      this.high = high;\n      this.low = low;\n    }\n\n    X64Word.prototype.clone = function () {\n      return new X64Word(this.high, this.low);\n    };\n\n    return X64Word;\n  }();\n\n  exports.X64WordArray = X64WordArray = function () {\n    function X64WordArray(words, sigBytes) {\n      this.sigBytes = sigBytes;\n      this.words = words || [];\n\n      if (!this.sigBytes) {\n        this.sigBytes = this.words.length * 8;\n      }\n    }\n\n    X64WordArray.prototype.toX32 = function () {\n      var v, w, _i, _len, _ref;\n\n      v = [];\n      _ref = this.words;\n\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        w = _ref[_i];\n        v.push(w.high);\n        v.push(w.low);\n      }\n\n      return new WordArray(v, this.sigBytes);\n    };\n\n    X64WordArray.prototype.clone = function () {\n      var w;\n      return new X64WordArray(function () {\n        var _i, _len, _ref, _results;\n\n        _ref = this.words;\n        _results = [];\n\n        for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n          w = _ref[_i];\n\n          _results.push(w.clone());\n        }\n\n        return _results;\n      }.call(this), this.sigBytes);\n    };\n\n    return X64WordArray;\n  }();\n\n  exports.buffer_to_ui8a = buffer_to_ui8a;\n  exports.ui8a_to_buffer = ui8a_to_buffer;\n  exports.endian_reverse = endian_reverse;\n}).call(this);","map":{"version":3,"sources":["/home/os/Desktop/hello-world-tutorial/node_modules/triplesec/lib/wordarray.js"],"names":["WordArray","X64Word","X64WordArray","buffer_to_ui8a","endian_reverse","ui8a_to_buffer","util","require","b","i","ret","_i","_ref","Uint8Array","length","readUInt8","v","Buffer","writeUInt8","x","exports","words","sigBytes","prototype","concat","wordArray","thatByte","thatSigBytes","thatWords","clamp","Math","ceil","clone","slice","to_buffer","ch","out","p","w","_len","fixup_uint32","writeUInt32BE","split","n","sz","Error","_results","push","call","to_utf8","toString","to_hex","to_ui8a","alloc","isBuffer","from_buffer","from_hex","last","readUInt32BE","from_buffer_le","readUInt32LE","from_utf8","s","from_utf8_le","from_hex_le","from_ui8a","from_i32a","Array","apply","equal","wa","xor","wa2","_arg","dst_offset","n_words","src_offset","tmp","truncate","n_bytes","unshift","splice","is_scrubbed","scrub","scrub_vec","cmp_ule","buffer_cmp_ule","low","hi","sb","high","toX32"],"mappings":"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","sourcesContent":["// Generated by IcedCoffeeScript 108.0.8\n(function() {\n  var WordArray, X64Word, X64WordArray, buffer_to_ui8a, endian_reverse, ui8a_to_buffer, util;\n\n  util = require('./util');\n\n  buffer_to_ui8a = function(b) {\n    var i, ret, _i, _ref;\n    ret = new Uint8Array(b.length);\n    for (i = _i = 0, _ref = b.length; 0 <= _ref ? _i < _ref : _i > _ref; i = 0 <= _ref ? ++_i : --_i) {\n      ret[i] = b.readUInt8(i);\n    }\n    return ret;\n  };\n\n  ui8a_to_buffer = function(v) {\n    var i, ret, _i, _ref;\n    ret = new Buffer(v.length);\n    for (i = _i = 0, _ref = v.length; 0 <= _ref ? _i < _ref : _i > _ref; i = 0 <= _ref ? ++_i : --_i) {\n      ret.writeUInt8(v[i], i);\n    }\n    return ret;\n  };\n\n  endian_reverse = function(x) {\n    return ((x >>> 24) & 0xff) | (((x >>> 16) & 0xff) << 8) | (((x >>> 8) & 0xff) << 16) | ((x & 0xff) << 24);\n  };\n\n  exports.WordArray = WordArray = (function() {\n    function WordArray(words, sigBytes) {\n      this.words = words || [];\n      this.sigBytes = sigBytes != null ? sigBytes : this.words.length * 4;\n    }\n\n    WordArray.prototype.concat = function(wordArray) {\n      var i, thatByte, thatSigBytes, thatWords, _i;\n      thatWords = wordArray.words;\n      thatSigBytes = wordArray.sigBytes;\n      this.clamp();\n      if (this.sigBytes % 4) {\n        for (i = _i = 0; 0 <= thatSigBytes ? _i < thatSigBytes : _i > thatSigBytes; i = 0 <= thatSigBytes ? ++_i : --_i) {\n          thatByte = (thatWords[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n          this.words[(this.sigBytes + i) >>> 2] |= thatByte << (24 - ((this.sigBytes + i) % 4) * 8);\n        }\n      } else {\n        this.words = this.words.concat(thatWords);\n      }\n      this.sigBytes += thatSigBytes;\n      return this;\n    };\n\n    WordArray.prototype.clamp = function() {\n      this.words[this.sigBytes >>> 2] &= 0xffffffff << (32 - (this.sigBytes % 4) * 8);\n      this.words.length = Math.ceil(this.sigBytes / 4);\n      return this;\n    };\n\n    WordArray.prototype.clone = function() {\n      return new WordArray(this.words.slice(0), this.sigBytes);\n    };\n\n    WordArray.prototype.to_buffer = function() {\n      var ch, out, p, w, _i, _len, _ref;\n      out = new Buffer(this.sigBytes);\n      p = 0;\n      _ref = this.words;\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        w = _ref[_i];\n        if (!((this.sigBytes - p) >= 4)) {\n          continue;\n        }\n        w = util.fixup_uint32(w);\n        out.writeUInt32BE(w, p);\n        p += 4;\n      }\n      while (p < this.sigBytes) {\n        ch = (this.words[p >>> 2] >>> (24 - (p % 4) * 8)) & 0xff;\n        out.writeUInt8(ch, p);\n        p++;\n      }\n      return out;\n    };\n\n    WordArray.prototype.endian_reverse = function() {\n      var i, w, _i, _len, _ref;\n      _ref = this.words;\n      for (i = _i = 0, _len = _ref.length; _i < _len; i = ++_i) {\n        w = _ref[i];\n        this.words[i] = endian_reverse(w);\n      }\n      return this;\n    };\n\n    WordArray.prototype.split = function(n) {\n      var i, out, sz;\n      if (!(((this.sigBytes % 4) === 0) && ((this.words.length % n) === 0))) {\n        throw new Error(\"bad key alignment\");\n      }\n      sz = this.words.length / n;\n      out = (function() {\n        var _i, _ref, _results;\n        _results = [];\n        for (i = _i = 0, _ref = this.words.length; sz > 0 ? _i < _ref : _i > _ref; i = _i += sz) {\n          _results.push(new WordArray(this.words.slice(i, i + sz)));\n        }\n        return _results;\n      }).call(this);\n      return out;\n    };\n\n    WordArray.prototype.to_utf8 = function() {\n      return this.to_buffer().toString('utf8');\n    };\n\n    WordArray.prototype.to_hex = function() {\n      return this.to_buffer().toString('hex');\n    };\n\n    WordArray.prototype.to_ui8a = function() {\n      return buffer_to_ui8a(this.to_buffer());\n    };\n\n    WordArray.alloc = function(b) {\n      if (Buffer.isBuffer(b)) {\n        return WordArray.from_buffer(b);\n      } else if ((typeof b === 'object') && (b instanceof WordArray)) {\n        return b;\n      } else if (typeof b === 'string') {\n        return WordArray.from_hex(b);\n      } else {\n        return null;\n      }\n    };\n\n    WordArray.from_buffer = function(b) {\n      var ch, last, p, words;\n      words = [];\n      p = 0;\n      while ((b.length - p) >= 4) {\n        words.push(b.readUInt32BE(p));\n        p += 4;\n      }\n      if (p < b.length) {\n        last = 0;\n        while (p < b.length) {\n          ch = b.readUInt8(p);\n          last |= ch << (24 - (p % 4) * 8);\n          p++;\n        }\n        last = util.fixup_uint32(last);\n        words.push(last);\n      }\n      return new WordArray(words, b.length);\n    };\n\n    WordArray.from_buffer_le = function(b) {\n      var ch, last, p, words;\n      words = [];\n      p = 0;\n      while ((b.length - p) >= 4) {\n        words.push(b.readUInt32LE(p));\n        p += 4;\n      }\n      if (p < b.length) {\n        last = 0;\n        while (p < b.length) {\n          ch = b.readUInt8(p);\n          last |= ch << ((p % 4) * 8);\n          p++;\n        }\n        last = util.fixup_uint32(last);\n        words.push(last);\n      }\n      return new WordArray(words, b.length);\n    };\n\n    WordArray.from_utf8 = function(s) {\n      return WordArray.from_buffer(new Buffer(s, 'utf8'));\n    };\n\n    WordArray.from_utf8_le = function(s) {\n      return WordArray.from_buffer_le(new Buffer(s, 'utf8'));\n    };\n\n    WordArray.from_hex = function(s) {\n      return WordArray.from_buffer(new Buffer(s, 'hex'));\n    };\n\n    WordArray.from_hex_le = function(s) {\n      return WordArray.from_buffer_le(new Buffer(s, 'hex'));\n    };\n\n    WordArray.from_ui8a = function(v) {\n      return WordArray.from_buffer(ui8a_to_buffer(v));\n    };\n\n    WordArray.from_i32a = function(v) {\n      return new WordArray(Array.apply([], v));\n    };\n\n    WordArray.prototype.equal = function(wa) {\n      var i, ret, w, _i, _len, _ref;\n      ret = true;\n      if (wa.sigBytes !== this.sigBytes) {\n        ret = false;\n      } else {\n        _ref = this.words;\n        for (i = _i = 0, _len = _ref.length; _i < _len; i = ++_i) {\n          w = _ref[i];\n          if (util.fixup_uint32(w) !== util.fixup_uint32(wa.words[i])) {\n            ret = false;\n          }\n        }\n      }\n      return ret;\n    };\n\n    WordArray.prototype.xor = function(wa2, _arg) {\n      var dst_offset, i, n_words, src_offset, tmp, _i;\n      dst_offset = _arg.dst_offset, src_offset = _arg.src_offset, n_words = _arg.n_words;\n      if (!dst_offset) {\n        dst_offset = 0;\n      }\n      if (!src_offset) {\n        src_offset = 0;\n      }\n      if (n_words == null) {\n        n_words = wa2.words.length - src_offset;\n      }\n      if (this.words.length < dst_offset + n_words) {\n        throw new Error(\"dest range exceeded (\" + this.words.length + \" < \" + (dst_offset + n_words) + \")\");\n      }\n      if (wa2.words.length < src_offset + n_words) {\n        throw new Error(\"source range exceeded\");\n      }\n      for (i = _i = 0; 0 <= n_words ? _i < n_words : _i > n_words; i = 0 <= n_words ? ++_i : --_i) {\n        tmp = this.words[dst_offset + i] ^ wa2.words[src_offset + i];\n        this.words[dst_offset + i] = util.fixup_uint32(tmp);\n      }\n      return this;\n    };\n\n    WordArray.prototype.truncate = function(n_bytes) {\n      var n_words;\n      if (!(n_bytes <= this.sigBytes)) {\n        throw new Error(\"Cannot truncate: \" + n_bytes + \" > \" + this.sigBytes);\n      }\n      n_words = Math.ceil(n_bytes / 4);\n      return new WordArray(this.words.slice(0, n_words), n_bytes);\n    };\n\n    WordArray.prototype.unshift = function(n_words) {\n      var ret;\n      if (this.words.length >= n_words) {\n        ret = this.words.splice(0, n_words);\n        this.sigBytes -= n_words * 4;\n        return new WordArray(ret);\n      } else {\n        return null;\n      }\n    };\n\n    WordArray.prototype.is_scrubbed = function() {\n      var w, _i, _len, _ref;\n      _ref = this.words;\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        w = _ref[_i];\n        if (w !== 0) {\n          return false;\n        }\n      }\n      return true;\n    };\n\n    WordArray.prototype.scrub = function() {\n      return util.scrub_vec(this.words);\n    };\n\n    WordArray.prototype.cmp_ule = function(wa2) {\n      return util.buffer_cmp_ule(this.to_buffer(), wa2.to_buffer());\n    };\n\n    WordArray.prototype.slice = function(low, hi) {\n      var n, sb;\n      n = this.words.length;\n      if (!((low < hi) && (hi <= n))) {\n        throw new Error(\"Bad WordArray slice [\" + low + \",\" + hi + \")] when only \" + n + \" avail\");\n      }\n      sb = (hi - low) * 4;\n      if (hi === n) {\n        sb -= n * 4 - this.sigBytes;\n      }\n      return new WordArray(this.words.slice(low, hi), sb);\n    };\n\n    return WordArray;\n\n  })();\n\n  exports.X64Word = X64Word = (function() {\n    function X64Word(high, low) {\n      this.high = high;\n      this.low = low;\n    }\n\n    X64Word.prototype.clone = function() {\n      return new X64Word(this.high, this.low);\n    };\n\n    return X64Word;\n\n  })();\n\n  exports.X64WordArray = X64WordArray = (function() {\n    function X64WordArray(words, sigBytes) {\n      this.sigBytes = sigBytes;\n      this.words = words || [];\n      if (!this.sigBytes) {\n        this.sigBytes = this.words.length * 8;\n      }\n    }\n\n    X64WordArray.prototype.toX32 = function() {\n      var v, w, _i, _len, _ref;\n      v = [];\n      _ref = this.words;\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        w = _ref[_i];\n        v.push(w.high);\n        v.push(w.low);\n      }\n      return new WordArray(v, this.sigBytes);\n    };\n\n    X64WordArray.prototype.clone = function() {\n      var w;\n      return new X64WordArray((function() {\n        var _i, _len, _ref, _results;\n        _ref = this.words;\n        _results = [];\n        for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n          w = _ref[_i];\n          _results.push(w.clone());\n        }\n        return _results;\n      }).call(this), this.sigBytes);\n    };\n\n    return X64WordArray;\n\n  })();\n\n  exports.buffer_to_ui8a = buffer_to_ui8a;\n\n  exports.ui8a_to_buffer = ui8a_to_buffer;\n\n  exports.endian_reverse = endian_reverse;\n\n}).call(this);\n"]},"metadata":{},"sourceType":"script"}